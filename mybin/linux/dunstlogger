#!/usr/bin/env zsh

# Desc: Log dunst messages to json

# DUNST_APP_NAME
# DUNST_SUMMARY
# DUNST_BODY
# DUNST_ICON_PATH,
# DUNST_URGENCY
# DUNST_ID
# DUNST_PROGRESS
# DUNST_CATEGORY
# DUNST_STACK_TAG
# DUNST_URLS
# DUNST_TIMEOUT,
# DUNST_TIMESTAMP
# DUNST_DESKTOP_ENTRY
################
# appname, summary, body, icon_path, urgency

# Creates a summary like:
# {
#   "dunstify": {
#     "3": {
#       "summary": "hi hooo",
#       "body": "",
#       "category": "",
#       "urls": "",
#       "timeout": 5000,
#       "icon": "/home/lucas/.config/dunst/icons/GruvboxIcon.png",
#       "urgency": "NORMAL",
#       "timestamp": "03/03/2023 05:10PM"
#     },
#     "4": {
#       "summary": "Summary here",
#       "body": "Body here",
#       "category": "",
#       "urls": "",
#       "timeout": 5000,
#       "icon": "/home/lucas/.config/dunst/icons/GruvboxIcon.png",
#       "urgency": "NORMAL",
#       "timestamp": "03/03/2023 05:11PM"
#     }
#   }
# }

# Exported is needed for jq
typeset -gx app inner_json
typeset -a info
local timestamp epoch file tfile json

(( $+commands[jq] ))  || {
  print -Pr "%F{1}%Bjq%f%b needs to be installed to manipulate json objects"; exit 1;
}
(( $+commands[rjo] )) || {
  print -Pr "%F{1}%Brjo%f%b needs to be installed to construct json objects"; exit 1;
}
(( $+commands[sponge] )) || {
  print -Pr "%F{1}%Bsponge%f%b needs to be installed to read and write from same file"; exit 1;
}

# Delete trailing newlines
# info=( ${${(s: :)${(Q)@}}%%[$'\n']} )
# info=( "${(@)${(@)@}%%[$'\n']}" )
# app="$info[1]"
# epoch=$(date +"%s")
timestamp=$(date +"%m/%d/%Y %I:%M%p")
file="${TMPDIR:-/tmp}/dunstlog"
# tfile="~/test/output"

json="$(command rjo \
  "$DUNST_APP_NAME"="$(\
    rjo \
      $DUNST_ID="$(\
        rjo \
          summary=$DUNST_SUMMARY \
          body=$DUNST_BODY \
          category=$DUNST_CATEGORY \
          urls=$DUNST_URLS \
          timeout=$DUNST_TIMEOUT \
          icon=$DUNST_ICON_PATH \
          urgency=$DUNST_URGENCY \
          timestamp=$timestamp \
          numeric_timestamp=$DUNST_TIMESTAMP \
      )" \
  )"
)"

[[ ! -f "$file" ]] && print -r -- "$json" > "$file"

inner_json="$(jq -r --compact-output '.[env.DUNST_APP_NAME]' <<< $json)"

command jq ".[env.DUNST_APP_NAME] += $inner_json" $file | sponge "$file"

# vim: ft=zsh:et:sw=0:ts=2:sts=2:fdm=marker:fmr={{{,}}}:
