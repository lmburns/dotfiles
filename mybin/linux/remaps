#!/bin/sh

# Sets caps lock to a hyper key when held down
# Sets caps lock to escape when pressed alone
# Sets caps lock to caps lock when pressed with shift

# https://superuser.com/questions/1610715/how-can-i-use-caps-as-a-function-key-to-activate-arbitrary-combinations-on-oth
# https://unix.stackexchange.com/questions/414926/bind-capshjkl-to-arrow-keys-caps-to-esc

#################

# keysym:
    # 1. key
    # 2. shift+key
    # 3. mode_switch+key
    # 4. mode_switch+shift+key
    # 5. iso_level3_shift+key
    # 6. iso_level3_shift+shift+key

# .xserverrc
# exec /usr/bin/X -ardelay 300 -arinterval 50 -nolisten tcp "$@"

xset r rate 300 50
setxkbmap -layout us
setxkbmap -option shift:both_capslock # Both shifts become caps lock
# Switch super and alt (some keyboards have them switched)
setxkbmap -option altwin:swap_alt_win

# setxkbmap -option caps:hyper

# PrintScreen to F13
# setxkbmap -option apple:alupckeys

# setxkbmap -option caps:escape
mod="Hyper_L"

xmodmap -e "clear lock"
xmodmap -e "clear control"
xmodmap -e "clear mod3"
xmodmap -e "clear mod4"

# xmodmap -e "keycode 66 = $mod Caps_Lock"
xmodmap -e "keycode 66 = $mod"

# Original Hyper_L binding -- remove it so mod3 isn't 2 Hyper_L's
# May not be necessary. The problem is that Hyper + Key registers as mod3 + key
xmodmap -e "keycode 207 ="

xmodmap -e "add mod3 = $mod"
xmodmap -e "add control = Control_L Control_R"
xmodmap -e "add mod4 = Super_L Super_R"

xmodmap -e "keycode any = Escape"

# xmodmap -e "keycode 107 = Sys_Req"
# xmodmap -e "keycode 110 = Sys_Req"

killall xcape 2>/dev/null ; xcape -e "$mod=Escape"

# setxkbmap -option caps:hyper
