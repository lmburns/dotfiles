# https://neomutt.org/guide/reference
# https://neomutt.org/guide/configuration.html
#   27.3. User-Defined Variables
# https://neomutt.org/guide/advancedusage

# https://neomutt.org/feature/custom-tags
# https://neomutt.org/feature/notmuch
# https://gist.github.com/guiniol/5109c5bd953af950e0530b720507d704
# ══════════════════════════════════════════════════════════════════════
# set reverse_alias;    set reverse_alias=yes
# set noreverse_alias;  set reverse_alias=no;  unset reverse_alias
# set invreverse_alias; toggle reverse_alias
# set &reverse_alias;   reset reverse_alias
# <enter-command>set reverse_alias?
# set reverse_alias? | shows option value

#  notmuch search --output=files --format=text0 tag:killed | xargs -r0 rm
#  notmuch new

# set debug_file=""
# set debug_level=3   # 1-5

# === [[[
unset signature
set hostname = "archbox"
set mailcap_path =   "/home/lucas/.config/mutt/mailcap:$mailcap_path"

#  ╭─────────╮
#  │ notmuch │
#  ╰─────────╯
set nm_record = yes
# set nm_record_tags = ""
set nm_config_file = "/home/lucas/.config/notmuch/notmuch-config"
set nm_default_url = "notmuch:///home/lucas/.local/share/mail"
set nm_query_type =  "messages"

set hidden_tags="unread,draft,flagged,passed,replied,attachment,signed,encrypted"
set nm_flagged_tag = "flagged"
set nm_replied_tag = "replied"
set nm_unread_tag  = "unread"
set nm_exclude_tags = "trash"
# ]]]

#  ╭──────────────────────────────────────────────────────────╮
#  │                         Options                          │
#  ╰──────────────────────────────────────────────────────────╯ [[[
# set allow_ansi=yes        # ANSI color codes and rich-text are interpreted
# set help=no               # describe bindings for major functions
# set meta_key=yes          # interpret meta key as pressing escape + key
# set bounce=no             # don't ask to bounch a message

# === Overall === [[[
set abort_key      = "\Cx"                                     # cancel prompt
set editor         = "nvim +/^$/+1 +':noh'"                    # editor used by neomutt
set display_filter = "tac | sed '/\\\[-- Autoview/,+1d' | tac" # command used to filter messages
set smtp_authenticators='gssapi:login'   # authentication methods neomutt will try to login to SMTP
set smileys="(>From )|(:[-^]?[][)(><}{|/DP])"
set charset="utf-8"
set send_charset="us-ascii:utf-8"
set assumed_charset="utf-8"

set header_cache_backend="gdbm"

set virtual_spool_file = yes # use first defined virutal mailbox as spool file
set mail_check_stats   = yes # periodically check mail stats
set mail_check         = 60  # avoid lags using IMAP with some email providers
set sleep_time         = 0   # pause 0 seconds for informational messages
set timeout            = 10  # how long to wait for user input
set sendmail_wait      = 1   # number of secs for $sendmail command to wait before giving up
set beep               = no  # don't beep on error
set beep_new           = no  # don't beep on new mail
set rfc2047_parameters = yes ## [bool:yes] decode RFC2047-encoded MIME parameters
set copy               = yes ## [quadopt:yes] always save a copy of outgoing msgs
set copy_decode_weed   = no  ## [bool:no] weed headers with <decode-copy> or <decode-save>

## use_threads  [enum]  [unset]
# Style of threading used in the index.
#    - "flat"    = no threading (alias: no)
#    - "threads" = threaded, with sub‐threads below root msg (alias: yes)
#    - "reverse" = threaded, with subthreads above root msg
set use_threads      = threads
set collapse_all     = no  ## [bool:no]  if set, collapse all threads when entering a folder
set collapse_flagged = yes ## [bool:yes] if unset, won't collapse thread if it contains any flagged msgs
set collapse_unread  = yes ## [bool:yes] if unset, won't collapse thread if it contains any unread msgs
set uncollapse_jump  = yes ## [bool:no]  if set, jump next unread msg (if any) when curr thread uncollapsed
set uncollapse_new   = yes ## [bool:yes] if set, auto uncollapse any collapsed thread that receives a new msg
set digest_collapse  = yes ## [bool:yes] if set, attach menu won't show subparts of messages (use 'v' to see that)
# ]]]

# === History === [[[
set history=100
set history_file="~/.cache/mutt/history"
set history_remove_dups=yes
# ]]]

# === Tags === [[[
# set auto_tag=no
# ]]]

# === Navigation === [[[
set change_folder_next = yes   # <change-folder> starts at next folder, not first
# ]]]

# === Pager === [[[
set tilde             = yes # pad blank lines at end of pager
set wait_key          = no  # don't ask "press key to continue"
set smart_wrap        = yes # line wraps at word boundary
set markers           = no  # disables the `+` displayed at line wraps
set menu_context      = 5   # offscroll when using menus
set menu_move_off     = no  # bottom entry will never move anywhere besides the bottom
set menu_scroll       = yes # scroll one line when crossing screen boundary
set pager_stop        = yes # don't move to next message at end
set pager_context     = 5   # offscroll when using pager
set pager_index_lines = 10  # number of lines shown of index when using pager
set pager_format      = "-%Z- %C/%m: %-20.20n   %s%*  -- (%P)"
# ]]]

# === Mail composition === [[[
set text_flowed   = yes          # enable format=flowed
set content_type  = "text/plain" # default content type for new messages
set user_agent    = yes          # add "User-Agent:" header to outgoing messages, neomutt version
set use_from      = yes          # generate the "From:" header field when sending messages
set use_domain    = no           # qualify all local addresses (ones that end with @host)
set reverse_alias = yes          # display personal name for your aliases in index menu
set reverse_name  = yes          # reply as whomever it was to
# set auto_edit = yes           # go to the editor right away when composing

# set include_encrypted=yes     # include encrypted attachment as well
set include=yes               # include message in replies
set edit_headers=yes          # include headers in composition for editing
set header=yes                # include the header of msg replying to into the edit buffer
set compose_show_user_headers # display user headers my_hdr in composition
set mime_forward=ask-no       # attachments are forwarded with mail
set mime_forward_rest=yes     # when attachments are being forwarded and can't be dcoeded, attach to new message
set forward_quote=yes         # include message in forwards
set forward_attachments=ask-yes
# set attribution = "On %D, %n wrote:"       # string that precedes msg included in reply NOTE: updated attribution_intro
set attribution = "On %{%a, %d %b %Y %H:%M %z}, %n wrote:"
set forward_attribution_intro="----- Forwarded message from %f -----" # precede forwarded msg
set forward_attribution_trailer="----- End forwarded message -----"   # follow forwarded msg
set attach_save_dir="./"   # directory where attachments are saved
set fcc_attach=yes         # save attachments with the body
set fast_reply=yes         # skip to compose when replying
set abort_backspace=yes    # hitting backspace against an empty prompt aborts the prompt
set abort_nosubject=yes    # no subject = abort
set abort_noattach=ask-yes # compose message matching $abort_noattach_regex & no attachments, composition aborted
set abort_noattach_regex = "\<(attach|attached|attachments?)\>"
set empty_subject="Re: your mail"  # subject used when replying to an email with empty subject
# ]]]

# === Mailbox handling === [[[
# set maildir_trash        # keep old mail around to complete threads
set move             = no  # don't move as result of hook
set confirm_append   = no  # don't confirm append to other mailbox
set confirm_create   = yes # confirm creation of new mailboxes
set mark_old         = no  # don't mark new unread as old when exiting
set abort_unmodified = yes # unmodified drafts saved to inbox, not discard
# ]]]

# === Query === [[[
set count_alternatives = no     # recurse inside multipart/alternatives when counting attachments

# set query_command = "khard email --parsable --search-in-source-files '%s'"
set query_command = "abook --config $XDG_CONFIG_HOME/abook/abookrc --datafile $XDG_DATA_HOME/abook/addressbook --mutt-query '%s'"

# set query_command="abook --mutt-query '%s'" macro pager A |'abook --add-email'\n

# set query_command="notmuch address %s"            # command used to make external address queries
# set query_format="%5c %t %a %n %?e?(%e)?"

set mime_type_query_command="file --mime-type -b %s"
# set external_search_command=""
# ]]]

# === Flags === [[[
# 1   *       is tagged
# 2   !       is flagged as important
# 3   D       is marked for deletion
# 4   d       has attachments marked for deletion
# 5   r       has been replied to
# 6   O       is Old (Unread but seen)
# 7   N       is New (Unread but not seen)
# 8   o       thread is Old (Unread but seen)
# 9   n       thread is New (Unread but not seen)
# 10  -       is read - %S expando
# 11  <space> is read - %Z expando
set flag_chars="*!DdrONon- "
set flag_safe=yes                  # flagged messages can't be deleted
#  ══════════════════════════════════════════════════════════════════════
set status_chars="U*%A"            # %r in status_format -- unchanged, changed, read-only, attach-message mode
#  ══════════════════════════════════════════════════════════════════════
# 1 S       mail is signed, and the signature is successfully verified
# 2 P       mail is PGP encrypted
# 3 s       mail is signed
# 4 K       mail contains a PGP public key
# 5 <space> mail has no crypto info
set crypt_chars="SPsK"        # chars used in cryptography flags
#  ══════════════════════════════════════════════════════════════════════
# 1  written by you and has a To address, or known list in To
# 2  written by you and has a Cc address, or known list in Cc
# 3  written by you and has a Bcc address
# 4  All remaining cases.
# set from_chars=""             # char used to prefix the %F and %L fields in the index
# ]]]

# === Sorting === [[[
set sort=reverse-date        # threads
set sort_aux=date-received   # last-date
set sort_browser=reverse-date
set strict_threads
# ]]]

# === Size === [[[
set size_show_bytes=yes     # display bytes for values < 1KB
set size_show_fractions=yes # display single decimal for sizes 0-10KB and 1-10MB
set size_show_mb=yes        # display MB for values >= 1MB
set size_units_on_left=no
# ]]]

# === Sidebar mappings === [[[
set sidebar_visible = yes
set sidebar_width = 20
set sidebar_short_path = yes
set sidebar_next_new_wrap = yes
set sidebar_divider_char = "¦"
set sidebar_format = "%D%?F? [%F]?%* %?N?%N/? %?S?%S?"
# ]]]

# === Formats === [[[
# TIP:
# %?<sequence_char>?<optional_string>?
# %?<sequence_char>?<if_string>&<else_string>?
#  ══════════════════════════════════════════════════════════════════════
set alias_format = "%3n %f%t %-15a %-56r | %c"
set forward_format = "Fwd: %a %s"  # Fwd: %s
set message_format = "%s"
set compose_format = "-- Compose  [Approx. size: %l   Attrs: %a]%>-"
set attach_format = "%u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s]"
set date_format = "%y/%m/%d %I:%M%p"       # "!%a, %b %d, %Y at %I:%M:%S%p %Z"
set pager_format = "%C/%m [%Z]: %-20.20n %s%* -- (%P)"
# %2C %t %N %F %2l %-8.8u %-8.8g %8s %d %i
set folder_format = "%2C %18D %6s %?n?%6n& ? %6m %i"
set group_index_format = "%4C %M%N %5s  %-45.45f %d"
set status_format = "%r%f %?l?%l? [M:%?M?%M/?%m:%?n?  N:%n?%?o?  O:%o?%?d?  D:%d?%?F?  !:%F?%?t?  *:%t?%?b?  MBOX:%b?]%>  %h (%s/%S%?V?-%V?)  (%P)"
# ]]]

# === GPG === [[[
set autocrypt = no                                  # passive encryption w/ keys passed via header
set autocrypt_acct_format = "%4n %-30a %20p %10s"
set autocrypt_dir = "~/.cache/mutt/autocrypt"
set autocrypt_reply = yes

set crypt_auto_encrypt=no            # auto encrypt outgoing
set crypt_auto_sign=yes              # auto sign outgoing
set crypt_auto_smime=no              # auto enable smime signing
set crypt_opportunistic_encrypt=yes  # encryption when recip key is available
set crypt_reply_encrypt=yes          # auto encrypt to replies that are encrypted
set crypt_reply_sign_encrypted=yes   # auto sign replies that are encrypted
set crypt_reply_sign=yes             # auto encrypt replies that are signed
set crypt_verify_sig=yes             # always attempt to verify
set crypt_use_gpgme=yes              # gpgme backend
set pgp_use_gpg_agent=yes            # use pgp agent for caching passwords
set pgp_self_encrypt=yes             # also be encrypt to C_SmimeDefaultKey
set pgp_default_key='0xC011CBEF6628B679' # default key
set pgp_sign_as='0xC011CBEF6628B679'
set pgp_entry_format="%4n %t%f %4l/0x%k %-4a %2c %u"
set pgp_timeout=900
set pgp_long_ids=yes
# set pgp_auto_decode=yes

# Decode application/pgp (attachment)
set pgp_decode_command="\
  gpg --status-fd=2 %?p?--pinentry-mode loopback --passphrase-fd 0? \
  --no-verbose --quiet --batch --output - %f"

# Verify a signature
set pgp_verify_command="gpg --status-fd=2 --no-verbose --quiet --batch --output - --verify %s %f"

# Decrypt an attachment
set pgp_decrypt_command="\
  gpg --status-fd=2 %?p?--pinentry-mode loopback --passphrase-fd 0? \
  --no-verbose --quiet --batch --output - --decrypt %f"

# Mime signed attachment
set pgp_sign_command="\
  gpg %?p?--pinentry-mode loopback --passphrase-fd 0? \
  --no-verbose --batch --quiet --output - --armor \
  --textmode %?a?--local-user %a? --detach-sign %f"

# Application/pgp inline
set pgp_encrypt_only_command="\
  /usr/bin/pgpewrap gpg --batch --quiet --no-verbose --output - \
  --textmode --armor --encrypt -- --recipient %r -- %f"

# Encrypted attachement
set pgp_encrypt_sign_command="\
  /usr/bin/pgpewrap gpg %?p?--pinentry-mode loopback --passphrase-fd 0? \
  --batch --quiet --no-verbose --textmode --output - %?a?--local-user %a? \
  --armor --sign --encrypt -- --recipient %r -- %f"

# Import key
set pgp_import_command="gpg --no-verbose --import %f"

# Export key
set pgp_export_command="gpg --no-verbose --armor --export %r"

# Verify key
set pgp_verify_key_command="gpg --verbose --batch --fingerprint --check-sigs %r"

# Read public keyring
set pgp_list_pubring_command="\
  gpg --no-verbose --batch --quiet --with-colons --with-fingerprint --with-fingerprint --list-keys %r"

# Read secret keyring
set pgp_list_secring_command="\
  gpg --no-verbose --batch --quiet --with-colons --with-fingerprint --with-fingerprint --list-secret-keys %r"

set pgp_good_sign="^\\[GNUPG:\\] GOODSIG" # text indicating good sig
# ]]]
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                            Bindings / Rebindings                             │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
#
# Defined maps:
#   alias, attach, browser, compose, editor, generic,
#   index, mix, pager, pgp, postpone, query, smime

# bind pager,index s       noop
# bind index,pager c       noop

bind index,pager g       noop
bind index,pager C       noop
bind index,pager i       noop
bind index,pager d       noop
bind index,pager m       noop
bind index,pager t       noop
bind index,pager v       noop
bind index       \Cf     noop
bind index       z       noop
bind index       h       noop
bind editor      <Space> noop

bind attach,browser g    noop

bind  compose   R rename-attachment
bind  compose \Co rename-file
macro compose   a '<attach-file>~/<Tab><Tab><sort>a' "show home directory sorted"

bind attach,browser,pager,index   \Cu half-up
bind attach,browser,pager,index   \Cd half-down
bind attach,browser,pager         \Cf next-page
bind attach,browser,pager         \Cb previous-page
bind browser,pager                \Ce next-line
bind browser,pager                \Cy previous-line
bind browser,pager,index            N search-opposite

bind  attach <Enter>  view-mailcap
bind  attach  h       exit
bind  attach  l       view-mailcap
bind  attach gg       first-entry
bind  attach  G       last-entry
bind  attach  T       view-text
bind  attach  t       view-text
macro attach  S <save-entry><kill-line>~/Downloads/<Enter>y "save entry to downloads"

# bind browser  h goto-parent
# bind  browser             gg  top-page
# bind  browser             G   bottom-page
macro browser  h  '<change-dir><kill-line>..<Enter>' "go to parent folder"
bind  browser  l  select-entry
bind  browser gg  first-entry
bind  browser  G  last-entry

# bind pager 0    next-page
bind pager  h   exit
bind pager  j   next-line
bind pager  k   previous-line
bind pager  l   view-attachments
bind pager  J   half-down
bind pager  K   half-up
bind pager  d   half-down
bind pager  u   half-up
bind pager  gg  top
bind pager  G   bottom
bind pager \031 previous-line      # Mouse wheel
bind pager \005 next-line          # Mouse wheel
bind pager  }   next-undeleted
bind pager  {   previous-undeleted
bind pager \Cj  next-undeleted
bind pager \Ck  previous-undeleted

# bind pager,index  dT   delete-thread
# bind pager,index  dt   delete-subthread
bind pager,index   .   sidebar-toggle-visible
bind pager,index   O   sidebar-open
bind pager,index \Cn   sidebar-next-new
bind pager,index \Cp   sidebar-prev-new
bind pager,index   >   sidebar-next-new
bind pager,index   <   sidebar-prev-new
bind pager,index  ]t   next-thread
bind pager,index  [t   previous-thread
bind pager,index  ]u   next-new-then-unread
bind pager,index  [u   previous-new-then-unread
bind pager,index  ]]   next-unread
bind pager,index  [[   previous-unread
bind pager,index  [p   parent-message
bind pager,index  +    entire-thread
bind pager,index  S    sync-mailbox
bind pager,index  M    mail
# bind pager,index  I    group-reply
bind pager,index  R    compose-to-sender

bind index  gg       first-entry
bind index  G        last-entry
bind index  J        sidebar-next
bind index  K        sidebar-prev
bind index  j        next-entry
bind index  k        previous-entry
bind index  l        display-message
bind index \031      previous-undeleted # Mouse wheel
bind index \005      next-undeleted     # Mouse wheel
bind index <Backtab> previous-new-then-unread
bind index <Tab>     next-new-then-unread
# bind index \Ce     next-line
# bind index \Cy     previous-line
bind index  L        limit
bind index <Space>   tag-entry
bind index  zA       collapse-all
bind index  za       collapse-thread
bind index  zc       collapse-thread
bind index  zo       collapse-thread
bind index  z.       collapse-all
bind index  z,       collapse-thread
bind index \C_       what-key
bind index  U        undelete-message
bind index  u        toggle-new
bind index  D        delete-message
bind index  dd       delete-pattern
bind index  dT       delete-thread
bind index  dt       delete-subthread
macro index dA       "<tag-pattern>.<Enter><tag-prefix><delete-message><sync-mailbox>" "toggle all for deletion"
macro index 0d       "<tag-pattern>.<Enter><tag-prefix><delete-message><sync-mailbox>" "toggle all for deletion"
macro index gn       "<change-folder><Enter>"    "go to next inbox with unread emails"
macro index gN       "<change-folder>!<Enter>"   "go to prev inbox with unread emails"

bind query  <Space>  tag-entry
bind editor <Delete> delete-char
bind editor <Tab>    complete-query # Completion
bind editor \Ct      complete       # Completion
bind generic  0      next-page

# ~  mark-message   create a hotkey macro for the current message
# Y  edit-label     add, change, or delete a message's label
# u  toggle-new     toggle a message's 'new' flag
# tt modify-labels  modify (notmuch/imap) tags
# w  set-flag       set a status flag on a message
# W  clear-flag     clear a status flag from a message
# F  flag-message   toggle a message's 'important' flag

bind pager,index V   view-attachments
bind pager,index E   view-raw-message
bind pager,index vr  view-raw-message
bind pager,index vl  show-limit
macro index      va  "<limit>all<Enter>"        "show all messages (undo limit)"

bind  index  f  noop
bind  index \Ct untag-pattern
bind  index  tu untag-pattern
macro index  B  "<limit>all<Enter>"          "show all messages (undo limit)"
macro index  t, "<tag-pattern>~A<Enter>"     "select all emails"
macro index  t. "<untag-pattern>~A<Enter>"   "unselect all emails"
macro index  ta "<tag-pattern>~A<Enter>"     "select all emails"
macro index  tA "<untag-pattern>~A<Enter>"   "unselect all emails"
macro index  tr "<tag-pattern>~U<Enter><tag-prefix><clear-flag>N<untag-pattern>.<Enter>" "mark all messages as read"
macro index \Cr "<tag-pattern>~U<Enter><tag-prefix><clear-flag>N<untag-pattern>.<Enter>" "mark all messages as read"
bind  index  fl limit
macro index  fL "<limit>all<Enter>"       "show all messages (undo limit)"
bind  index  fs  search
macro index  fb "<search>~b "             "search message bodies"
macro index  fB "<search>~B "             "search whole message"
macro index  fc "<search>~C "             "search message To: and Cc: fields"
macro index  fF "<search>~f "             "search message From:"
macro index  fh "<search>~h "             "search message header"
macro index  fj "<search>~s "             "search message subject field"
macro index  ft "<search>~t "             "search message addressed to"
# ~e EXPR         msgs which contains EXPR in the “Sender” field
# ~L EXPR         msgs either originated or received by EXPR
# ~M EXPR         msgs which contain a mime Content-Type matching EXPR

# generate virtual folder from query with time window
# bind index < vfolder-window-backward
# bind index > vfolder-window-forward
macro index       \\ "<vfolder-from-query>"
bind index,pager  c   change-vfolder
macro index,pager ,t "<modify-tags-then-hide>!todo<enter>" "tag: toggle message as todo"
macro index,pager ,i  "<modify-tags-then-hide>!flagged<enter>" "tag: toggle message as flagged"
macro index,pager ,j "<modify-tags-then-hide>-inbox -flagged !junk<enter>" "tag: toggle message as junk"
macro index,pager ,a "<modify-tags-then-hide>-inbox -flagged !archive<enter>" "tag: toggle message as archived"
macro index,pager ,u "<modify-tags-then-hide>-inbox -flagged !unread<enter>" "tag: toggle message as unread"
macro index,pager ,d "<modify-tags-then-hide>-inbox -flagged !trash<enter>" "tag: toggle as trash"
macro index,pager ,x  "<modify-tags-then-hide>!inbox<enter>" "tag: toggle inbox"
bind index,pager  ,y  modify-labels
bind index,pager  ,g  modify-tags
# macro index,pager ,a "<modify-labels>+archive -unread -inbox<enter>" "mark message as archived"

macro index,pager ,A \
  "<tag-thread><tag-prefix-cond><modify-labels-then-hide>-inbox -important -todo +archive<enter>" \
  "mark thread as archived"

macro index      \Cy "<search>~b "             "search message bodies"
macro index        y "<change-vfolder>?"       "show incoming mailboxes list"
macro pager        y "<exit><change-vfolder>?" "show incoming mailboxes list"
bind  browser      y exit

macro index      \Co "<shell-escape>mw -Y<Enter>" "run mw -Y to sync all mail"

macro index,pager x "<save-message>!<enter>"         "save to inbox"
macro index,pager X "<purge-message><sync-mailbox>"  "purge deleted and sync mailbox"

# macro index,pager I "c!<enter><limit>~(! ~D)<enter>G" "inbox"
# macro index,pager S "<change-folder-readonly>~/temp/sent_materialized<enter>G" "sent mail"

# macro index,pager E "s=receipts<enter>" "save to receipts"
# macro index,pager gi "<change-folder>=INBOX<enter>" "go to inbox"
# macro index,pager mi ";<save-message>=INBOX<enter>" "move mail to inbox"
# macro index,pager Ci ";<copy-message>=INBOX<enter>" "copy mail to inbox"

bind  pager,index  s  save-message
bind  pager,index ,s  save-message
bind  pager,index ,r  recall-message
bind  pager,index ,f  forward-message
bind  pager,index ,b  bounce-message
macro pager,index ,C  "<pipe-message>xsel -i -b<enter>" "copy raw message"
macro pager,index ,c  \
  "<enter-command> set my_pipe_decode=\$pipe_decode pipe_decode<Enter>\
  <pipe-message>  xsel -ib --trim<Enter>\
  <enter-command> set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<Enter>" \
  "copy message"
macro pager,index ,h  \
  "<view-attachments>/html<Enter><Enter>" \
  "view HTML attachment"
macro pager,index ,e  \
  "<view-attachments>/plain<Enter><Enter>" \
  "view text/plain attachment in editor"

# Deleting a message should also clear the 'new' flag
# macro index D \
#   "<enter-command>set my_resolve=\$resolve noresolve<Enter>\
#   <clear-flag>N\
#   <enter-command>set resolve=\$my_resolve &my_resolve<Enter><delete-message>" \
#   "delete the current entry"

# folder-hook notmuch:// \
# 'macro index D \
# "<enter-command>set my_resolve=\$resolve noresolve<enter>\
# <modify-tags-then-hide>+trash\
# <enter-command>set resolve=\$my_resolve &my_resolve<enter><delete-message>" \
# "delete the current entry"'

# r                     reply                             reply to a message
# f                     forward-message                   forward a message with comments
# <Esc>e                resend-message                    use the current message as a template for a new one
# b                     bounce-message                    remail a message to another user
# P                     parent-message                    jump to parent message in thread
# Q                     query                             query external program for addresses
# c                     change-folder                     open a different folder
# @                     display-address                   display full address of sender
# ^K                    extract-keys                      extract supported public keys
# <Esc>C                decode-copy                       make decoded (text/plain) copy
# <Esc>P                check-traditional-pgp             check for classic PGP
# <Esc>k                mail-key                          mail a PGP public key
# <Esc>s                decode-save                       make decoded copy (text/plain) and delete

# == Documentation == [[[
macro generic,pager <F1> "<shell-escape> colorman neomuttrc<Enter>"                     "show NeoMutt documentation"
macro generic,pager <F4> "<shell-escape> less /usr/share/doc/neomutt/manual.txt<Enter>" "show NeoMutt documentation"
# ]]]

# == Address Book == [[[
macro index,pager a \
"<enter-command>set my_pipe_decode=\$pipe_decode pipe_decode<enter>\
<pipe-message>abook --add-email<enter>\
<enter-command>set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<enter>" \
  "add the sender address to abook"

# Press A to add contact to Khard address book
# macro index,pager A \
#     "<pipe-message>khard add-email<enter>" \
#     "add the sender email address to khard"
# ]]]

# "<enter-command>set my_wait_key=\$wait_key nowait_key<enter>\
# <enter-command>set wait_key=\$my_wait_key &my_wait_key<enter>" \

# TODO: Move messages to the $mbox folder
# macro index,pager A \
# "<enter-command>set my_resolve=\$resolve noresolve<enter>\
# <clear-flag>N\
# <enter-command>set resolve=\$my_resolve &my_resolve<enter>\
# <save-message>\><enter><sync-mailbox><refresh>" \
#   "archive message"

# change this setting once and view the HTML part in priority
# macro index H \
# "<enter-command>unalternative_order *<enter><display-message>\
# <enter-command>alternative_order text/plain text/enriched text/html<enter>" \
#   "view html"

# Open message with viewhtmlmsg
macro index,pager H \
"<enter-command>set my_wait_key=\$wait_key my_pipe_decode=\$pipe_decode nowait_key nopipe_decode<enter>\
<pipe-message>viewhtmlmsg -s<enter>\
<enter-command>set wait_key=\$my_wait_key pipe_decode=\$my_pipe_decode &my_pipe_decode &my_wait_key<enter>" \
  "view HTML in browser"

macro index \Cf \
"<enter-command>unset wait_key<enter>\
<shell-escape>printf 'Enter a search term to find with notmuch: '; read x; echo \$x >~/.cache/mutt_terms<enter>\
<limit>~i \"\`notmuch search --output=messages \$(cat ~/.cache/mutt_terms) | head -n 600 | perl -le '@a=<>;s/\^id:// for@a;$,=\"|\";print@a' | perl -le '@a=<>; chomp@a; s/\\+/\\\\+/ for@a;print@a' \`\"<enter>" \
  "show only messages matching a notmuch pattern"

# TODO: Search with notmuch-mutt
macro index \Cs \
"<shell-escape>notmuch-mutt -r --prompt search<enter>\
<enter-command>unhook folder-hook<enter>\
<change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\
<enter-command>source ~/.config/mutt/hooks.muttrc<enter>" \
  "search mail with notmuch"

# TODO: use notmuch-mutt to reconstruct thread
macro index \C] \
"<pipe-message>notmuch-mutt -r thread<enter>\
<enter-command>unhook folder-hook<enter>\
<change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\
<enter-command>source ~/.config/mutt/hooks.muttrc<enter>" \
  "reconstruct thread with notmuch"

# macro index <F8> \
# "<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
# <shell-escape>notmuch-mutt -r --prompt search<enter>\
# <change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\
# <enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
#       "notmuch: search mail"

# macro index <F9> \
# "<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
# <pipe-message>notmuch-mutt -r thread<enter>\
# <change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\
# <enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
#       "notmuch: reconstruct thread"

# macro index <F6> \
# "<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
# <pipe-message>notmuch-mutt tag -- -inbox<enter>\
# <enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
#       "notmuch: remove message from inbox"

# view urls within a message or attachment
macro index,pager,attach,compose \Cb \
"<enter-command>set my_pipe_decode=\$pipe_decode pipe_decode<Enter>\
<pipe-message> urlscan<Enter>\
<enter-command>set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<Enter>" \
  "extract URLs from message (urlscan)"

# macro index,pager,attach,compose \CB \
#   "<enter-command>set pipe_decode = yes<Enter>\
#    <pipe-message>urlview<Enter>\
#    <enter-command>set pipe_decode = no<enter>" \
#   "extract URLs from message (urlview)"

# Attach an image from the clipboard
# macro compose P "<attach-file>\
#   `tmpfile=$(mktemp) && mv "$tmpfile" "$tmpfile".png && wl-paste -t image/png > "$tmpfile".png && echo "$tmpfile".png`<enter>"\
#   "attach image from clipboard"

# move to next sidebar folder, no matter if sidebar is visible or not
# macro index,pager ,, \
#   "<enter-command>set my_old_visible=\$sidebar_visible sidebar_visible<enter>\
#   <sidebar-next><sidebar-open><enter-command>set sidebar_visible=\$my_old_visible<enter>" \
#   "move to next sidebar folder"

# ugly hack to resume the currently highlighted mail
# may fail messily if you do not create =draft_tmp first
# macro index,pager R \
#  "<enter-command>set postponed='=draft_tmp' my_old_maildir_trash=\$maildir_trash nomaildir_trash<enter>\
#  s=draft_tmp<enter><recall-message><enter-command>set postponed='=INBOX' maildir_trash=\$my_old_maildir_trash<enter>" \
#  "recall current message"
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                                   Headers                                    │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
# Reset the header order
unhdr_order *

# -------------------------------------------------------------------------
# Name: hdr_order
# -------------------------------------------------------------------------
# With the hdr_order command you can specify an order in which NeoMutt will attempt to present
# these  headers  to you when viewing messages.
# -------------------------------------------------------------------------
hdr_order Message-Id: Message-ID: List-Id: List-ID: \
          Date: Delivery-date: Received: \
          To: Envelope-To: Delivered-To: X-Original-To: X-Sieve-Destination: Reply-To: In-Reply-To: \
          Cc: Bcc: From: X-Sender: Return-Path: Return-path: \
          X-Disposition-Notification-To: Mail-Followup-To: X-URL: \
          Organization: Organisation: \
          X-MimeOLE: X-Mime: Mime: User-Agent: X-HTTP-UserAgent: \
          X-Mailer: X-Newsreader: X-Editor: X-Operating-System: \
          Subject: X-Spam-Status:

# Add my fingerprint and keyserver to my headers
my_hdr X-gpg-fingerprint: E93A CCAA AEB0 2478 8C10  6EDE C011 CBEF 6628 B679
my_hdr X-gpg-key: https://keys.openpgp.org

# Header filtering. Useful with notmuch
unignore Message-ID List-Id List-ID X-Original-To # Figure out why receieved
unignore Date # Received Delivery-date
unignore To Envelope-To Delivered-To X-Original-To X-Sieve-Destination Reply-To In-Reply-To # Where originally filed
unignore Cc Bcc From X-Sender Return-Path Return-path
unignore X-Disposition-Notification-To Mail-Followup-To X-URL
unignore Organization Organisation
unignore X-MimeOLE X-Mime User-Agent X-HTTP-UserAgent
unignore X-Mailer X-Newsreader X-Editor X-Operating-System
unignore Subject: X-Spam-Status

# -------------------------------------------------------------------------
# Name: ignore
# -------------------------------------------------------------------------
# The ignore command allows you to specify header fields which you don't normally want to see in the
# pager. You do not  need  to  specify  the full header field name. For example, “ignore content-”
# will ignore all header fields that begin with the pattern “content-”, “ignore *” will ignore all
# headers.
# -------------------------------------------------------------------------
ignore X-OriginalArrivalTime X-ClientAddr X-Originating-IP X-UID
ignore Importance X-Keywords Delivery-date X-Apparently-To X-Apparently-From
ignore X-Authentication-Info List- Mailing-List X-IMAPbase Old-Content-Type
ignore X-Message-Info X-gotmail-version X-Virus-Scanned Authentication-Results
ignore X-Spam-Flag X-Spam-Level X-Spam-Checker-Version X-Spam-Prev
ignore X-All-Your-Base-Are-Belong-To X-BFI X-HotPOP-Delivered-To X-Return-Path
ignore X-eGroups- X-Yahoo-Profile X-Juno-Line-Breaks X-Mailman- X-BeenThere
ignore X-YahooFilteredBulk X-Header-Overseas X-Header-NoReverseIP
ignore X-MS- Thread- X-Priority X-ASG- X-ORBL X-Barracuda-Spam-
ignore X-DMCA X-Abuse X-AntiAbuse X-RFC2646 X-Postfilter X-Received
ignore X-ML- X-MLServer X-Mail-Count Posted X-Complaints-To Complaints-To
ignore Newsgroups NNTP- X-From-Usenet X-Trace Injection-Info X-rubymirror
ignore Received Mime-Version Content-Disposition Path # Return-Path Message-ID
ignore Content-Type Content-Length Status Lines "From "
ignore X-Twitter X-Campaignid X-Forwarded-To X-Forwarded-For X-DKIM X-DomainKeys
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                                 Attachments                                  │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
# -------------------------------------------------------------------------
# Name: mime_lookup mime-type[/mime-subtype] [ mime-type[/mime-subtype] ... ]
# -------------------------------------------------------------------------
# This command permits you to define a list of “data” MIME content types for which NeoMutt will try
# to determine the actual file type from the file name, and not use a mailcap(5) entry given for the
# original MIME type. For instance, you may add the appli‐ cation/octet-stream MIME type to this
# list.
# -------------------------------------------------------------------------
mime_lookup application/octet-stream

# -------------------------------------------------------------------------
# Name: attachments {+|-}disposition mime-type
# -------------------------------------------------------------------------
# You can make your message index display the number of qualifying attachments in each message, or
# search for messages by attach‐ ment count. You also can configure what kinds of attachments
# qualify for this feature with the attachments and unattachments commands.
#
# disposition is the attachment's Content-Disposition type — either inline or attachment. You can
# abbreviate this to I or A.
#
# mime-type is the MIME type of the attachment you want the command to affect. A MIME type is always
# of the format major/minor. The major part of mime-type must be literal text (or the special token
# “*”, but the minor part may be a regular expression. Therefore, “*/.*” matches any MIME type.
# -------------------------------------------------------------------------
attachments   +A */.*
attachments   -A text/x-vcard application/pgp.*
attachments   -A application/x-pkcs7-.*
attachments   +I text/plain
attachments   -A message/external-body
attachments   -I message/external-body

# -------------------------------------------------------------------------
# Name: auto_view
# -------------------------------------------------------------------------
# This commands permits you to specify that NeoMutt should automatically convert the given
# mime-types to text/plain when displaying messages. For this to work, there must be a mailcap(5)
# entry for the given mime-type with the copiousoutput option set. A mime-subtype of “*” matches
# any multipart/alternative subtype, as does an empty mime-subtype.
# -------------------------------------------------------------------------
set show_multipart_alternative = "info"  # multipart/alternative information is shown ('inline' = show all)

unauto_view *
auto_view text/html
auto_view application/pgp-encrypted
auto_view text/richtext text/html
auto_view text/calendar
auto_view application/ics
auto_view text/x-diff
auto_view text/x-patch

# -------------------------------------------------------------------------
# Name: alternative_order
# -------------------------------------------------------------------------
## alternative_order mime-type[/mime-subtype] [ mime-type[/mime-subtype] ... ]
#     - define an order of preference that is used by NeoMutt to determine which part of
#       a multipart/alternative body to display. “*” or "" matches any multipart/alternative subtype
## unalternative_order { * | mime-type[/mime-subtype] ... }
#     - removes entries from the ordered list or deletes entire list with “*”
# -------------------------------------------------------------------------
alternative_order text/plain    text/enriched text/html
alternative_order text/enriched text/richtext text/plain text
alternative_order multipart/mixed text/plain text/calendar application/ics text/html
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                                    Hooks                                     │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
# -------------------------------------------------------------------------
# Name: send-hook
# -------------------------------------------------------------------------
# Matched against all messages, both new and replies, and run a command.
# -------------------------------------------------------------------------
send-hook . "unmy_hdr From:"        # hide the 'From' header
send-hook . "set pgp_autosign"
send-hook . "set crypt_opportunistic_encrypt"
# send-hook . "set crypt_autosign=yes"
# send-hook . "set crypt_autoencrypt=no"
send-hook '!~G ^%C gpg' 'set crypt_autoencrypt=yes'  # autoencrypt if every recipient has a GPG key

# -------------------------------------------------------------------------
# Name: message-hook
# -------------------------------------------------------------------------
# Change settings before formatting a message
#
# Before NeoMutt displays (or formats for replying or forwarding) a message which matches the given
# pattern (or, when it is preceded by an exclamation mark, does not match the pattern), the given
# command is executed. When multiple message-hooks match, they are executed in the order in which
# they occur in the configuration file.
# -------------------------------------------------------------------------
message-hook '~A'   'unignore X-Face; ignore X-Spam-Status'
message-hook '~P|~h ^X-All-Your-Base-Are-Belong-To:' 'ignore X-Face X-Spam-Status'
message-hook '~h    X-Spam-Level:\ \\*'              'unignore X-Face X-Spam-Status'

# Search current message for content signed/encrypted with PGP the “traditional” way, that is,
# without proper MIME tagging whenever the beginning of a PGP message is detected within the message.
message-hook '!(~g|~G) ~b"^-----BEGIN\ PGP\ (SIGNED\ )?MESSAGE"' "exec check-traditional-pgp"
# message-hook '!~g !~G ~b "^-----BEGIN PGP (SIGNED )?MESSAGE"' 'exec check-traditional-pgp'

# Prefer plain text to HTML generally
message-hook . "unalternative_order *; alternative_order text/plain text/enriched text/html"

# -------------------------------------------------------------------------
# Name: fcc-hook
# -------------------------------------------------------------------------
## fcc-save-hook  fcc-hook     save-hook
#
# Used to save outgoing mail in a mailbox other than $record. NeoMutt searches the initial list of
# message recipients for the first matching pattern and uses mailbox as the default “Fcc:” mailbox.
# If no match is found the message will be saved to $record mailbox.
# -------------------------------------------------------------------------
fcc-hook  '~p ~P ~s"(test|fu[c]k|^[jf][^A-Z]*$)"' /dev/null

# -------------------------------------------------------------------------
# Name: folder-hook
# -------------------------------------------------------------------------
# Setting variables based upon mailbox
#
## folder-hook[ -noregex ] regex command
#    - execute configuration command before loading any mailboxes
#    - switch settings based on which mailbox you're using
# -------------------------------------------------------------------------
folder-hook . "exec collapse-all"
folder-hook . "bind index D delete-message"
folder-hook . "bind index U undelete-message"

# NOTE: Don't know why the extra resolve is needed here to work on other inboxes
folder-hook notmuch:// 'macro index D "<enter-command>set resolve=no<enter><modify-tags-then-hide>+trash <enter-command>set resolve=yes<enter><delete-message><next-entry><enter-command>set resolve=yes<enter>"  "delete the current entry"'
folder-hook notmuch:// 'macro index U "<enter-command>set resolve=no<enter><modify-tags-then-hide>-trash <enter-command>set resolve=yes<enter><undelete-message><next-entry><enter-command>set resolve=yes<enter>"  "undelete the current entry"'

# folder-hook notmuch:// 'macro index D "<enter-command>set my_resolve=\$resolve noresolve<enter><modify-tags-then-hide>+trash <enter-command>set resolve=\$my_resolve &my_resolve<enter><delete-message>"  "delete the current entry"'
# folder-hook notmuch:// 'macro index U "<enter-command>set my_resolve=\$resolve noresolve<enter><modify-tags-then-hide>-trash <enter-command>set resolve=\$my_resolve &my_resolve<enter><undelete-message>"  "undelete the current entry"'

# folder-hook . "set sort=date-sent"
# folder-hook work "set sort=threads"
# folder-hook . 'push "<enter-command>score ~= 10<enter>"'
# folder-hook notmuch:// "push '<shell-escape>notmuch new --no-hooks<enter>'"
# folder-hook notmuch:// "push '<shell-escape>notmuch new --no-hooks<enter>'"

# -------------------------------------------------------------------------
# Name: index-format-hook
# -------------------------------------------------------------------------
# Dynamically change $index_format using patterns
#
## index-format-hook
# -------------------------------------------------------------------------
# "%2C %Z %zt %?X?A& ? %D %-15.15F %s (%-4.4c)"
# "%2C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?) %s"
#
# %?H?[%H] ? spam, %N msg score, %A reply addr, %X mime attachments, %?X?A&?, %-60.60s
# "%2C %<[y?%<[m?%<[d?%[#%H:%M]&%[%a %d]>&%[%b %d]>&%[%Y%m]> [%Z %Gx] %?l?%4l&%4c? %-15.15L %?M?<#%03M>&? %s"
# "%2C %<[y?%<[m?%<[d?%[#%H:%M]&%[%a %d]>&%[%b %d]>&%[%Y%m]> [%Z %Gx %X] %?l?%4l&%4c? %-15.15L %?M?<#%03M>&? %s"
set index_format="%2C %-8.8@date@ [%Z %Gx %X] %?l?%4l&%4c? %-15.15L %?M?<#%03M>&? %s %?H?[%H] ?"

# index-format-hook  date  "~d<1d"    "%[%H:%M]"
# index-format-hook  date  "~d<1m"    "%[%a %d]"
# index-format-hook  date  "~d<1y"    "%[%b %d]"
# index-format-hook  date  "~A"       "%[%Y%m]"

# index-format-hook date "~A"        "%[%Y-%m-%d]"

index-format-hook date "~r<1d"     "%[%I:%m %p]"
index-format-hook date "~r 01/01-" "%[%b %d]"
index-format-hook date "~A"        "%[%Y-%m]"
index-format-hook list "~l"        "[%B] "

# ══════════════════════════════════════════════════════════════════════
# other hooks
# ══════════════════════════════════════════════════════════════════════
## account-hook
# Choose crypto key of recipient
## crypt-hook
## mbox-hook
## message-hook
## open-hook      close-hook   append-hook

## charset-hook alias charset          = defines alias for charset
## iconv-hook   charset local-charset  = system-specific name for a character set
#
# Change settings based upon message recipients
## reply-hook pattern command   = the message you are replying to (before send-hook)
## send-hook pattern command    = all messages, both new and replies
## send2-hook pattern command   = every time a msg changes (editing, compose) (after send-hook)
#    - exec arbitrary config commands based upon recipients of the message (see “Message Matching in Hooks”)
#    - send2-hook = set params (e.g., $sendmail) depending on msg's sender address.
#    - send-hooks exec once after getting initial recipients
#
## timeout-hook command         = periodically when NeoMutt checks for new mail. (called every $timeout secs)
## startup-hook command         = before opening the first mailbox when starting
## shutdown-hook command        = before closing the mailbox and exiting
#   - global hooks
#
## unhook { * | hook-type }
#    - flush hooks previously defined
#    - unhook "*" = remove all
#    - unhook send-hook = remove all send-hooks

# append-hook '\.gz$' "gzip --stdout '%t' >> '%f'"
# close-hook  '\.gz$' "gzip --stdout '%t' > '%f'"
# open-hook   '\.gz$' "gzip --stdout --decompress '%f' > '%t'"

# timeout-hook  "exec sync-mailbox"
shutdown-hook "exec sync-mailbox"

# -------------------------------------------------------------------------
# Name: score
# -------------------------------------------------------------------------
# Adds value to a message's score if pattern matches it. pattern is  a  string  in  the  format
# described in the PATTERNS section below. value is a positive or negative integer. A message's
# final score is the sum total of all matching score entries.
# -------------------------------------------------------------------------
score '~A' 50
score '~p' 10
score '~N' 4
score '~O' 2
score '~D' -3
#score "~H ^0" -20
#score "~H ^[1-9]" -40

# -------------------------------------------------------------------------
# Name: spam
# -------------------------------------------------------------------------
## spam regex format
## nospam { * | regex }
#    External spam-scoring filters. See “Spam Detection” in the NeoMutt manual.
# -------------------------------------------------------------------------
set spam_separator=", "

# http://mutt-users.mutt.narkive.com/t0y58ITT/sort-mailbox-by-spam-tag-score-sorting-strangeness
spam "X-Spam-Status: (Yes|No), score=(-?[[:digit:]]+\.[[:digit:]]+)" "%2"
spam "X-DCC-.*-Metrics:.*(....)=many"         "90+/DCC-%1"
spam "X-Spam-Status: Yes"                     "90+/SA"
spam "X-PerlMX-Spam: .*Probability=([0-9]+)%" "%1/PM"
# spam "^From: .*MAILER-DAEMON"       "999"


# -------------------------------------------------------------------------
# Name: lists | subscribe
# -------------------------------------------------------------------------
## lists [ -group name ... ] regex [ regex ... ]
## unlists [ -group name ... ] { * | regex ... }
## subscribe [ -group name ... ] regex [ regex ... ]
## unsubscribe [ -group name ... ] { * | regex ... }
#    - lists = adds mailing list to the list of known mailing lists
#    - unlists = removes  mailing list from the lists of known and subscribed mailing lists
#    - subscribe = adds mailing list to the lists of known and subscribed mailing lists
#    - unsubscribe = removes it from the list of subscribed mailing lists
# -------------------------------------------------------------------------
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                                    Colors                                    │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
#### Objects
# attach_headers attachment  body        bold         error
# hdrdefault     header      index       index_author index_collapsed
# index_date     index_flags index_label index_number index_size
# index_subject  index_tag   index_tags  indicator    markers
# message        normal      progress    prompt       quoted
# quotedN        search      signature   status       tilde
# tree           underline

# sidebar_divider   sidebar_flagged sidebar_highlight
# sidebar_indicator sidebar_new     sidebar_ordinary
# sidebar_spool_file
#
##### composeobjects
# include header, security_encrypt, security_sign, security_both, security_none
#
#### colors:
#  include: default, black, red, green, yellow, blue, magenta, cyan, white, colorN
#
#### attributes:
# none, bold, underline, reverse, and standout.
#
# pattern “*” is a special token which means to clear the color list of all entries.
# Colors for deleted mail

# Default index colors:
color index color52 default '.*'
color index_author  red  default ".*"
color index_flags   bold color20 default ".*"
color index_subject color28 default ".*"
color index_tag     bold color23 default ".*"
color index_size    color2 default ".*"

# Deleted. keep here to have new mail deleted have diff color size
color index_size    bold color44  default "~D"

# New mail is boldened
color index         bold color53   default "~N"
color index_author  bold brightred default "~N"
color index_flags   bold color19   default "~N"
color index_subject bold color28   default "~N"
color index_size    bold color19   default "~N"
# color index black default ~O # old

# Deleted mail
# color index color54  default "!~(!~D)" # Deleted threads
color index        bold color39  default "~D"      # Deleted
color index_author bold color39  default "~D"
color index_subject bold color39  default "~D"

# Flagged mail
# color index         bold color45    default "~F"
color index         bold color21    default "~F"
color index_author  bold color21    default "~F"
color index_flags   bold brightblue default "~F"
color index_subject bold color21    default "~F"
color index_size    bold brightblue default "~F"
# mono  index         bold    "~F"

# Encrypted mail
color index         bold color17 default "~G"
color index_author  bold color18 default "~G"
color index_flags        color20 default "~G"
color index_subject bold color18 default "~G"

# Messages from me
color index_author  bold color32 default "~P"
# color index_flags   color20 default "~G"
# color index_subject bold color18 default "~G"

# Not addressed to me personally
color index green default !(~p)

# Tagged mail is highlighted:
# color index black default ~T # tagged
color index         brightyellow blue "~T"
color index_author  brightred    blue "~T"
color index_subject brightcyan   blue "~T"

color index green   default ~Q    # have been replied to
color index magenta default "~h X-Mutt-Fcc" # drafts
# mono index bold "~F" # flagged
color index red     default "~F ~G" # flagged, encrypted
color index blue    default "~F !(~p)" # flagged, not addressed to me personally
color index black   default "~F ~P" # flagged, message from me
color index magenta default "~F ~h X-Mutt-Fcc" # flagged (finalized) drafts

# Other colors and aesthetic settings:
mono bold      bold
mono underline underline
mono indicator reverse
mono error     bold

color normal     default       default # message
color attachment bold color13  default
color hdrdefault brightgreen   default # headers
color indicator  brightblack   white   # currently selected message
color markers    red           white   # the + for wrapped pager lines
color message    cyan          default # informational messages, not mail
color search     brightmagenta default # highlight search patterns in the pager
color status     bold color27  default # status bar is yellow on dark blue -- 52,27
color tree       red           default # thread tree in index menu is magenta
color normal     white         default # message
color signature  bold color47  default # signature (after "-- ") is red
color tilde      default       default # ~'s after message body
mono  tilde      bold

# coloring quoted text - coloring the first 7 levels:
color quoted  green     default
color quoted1 blue      default
color quoted2 cyan      default
color quoted3 yellow    default
color quoted4 blue      default
color quoted5 brightred default
color quoted6 red       default
color quoted7 green     default

# coloring the sidebar
color sidebar_highlight brightgreen default
color sidebar_divider   color46     default
color sidebar_flagged   red         default
color sidebar_new       green       default

color error     red     default
color bold      black   default
color underline black   default
color normal    default default

# compose menu colors (mutt 1.9)
color compose header           cyan    default
color compose security_none    red     default
color compose security_sign    color45 default
color compose security_encrypt color53 default
color compose security_both    color19 default

# security_encrypt, security_sign, security_both, security_none

# === Regex highlighting === [[[

# Too bad this doesn't support PCRE
# \y   Matches the empty string at either the beginning or the end of a word
# \B   Matches the empty string within a word
# \<   Matches the empty string at the beginning of a word
# \>   Matches the empty string at the end of a word
# \w   Matches any word-constituent character (letter, digit, or underscore)
# \W   Matches any character that is not word-constituent
# \`   Matches the empty string at the beginning of a buffer (string)
# \'   Matches the empty string at the end of a buffer


# color attachment color47 default "Begin signature information"

color header blue         default ".*"
color header color19      default '^(Message-ID)'
color header color19      default '^(List-ID)'
color header brightblue   default '^(Received)'
color header bold color52 default '^(Date)'
color header brightred    default '^(To)'
color header brightred    default "^(Delivered-|X-Original-|Envelope-)?To"
color header brightgreen  default '^(In-)?(Reply-To)'
color header bold color20  default '^(Subject)'
color header bold color21  default '^(From|(X-)?Sender)'

color header color23     default "^(B[cC][cC]|C[cC])"
color header color21     default "(Return-[Pp]ath)"
color header brightred   default "^(X-Spam-Status)"
color header brightgreen default "^(X-)?Sender:"

color header    brightyellow    default   '^(User-Agent)'
color header    red             default   '^(Content-Length)'
color header    red             default   '^(Status)'
color header    red             default   '^(Lines)'
color header    brightyellow    default   '^(X-)?Mime(OLE)?'
color header    brightgreen     default   '^(Mail-Followup-To)'
color header    brightgreen     default   '^(X-Disposition-Notification-To)'
color header    brightgreen     default   '^(X-URL)'
color header    magenta         default   '^(Delivery-date)'
color header    magenta         default   '^(Posted)'
color header    magenta         default   '^(NNTP-Posting-Date)'
color header    brightwhite     default   '^(X-All-Your-Base-Are-Belong-To)'
color header    green           default   '^(References)'
color header    green           default   '^(Organi[sz]ation)'
color header    green           default   '^(X-Trace)'
color header    green           default   '^(Injection-Info)'
color header    brightyellow    default   '^(Old-)?Content-(Type|Disposition|Transfer-Encoding)'
color header    brightyellow    default   '^(X-Mailer[A-Za-z-]*)'
color header    brightyellow    default   '^(X-Editor)'
color header    brightyellow    default   '^(X-Operating-System)'
color header    brightyellow    default   '^(X-Newsreader)'
color header    brightyellow    default   '^(X-Accept-Language)'
color header    brightyellow    default   '^(X-MSMail-)'
color header    brightyellow    default   '^(X-)?Priority'
color header    brightyellow    default   '^(X-HTTP-UserAgent)'
color header    brightblack     default   '^(X-HotPOP-Delivered-To)'
color header    brightblack     default   '^(X-Face)'

# Date formats
color body color43 default "[0-9]{1,2}:[0-9]{2}(:[0-9]{2})?( ?(AM|PM|am|pm))?( +[+-][0-9]{4})?"
color body color43 default "(\(19|20\)?[0-9]{2}/[01]?[0-9]/[0123]?[0-9]|[0123]?[0-9][/.][01]?[0-9][/.]\(19|20\)?[0-9]{2})(( at)? +[0-9]{1,2}:[0-9]{2}(:[0-9]{2})?( ?(AM|PM|am|pm))?( +[+-][0-9]{4})?)?"
color body color43 default "((Sun(day)?|Mon(day)?|Tue(sday)?|Wed(nesday)?|Thu(sday)?|Fri(day)?|Sat(urday)?),? +)?(Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|June?|July?|Aug(ust)?|Sep(ember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)[ .]+[0-9]{1,2}(st|nd|rd|th)?,?( +(19|20)[0-9]{2}(,?( at)? [0-9]{1,2}:[0-9]{2}(:[0-9]{2})?( ?(AM|PM|am|pm))?( +[+-][0-9]{4})?)?)?"
color body color43 default "((Sun(day)?|Mon(day)?|Tue(sday)?|Wed(nesday)?|Thu(sday)?|Fri(day)?|Sat(urday)?),? +)?[0-9]{1,2}(st|nd|rd|th)?[ .]+(Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|June?|July?|Aug(ust)?|Sep(ember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?),?( +(19|20)?[0-9]{2})?(( at)? [0-9]{1,2}:[0-9]{2}(:[0-9]{2})?( ?(AM|PM|am|pm)( CST)?)?( +[+-][0-9]{4})?)?"

# Email highlighting
color body bold color52 default  "[\-\.+_a-zA-Z0-9]+@[\-\.a-zA-Z0-9]+" # Email addresses

# Formatting
color body brightwhite  default "(^| |\t)\\*[a-z0-9]([a-z0-9-]* ){,3}[a-z0-9,.!?-]*\\*"
color body brightyellow default "(^| |\t)_[a-z0-9]([a-z0-9-]* ){,6}[a-z0-9,.!?-]+_"
color body brightyellow default "(^| |\t)_[a-z0-9][a-z0-9,.!?_-]*_"

# Misc
color body brightblack default "^[-_=*]{3,}\n"
color body color31     default "^SPAM:"

color body green        default "\`[^\`]*\`"          # Green text between ` and `
color body brightblue   default "^# \.*"              # Headings as bold blue
color body brightcyan   default "^## \.*"             # Subheadings as bold cyan
color body brightgreen  default "^### \.*"            # Subsubheadings as bold green
color body yellow       default "^(\t| )*(-|\\*) \.*" # List items as yellow
color body brightcyan   default "[;:][-o][)/(|]"      # emoticons
color body brightcyan   default "[;:][)(|]"           # emoticons
color body brightcyan   default "[ ][*][^*]*[*][ ]?"  # more emoticon?
color body brightcyan   default "[ ]?[*][^*]*[*][ ]"  # more emoticon?
color body red          default "\[\.\.\.?\]"         # [..] or [...]

color body brightyellow default "^gpg: "
color body color53      default "(Good signature from:)"
# color body color53      default "Good signature from:\K.*"
# color body color53      default "(?<=Good signature from:).*(?=<[\-\.+_a-zA-Z0-9]+@[\-\.a-zA-Z0-9]+>)"
color body red          default "BAD signature from:"
color body yellow       default "WARNING:"
color body color53      default "Fingerprint: ([[:xdigit:]]{4} ?){5}(  )?([[:xdigit:]]{4} ?){5}"

# URL highlighting
# color body brightblue   default "(https?|ftp)://[\-\.,/%~_:?&=\#a-zA-Z0-9]+" # URL

color body red default "([a-z][a-z0-9+-]*://(((([a-z0-9_.!~*'();:&=+$,-]|%[0-9a-f][0-9a-f])*@)?((([a-z0-9]([a-z0-9-]*[a-z0-9])?)\\.)*([a-z]([a-z0-9-]*[a-z0-9])?)\\.?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(:[0-9]+)?)|([a-z0-9_.!~*'()$,;:@&=+-]|%[0-9a-f][0-9a-f])+)(/([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*(;([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*)*(/([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*(;([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*)*)*)?(\\?([a-z0-9_.!~*'();/?:@&=+$,-]|%[0-9a-f][0-9a-f])*)?(#([a-z0-9_.!~*'();/?:@&=+$,-]|%[0-9a-f][0-9a-f])*)?|(www|ftp)\\.(([a-z0-9]([a-z0-9-]*[a-z0-9])?)\\.)*([a-z]([a-z0-9-]*[a-z0-9])?)\\.?(:[0-9]+)?(/([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*(;([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*)*(/([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*(;([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*)*)*)?(\\?([-a-z0-9_.!~*'();/?:@&=+$,]|%[0-9a-f][0-9a-f])*)?(#([-a-z0-9_.!~*'();/?:@&=+$,]|%[0-9a-f][0-9a-f])*)?)[^].,:;!)? \t\r\n<>\"]"
# ]]]
# ]]]

source /home/lucas/.config/mutt/emails.muttrc

#  ╭──────────────────────────────────────────────────────────╮
#  │                           Help                           │
#  ╰──────────────────────────────────────────────────────────╯

#  ╭──────────╮
#  │ Commands │
#  ╰──────────╯
# ══════════════════════════════════════════════════════════════════════
# setenv HOME '/home/lucas';  unsetenv HOME
# source FILE
# ══════════════════════════════════════════════════════════════════════
## subjectrx regex replacement
## unsubjectrx { * | regex }
#   if detected in a message subject, causes the subject to be replaced with the replacement value
#     - %L   for the text to the left of the match
#     - %R   for text to the right of the match
#     - %1   for the first sub‐group in the match (etc)
#     - %L%R erase the match
#
## subscribe-to imap-folder-uri
## unsubscribe-from imap-folder-uri
#    - subscribe/unsubscribe to folder imap-folder-uri.
#    - argument must be an IMAP URI (e.g. “subscribe-to imaps://mail.example.org/inbox”)
#    - see $imap_list_subscribed and $imap_check_subscribed

#  ══════════════════════════════════════════════════════════════════════
## index_format
# %a   author address
# %A   reply-to address (if present; otherwise: author address)
# %b   fname of orig msg folder (think mailbox)
# %B   same as %K
# %C   current msg num
# %c   num chars (bytes) in body of msg
# %cr  num chars (bytes) in raw msg, including header
# %D   date & time of msg using date_format & local timezone (use "%[fmt]" instead)
# %d   date & time of msg using date_format & sender's timezone (use "%{fmt}" instead)
# %e   current msg num in thread
# %E   num of msgs in current thread
# %F   author name, or recipient name if msg is from you
# %Fp  like %F, but plain. No contextual formatting is applied to recipient name
# %f   sender (address + real name), either From: or Return-Path:
# %g   newsgroup name (if compiled with NNTP support)
# %g   msg tags (e.g. notmuch tags/imap flags)
# %Gx  individual msg tag (e.g. notmuch tags/imap flags)
# %H   spam attribute(s) of this msg
# %I   initials of author
# %i   msg-id of current msg
# %J   msg tags (if present, tree unfolded, & != parent's tags)
# %K   list to which letter was sent (if any; otherwise: empty)
# %L   if address in To:/Cc: header matches address def by "subscribe" cmd, disp "To <list-name>", else same as %F
# %l   num of lines in unprocessed msg (may not work with maildir, mh, & IMAP folders)
# %M   num of hidden msgs if thread is collapsed
# %m   total num of msg in mailbox
# %N   msg score
# %n   author's real name (or address if missing)
# %O   orig save folder where NeoMutt would formerly have Stashed msg: list name or recipient name If not sent to a list
# %P   progress indicator for built-in pager (how much of file has been displayed)
# %q   newsgroup name (if compiled with NNTP support)
# %R   comma separated list of "Cc:" recipients
# %r   comma separated list of "To:" recipients
# %S   single character status of msg ("N"/"O"/"D"/"d"/"!"/"r"/"*")
# %s   subject of msg
# %T   appropriate character from $to_chars string
# %t   "To:" field (recipients)
# %u   user (login) name of author
# %v   first name of author, or recipient if msg is from you
# %W   organization name of author ("Organization:" field)
# %x   "X-Comment-To:" field (if present & compiled with NNTP support)
# %X   num MIME attachments
# %Y   "X-Label:" field, if present, & not part of thread tree, top of thread
# %y   "X-Label:" field, if present
# %Z   three character set of msg status flags (1=(n/o/r/O/N) 2=(D/d/S/P/s/K) 3=(*/!))
# %zc  msg crypto flags
# %zs  msg status flags
# %zt  msg tag flags
# %@name@   insert & evaluate format-string from matching "index-format-hook" command
# %{fmt}    DT of msg is converted to sender's time zone, & "fmt" is expanded by library
# %[fmt]    DT of msg is converted to local time zone, & "fmt" is expanded by library
# %(fmt)    local DT when msg was received, & "fmt" if first char inside () is (!), fmted ignoring locale
# %>X       right justify rest of string & pad with character "X"
# %|X       pad to end of line with character "X"
# %*X       soft-fill with character "X" as pad
#
#  ╭────────╮
#  │ Search │
#  ╰────────╯
#  ══════════════════════════════════════════════════════════════════════
# Can search for PGP using: ~g, ~G, and ~k
# https://neomutt.org/guide/advancedusage#3-%C2%A0patterns-searching-limiting-and-tagging

# ~A              all msgs
# ~b EXPR         msgs which contain EXPR in the message body
# ~B EXPR         msgs which contain EXPR in the whole message
# ~C EXPR         msgs either to: or cc: EXPR
# %C GROUP        msgs either to: or cc: to any member of GROUP
# ~d [MIN]-[MAX]  msgs with “date-sent” in a Date range
# ~D              deleted msgs
# ~e EXPR         msgs which contains EXPR in the “Sender” field
# ~F              flagged msgs
# ~f EXPR         msgs originating from EXPR
# ~g              cryptographically signed msgs
# ~G              cryptographically encrypted msgs
# ~h EXPR         msgs which contain EXPR in the message header
# ~H EXPR         msgs with a spam attribute matching EXPR
# ~i EXPR         msgs which match EXPR in the “Message-ID” field
# ~k              msgs which contain PGP key material
# ~L EXPR         msgs either originated or received by EXPR
# ~l              msgs addressed to a known mailing list
# ~m [MIN]-[MAX]  msgs with numbers in the range MIN to MAX
# ~m <[MAX]       msgs with numbers less than MAX
# ~m >[MIN]       msgs with numbers greater than MIN
# ~m [M]          just message number M
# ~m [MIN],[MAX]  msgs with offsets (from selected message) in the range MIN to MAX
# ~M EXPR         msgs which contain a mime Content-Type matching EXPR
# ~n [MIN]-[MAX]  msgs with a score in the range MIN to MAX
# ~N              new msgs
# ~O              old msgs
# ~p              msgs addressed to you
# ~P              msgs from you
# ~Q              msgs which have been replied to
# ~r [MIN]-[MAX]  msgs with “date-received” in a Date range
# ~R              read msgs
# ~s EXPR         msgs having EXPR in the “Subject” field.
# ~t EXPR         msgs addressed to EXPR
# ~T              tagged msgs
# ~u              msgs addressed to a subscribed mailing list
# ~U              unread msgs
# ~V              cryptographically verified msgs
# ~w EXPR         newsgroups matching EXPR
# ~x EXPR         msgs which contain EXPR in the “References” or “In-Reply-To” field
# ~X [MIN]-[MAX]  msgs with MIN to MAX attachments
# ~y EXPR         msgs which contain EXPR in their keywords
# ~Y EXPR         msgs whose tags match EXPR
# ~z [MIN]-[MAX]  msgs with a size in the range MIN to MAX
# ~=              duplicated msgs (see $duplicate_threads)
# ~$              unreferenced msgs (requires threaded view)
# ~( PATTERN )    msgs in threads containing msgs matching PATTERN , e.g. all threads containing msgs from you: ~(~P)
# ~<( PATTERN )   msgs whose immediate parent matches PATTERN , e.g. replies to your msgs: ~<(~P)
# ~>( PATTERN )   msgs having an immediate child matching PATTERN , e.g. msgs you replied to: ~>(~P)

# Simple
# all     ~A
# .       ~A
# ^       ~A
# del     ~D
# flag    ~F
# new     ~N
# old     ~O
# repl    ~Q
# read    ~R
# tag     ~T
# unread  ~U

# vim: ft=neomuttrc:et:sw=0:ts=2:sts=2:fdm=marker:fmr=[[[,]]]:
