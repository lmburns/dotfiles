# https://neomutt.org/guide/reference

# === Mutt Wizard === [[[
source /usr/local/share/mutt-wizard/mutt-wizard.muttrc # mw-autogenerated
set mailcap_path = /home/lucas/.config/mutt/mailcap:$mailcap_path
unset signature
set hostname = "archbox"
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                                   Options                                    │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
# set autoedit          # go to the editor right away when composing
# set allow_ansi        # ANSI color codes and rich-text are interpreted
# set nohelp            # Describe bindings for major functions

set use_domain=no                        # Qualify all local addresses (ones that end with @host)
set reverse_alias                        # Display personal name for your aliases in index menu
set attribution="On %D, %n wrote:"       # String that precedes message that is included in reply
set smtp_authenticators = 'gssapi:login' # Authentication methods neomutt will try to login to SMTP

set abort_nosubject            # No subject = abort
set abort_noattach = ask-yes   # Compose message matching $abort_noattach_regex & no attachments, composition aborted
set tilde                      # Pad blank lines at end of pager
set pager_stop                 # Don't move to next message at end
set pager_index_lines = 5      # num lines of ini index when in pager
set norecall                   # No ask to recall drafts
set nomarkers                  # Disables the `+` displayed at line wraps
set nomark_old                 # Unread mail stay unread until read
set nowait_key                 # Mutt won't ask "press key to continue"
set nocollapse_unread          # Don't collapse thread if unread
set fast_reply                 # skip to compose when replying
set fcc_attach                 # Save attachments with the body
set forward_format = "Fwd: %s" # Format of subject when forwarding
set forward_quote              # Include message in forwards
set reverse_name               # Reply as whomever it was to

set rfc2047_parameters = yes # Decode RFC2047-encoded MIME parameters

set mail_check    = 60  # Avoid lags using IMAP with some email providers
set timeout       = 10
set copy          = yes # Always save a copy of outgoing messages
set sleep_time    = 0   # Pause 0 seconds for informational messages
set sendmail_wait = 1   # Number of seconds for $sendmail command to wait before giving up

set virtual_spoolfile # Use first defined virutal mailbox as spool file
set meta_key          # Interpret meta key as pressing escape + key
set mail_check_stats  # Periodically check mail stats

set abort_key = "<Esc>"                                        # Cancel prompt
set editor    = "nvim"                                         # Editor used by neomutt
set display_filter = "tac | sed '/\\\[-- Autoview/,+1d' | tac" # Command used to filter messages

# == Mail composition ==
set edit_headers        # Include headers in composition
set include             # Include message in replies
set mime_forward=ask-no # Attachments are forwarded with mail
set mime_forward_rest   # When attachments are being forwarded and can't be dcoeded, attach to new message

# == Mailbox handling ==
# set maildir_trash    # Keep old mail around to complete threads
# set postponed="=INBOX" # Folder which to save postponed mail
set nomove             # Don't move as result of hook
set noconfirmappend    # Don't confirm append to other mailbox
set nomark_old         # Don't mark new unread as old when exiting
set noabort_unmodified # Unmodified drafts saved to inbox, not discard

# -------------------------------------------------------------------------
# Name: mime_type_query_command
# -------------------------------------------------------------------------
# This specifies a command to run, to determine the mime type of a new attachment when composing
# a message. Unless $mime_type_query_first is set, this will only be run if the attachment's
# extension is not found in the mime.types file.
#
# The string may contain a "%s", which will be substituted with the attachment filename. NeoMutt
# will add quotes around the string substituted for "%s" automatically according to shell quoting
# rules, so you should avoid adding your own. If no "%s" is found in the string, NeoMutt will append
# the attachment filename to the end of the string.
#
# The command should output a single line containing the attachment's mime type.
# -------------------------------------------------------------------------
set mime_type_query_command = "file --mime-type -b %s"

# -------------------------------------------------------------------------
# Name: query_command
# -------------------------------------------------------------------------
# This specifies the command NeoMutt will use to make external address queries. The string may
# contain a “%s”, which will be substituted with the query string the user types. NeoMutt will add
# quotes around the string substituted for “%s” automatically according to shell quoting rules, so
# you should avoid adding your own. If no “%s” is found in the string, NeoMutt will append the
# user's query to the end of the string. See “query” for more information.
# -------------------------------------------------------------------------
set query_command = "abook --config $XDG_CONFIG_HOME/abook/abookrc --datafile $XDG_DATA_HOME/abook/addressbook --mutt-query '%s'"
# set query_command = "khard email --parsable --search-in-source-files '%s'"

# === Sorting ===
set sort='reverse-date' # threads
set sort_aux=date-received # last-date
set sort_browser=reverse-date
set strict_threads

# === Sidebar mappings === [[[
set sidebar_visible = yes
set sidebar_width = 20
set sidebar_divider_char = "¦"
set sidebar_short_path = yes
set sidebar_next_new_wrap = yes
set sidebar_format = '%D%?F? [%F]?%* %?N?%N/? %?S?%S?'
# ]]]

# === Formats === [[[
set date_format  = "%y/%m/%d %I:%M%p"
set index_format = "%<[y?%<[m?%<[d?%[#%H:%M]&%[%a %d]>&%[%b %d]>&%[%Y%m]> %Z %-15.15L %?M?<#%03M>&? %s"
# set index_format="%8H %{%d/%m %H:%M}%Z %-15.15L %?M?<#%03M>&?%s"
# set index_format="%4C %Z %(%b %d %H:%M) %-15.15F (%?l?%4l&%4c?) %s"
set pager_format="%4c -%Z- %C/%m: %-20.20n %s"
set status_format="%r%f %?l?%l? %?M?%M/?%m:%?n? N%n?%?o? O%o?%?d? D%d?%?F? !%F?%?t? *%t?%>  %h (%s/%S%?V?-%V?)  (%P)"
# ]]]

# === GPG === [[[
set crypt_autoencrypt=no             # auto encrypt outgoing
set crypt_autosign=yes               # auto sign outgoing
set crypt_opportunistic_encrypt=yes  # encryption when recip key is available
set crypt_replyencrypt=yes           # auto encrypt to replies that are encrypted
set crypt_replysign=yes              # auto encrypt replies that are signed
set crypt_use_gpgme=yes              # gpgme backend
set crypt_autosmime=no               # auto enable smime signing
set crypt_replysignencrypted=yes     # auto sign replies that are encrypted
set pgp_use_gpg_agent=yes            # use pgp agent for caching passwords
set pgp_self_encrypt=yes             # also be encrypt to C_SmimeDefaultKey
set pgp_default_key='burnsac@me.com' # default key
# set pgp_replyencrypt
# set pgp_timeout=900
set pgp_autosign
set pgp_replysign
set pgp_replysignencrypted


# Decode application/pgp (attachment)
set pgp_decode_command="\
  gpg --status-fd=2 %?p?--pinentry-mode loopback --passphrase-fd 0? \
  --no-verbose --quiet --batch --output - %f"

# Verify a signature
set pgp_verify_command="gpg --status-fd=2 --no-verbose --quiet --batch --output - --verify %s %f"

# Decrypt an attachment
set pgp_decrypt_command="\
  gpg --status-fd=2 %?p?--pinentry-mode loopback --passphrase-fd 0? \
  --no-verbose --quiet --batch --output - --decrypt %f"

# Mime signed attachment
set pgp_sign_command="\
  gpg %?p?--pinentry-mode loopback --passphrase-fd 0? \
  --no-verbose --batch --quiet --output - --armor \
  --textmode %?a?--local-user %a? --detach-sign %f"

# Application/pgp inline
set pgp_encrypt_only_command="\
  /usr/bin/pgpewrap gpg --batch --quiet --no-verbose --output - \
  --textmode --armor --encrypt -- --recipient %r -- %f"

# Encrypted attachement
set pgp_encrypt_sign_command="\
  /usr/bin/pgpewrap gpg %?p?--pinentry-mode loopback --passphrase-fd 0? \
  --batch --quiet --no-verbose --textmode --output - %?a?--local-user %a? \
  --armor --sign --encrypt -- --recipient %r -- %f"

# Import key
set pgp_import_command="gpg --no-verbose --import %f"

# Export key
set pgp_export_command="gpg --no-verbose --armor --export %r"

# Verify key
set pgp_verify_key_command="gpg --verbose --batch --fingerprint --check-sigs %r"

# Read public keyring
set pgp_list_pubring_command="\
  gpg --no-verbose --batch --quiet --with-colons --with-fingerprint --with-fingerprint --list-keys %r"

# Read secret keyring
set pgp_list_secring_command="\
  gpg --no-verbose --batch --quiet --with-colons --with-fingerprint --with-fingerprint --list-secret-keys %r"

set pgp_good_sign="^\\[GNUPG:\\] GOODSIG" # text indicating good sig
# ]]]

# -------------------------------------------------------------------------
# Name: auto_view
# -------------------------------------------------------------------------
# This commands permits you to specify that NeoMutt should automatically convert the given
# mime-types to text/plain when displaying messages. For this to work, there must be a mailcap(5)
# entry for the given mime-type with the copiousoutput option set. A mime-subtype of “*” matches
# any multipart/alternative subtype, as does an empty mime-subtype.
# -------------------------------------------------------------------------
auto_view application/pgp-encrypted
auto_view text/html
auto_view text/richtext text/html

alternative_order text/plain    text/enriched text/html
alternative_order text/enriched text/richtext text/plain text
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                            Bindings / Rebindings                             │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
#
# Defined maps:
#   alias, attach, browser, compose, editor, generic,
#   index, mix, pager, pgp, postpone, query, smime

# bind index,pager g       noop
bind index       gg      noop
bind index       gi      noop
bind index,pager gd      noop
bind index,pager ga      noop
bind editor      <space> noop
bind index       \Cf     noop
bind index       z       noop
bind index,pager i       noop

bind index za collapse-thread
bind index zA collapse-all # Missing :folddisable/foldenable

bind editor       <Delete> delete-char
bind editor       <Tab>    complete-query # Completion
bind editor       ^T       complete       # Completion
bind attach       <Return> view-mailcap
bind attach       l        view-mailcap
bind index        j        next-entry
bind index        k        previous-entry
bind index        G        last-entry
bind index        gg       first-entry
bind pager,attach h        exit
bind pager        j        next-line
bind pager        k        previous-line
bind pager        l        view-attachments
# bind  browser,index       \Ce      next-line
# bind  browser,index       \Cy      previous-line
# bind index              D delete-message
bind pager,index d       noop
bind index       dd      delete-message
bind index       U       undelete-message
bind index       L       limit
bind index       h       noop
bind index       l       display-message
bind index,query <space> tag-entry
#bind browser             h goto-parent
# bind  index,pager         H        view-raw-message
macro browser             h   '<change-dir><kill-line>..<enter>' "Go to parent folder"
bind  browser             l   select-entry
bind  browser             gg  top-page
bind  browser             G   bottom-page
bind  pager               gg  top
bind  pager               G   bottom
bind  index,pager,browser \Cd half-down
bind  index,pager,browser \Cu half-up
bind  pager,index         dT  delete-thread
bind  pager,index         dt  delete-subthread
bind  pager,index         gt  next-thread
bind  pager,index         gT  previous-thread
bind  index,pager         S   sync-mailbox
bind  index,pager         I   group-reply

bind index \031 previous-undeleted # Mouse wheel
bind index \005 next-undeleted     # Mouse wheel
bind pager \031 previous-line      # Mouse wheel
bind pager \005 next-line          # Mouse wheel

bind index,pager   K   sidebar-prev
bind index,pager   J   sidebar-next
bind index,pager   O   sidebar-open
bind pager,generic 0   next-page
bind index,pager   \Cp sidebar-prev-new
bind index,pager   \Cn sidebar-next-new
bind index,pager   .   sidebar-toggle-visible

bind index,pager ]] next-unread
bind index,pager [[ previous-unread
bind index,pager N  search-opposite
bind index       \\ toggle-new
bind attach      i  exit

# macro index,pager D "<purge-message><sync-mailbox>"

# Toggle all messages for deletion
macro index 0d "T.<enter><tag-prefix>D<sync-mailbox>"

# == Documentation == [[[
# Show documentation when pressing F1
macro generic,pager <F1> "<shell-escape> colorman neomuttrc<Enter>" "show NeoMutt documentation"
# Alternative way to show the docs
macro generic,pager <F4> "<shell-escape> less /usr/share/doc/neomutt/manual.txt<Enter>" "show NeoMutt documentation"
# ]]]

# == Address Book == [[[
macro index,pager a \
  "<enter-command>set my_pipe_decode=\$pipe_decode pipe_decode<return>\
  <pipe-message>abook --add-email<return>\
  <enter-command>set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<return>" \
  "add the sender address to abook"

# Press A to add contact to Khard address book
macro index,pager A \
    "<pipe-message>khard add-email<return>" \
    "add the sender email address to khard"
# ]]]

macro index \Cr "T~U<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" "mark all messages as read"

macro index \Co "<shell-escape>mw -Y<enter>" "run mw -Y to sync all mail"

macro index \Cf "<enter-command>unset wait_key<enter>\
  <shell-escape>printf 'Enter a search term to find with notmuch: '; read x; echo \$x >~/.cache/mutt_terms<enter>\
  <limit>~i \"\`notmuch search --output=messages \$(cat ~/.cache/mutt_terms) | head -n 600 | perl -le '@a=<>;s/\^id:// for@a;$,=\"|\";print@a' | perl -le '@a=<>; chomp@a; s/\\+/\\\\+/ for@a;print@a' \`\"<enter>" "show only messages matching a notmuch pattern"

# simulate the old url menu
macro index,pager,attach,compose \Cb "\
  <enter-command> set my_pipe_decode=\$pipe_decode pipe_decode<Enter>\
  <pipe-message> urlscan<Enter>\
  <enter-command> set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<Enter>" \
  "call urlview to extract URLs out of a message"

# macro index B "<limit>all\n" "show all messages (undo limit)"

# imitate the old search-body function
macro index   \Cy "<search>~b "            "search in message bodies"
macro index   y   "<change-folder>?"       "show incoming mailboxes list"
macro pager   y   "<exit><change-folder>?" "show incoming mailboxes list"
bind  browser y   exit

# Attach an image from the clipboard
# macro compose P "<attach-file>\
#   `tmpfile=$(mktemp) && mv "$tmpfile" "$tmpfile".png && wl-paste -t image/png > "$tmpfile".png && echo "$tmpfile".png`<enter>"\
#   "attach image from clipboard"

# move to next sidebar folder, no matter if sidebar is visible or not
macro index,pager ,, \
  "<enter-command>set my_old_visible=\$sidebar_visible sidebar_visible<enter>\
  <sidebar-next><sidebar-open><enter-command>set sidebar_visible=\$my_old_visible<enter>" \
  "move to next sidebar folder"

# TODO: Trying to find macro to unsubscribe from mailing list
# macro index X ':set fast_reply=yes^M:set editor="touch %s"^Mv/confirm ^Mrf^A^K^Myqd:reset fast_reply^M:set editor="vim %s"^M'
# macro pager X ':set fast_reply=yes^M:set editor="touch %s"^Mv/confirm ^Mrf^A^K^Myqd:reset fast_reply^M:set editor="vim %s"^M'

# macro index G <last-entry>
# bind index < first-entry
# bind index > last-entry

macro index,pager p "s=Junk<enter>"     "mark as spam"
macro index,pager x "s!<enter>"         "save to inbox"
macro index,pager E "s=receipts<enter>" "save to receipts"
# macro index,pager I "c!<enter><limit>~(! ~D)<enter>G" "inbox"
# macro index,pager S "<change-folder-readonly>~/temp/sent_materialized<enter>G" "sent mail"

# ugly hack to resume the currently highlighted mail
# may fail messily if you do not create =draft_tmp first
macro index,pager R \
 "<enter-command>set postponed='=draft_tmp' my_old_maildir_trash=\$maildir_trash nomaildir_trash<enter>\
 s=draft_tmp<enter><recall-message><enter-command>set postponed='=INBOX' maildir_trash=\$my_old_maildir_trash<enter>" \
 "recall current message"

# press 'H' on a message to change this setting once and view the HTML part in priority
macro index H \
  "<enter-command>unalternative_order *<enter>\
  <display-message><enter-command>alternative_order text/plain text/enriched text/html<enter>" \
  "view html"

macro pager H "<exit>H"

# FIX:
# bind index,pager \Cx modify-labels
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                                   Headers                                    │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
# Reset the header order
unhdr_order *

# -------------------------------------------------------------------------
# Name: hdr_order
# -------------------------------------------------------------------------
# With the hdr_order command you can specify an order in which NeoMutt will attempt to present
# these  headers  to you when viewing messages.
# -------------------------------------------------------------------------
hdr_order Date: Delivery-date: To: Envelope-to: Delivered-To: X-Original-To: Cc: Bcc: From From: Reply-To: X-Disposition-Notification-To: Mail-Followup-To: X-URL: Organization: Organisation: X-MimeOLE User-Agent: X-HTTP-UserAgent: X-Mailer: X-Newsreader: X-Editor: X-Operating-System: Subject: X-Spam-Status:

# Add my fingerprint and keyserver to my headers
my_hdr X-gpg-fingerprint: E93A CCAA AEB0 2478 8C10  6EDE C011 CBEF 6628 B679
my_hdr X-gpg-key: https://keys.openpgp.org

# Header filtering. Useful with notmuch
unignore Message-Id
unignore In-Reply-To
unignore List-Id X-Original-To # Figure out why receieved
unignore X-Sieve-Destination   # Figure out where it was originally filed
unignore From Subject To Cc Bcc
unignore Reply-To User-Agent Date X-Mailer
unignore Organization
unignore List-Id

# -------------------------------------------------------------------------
# Name: ignore
# -------------------------------------------------------------------------
# The ignore command allows you to specify header fields which you don't normally want to see in the
# pager. You do not  need  to  specify  the full header field name. For example, “ignore content-”
# will ignore all header fields that begin with the pattern “content-”, “ignore *” will ignore all
# headers.
# -------------------------------------------------------------------------
ignore Envelope-to X-OriginalArrivalTime X-ClientAddr X-Originating-IP X-UID
ignore Importance X-Keywords Delivery-date X-Apparently-To X-Apparently-From
ignore X-Authentication-Info List- Mailing-List X-IMAPbase Old-Content-Type
ignore X-Message-Info X-gotmail-version X-Virus-Scanned Authentication-Results
ignore X-Spam-Flag X-Spam-Level X-Spam-Checker-Version X-Spam-Prev
ignore X-All-Your-Base-Are-Belong-To X-BFI X-HotPOP-Delivered-To X-Return-Path
ignore X-eGroups- X-Yahoo-Profile X-Juno-Line-Breaks X-Mailman- X-BeenThere
ignore X-YahooFilteredBulk X-Header-Overseas X-Header-NoReverseIP
ignore X-MS- Thread- X-Priority X-ASG- X-ORBL X-Barracuda-Spam-
ignore X-DMCA X-Abuse X-AntiAbuse X-RFC2646 X-Postfilter X-Received
ignore X-ML- X-MLServer X-Mail-Count Posted X-Complaints-To Complaints-To
ignore Newsgroups NNTP- X-From-Usenet X-Trace Injection-Info X-rubymirror
ignore Return-Path Message-ID Received Mime-Version Content-Disposition Path
ignore Content-Type Content-Length Status Lines "From "
ignore X-Twitter X-Campaignid X-Forwarded-To X-Forwarded-For X-DKIM X-DomainKeys
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                                 Attachments                                  │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
# -------------------------------------------------------------------------
# Name: mime_lookup mime-type[/mime-subtype] [ mime-type[/mime-subtype] ... ]
# -------------------------------------------------------------------------
# This command permits you to define a list of “data” MIME content types for which NeoMutt will try
# to determine the actual file type from the file name, and not use a mailcap(5) entry given for the
# original MIME type. For instance, you may add the appli‐ cation/octet-stream MIME type to this
# list.
# -------------------------------------------------------------------------
mime_lookup application/octet-stream

# -------------------------------------------------------------------------
# Name: attachments {+|-}disposition mime-type
# -------------------------------------------------------------------------
# You can make your message index display the number of qualifying attachments in each message, or
# search for messages by attach‐ ment count. You also can configure what kinds of attachments
# qualify for this feature with the attachments and unattachments commands.
#
# disposition is the attachment's Content-Disposition type — either inline or attachment. You can
# abbreviate this to I or A.
#
# mime-type is the MIME type of the attachment you want the command to affect. A MIME type is always
# of the format major/minor. The major part of mime-type must be literal text (or the special token
# “*”, but the minor part may be a regular expression. Therefore, “*/.*” matches any MIME type.
# -------------------------------------------------------------------------
attachments   +A */.*
attachments   -A text/x-vcard application/pgp.*
attachments   -A application/x-pkcs7-.*
attachments   +I text/plain
attachments   -A message/external-body
attachments   -I message/external-body
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                                    Hooks                                     │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
# -------------------------------------------------------------------------
# Name: send-hook
# -------------------------------------------------------------------------
# Matched against all messages, both new and replies, and run a command.
# -------------------------------------------------------------------------

# Hide the 'From' header
send-hook . "unmy_hdr From:"
send-hook . "set pgp_autosign"
send-hook . "set crypt_opportunistic_encrypt"
send-hook . "set crypt_autosign=yes"
send-hook . "set crypt_autoencrypt=no"
# Autoencrypt if every recipient has a GPG key
send-hook '!~G ^%C gpg' 'set crypt_autoencrypt=yes'

# -------------------------------------------------------------------------
# Name: message-hook
# -------------------------------------------------------------------------
# Before NeoMutt displays (or formats for replying or forwarding) a message which matches the given
# pattern (or, when it is preceded by an exclamation mark, does not match the pattern), the given
# command is executed. When multiple message-hooks match, they are executed in the order in which
# they occur in the configuration file.
# -------------------------------------------------------------------------
message-hook '~A'   'unignore X-Face; ignore X-Spam-Status'
message-hook '~P|~h ^X-All-Your-Base-Are-Belong-To:' 'ignore X-Face X-Spam-Status'
message-hook '~h    X-Spam-Level:\ \\*'              'unignore X-Face X-Spam-Status'
# Search current message for content signed/encrypted with PGP the “traditional” way, that is,
# without proper MIME tagging whenever the beginning of a PGP message is detected within the
# message.
message-hook '!(~g|~G) ~b"^-----BEGIN\ PGP\ (SIGNED\ )?MESSAGE"' "exec check-traditional-pgp"
# Prefer plain text to HTML generally
message-hook . "unalternative_order *; alternative_order text/plain text/enriched text/html"

# -------------------------------------------------------------------------
# Name: fcc-hook
# -------------------------------------------------------------------------
# Used to save outgoing mail in a mailbox other than $record. NeoMutt searches the initial list of
# message recipients for the first matching pattern and uses mailbox as the default “Fcc:” mailbox.
# If no match is found the message will be saved to $record mailbox.
# -------------------------------------------------------------------------
fcc-hook  '~p ~P ~s"(test|fu[c]k|^[jf][^A-Z]*$)"' /dev/null

# -------------------------------------------------------------------------
# Name: score
# -------------------------------------------------------------------------
# Adds value to a message's score if pattern matches it. pattern is  a  string  in  the  format
# described in the PATTERNS section below. value is a positive or negative integer. A message's
# final score is the sum total of all matching score entries.
# -------------------------------------------------------------------------
score '~A' 50
score '~p' 10
score '~N' 4
score '~O' 2
score '~D' -3
#score "~H ^0" -20
#score "~H ^[1-9]" -40

# -------------------------------------------------------------------------
# Name: spam
# -------------------------------------------------------------------------
# NeoMutt has generalized support for external spam-scoring filters. By defining your spam patterns
# with the spam and nospam com‐ mands, you can limit, search, and sort your mail based on its spam
# attributes, as determined by the external filter. You also can display the spam attributes in your
# index display using the %H selector in the $index_format variable. (Tip: try "%?H?[%H] ?" to
# display spam tags only when they are defined for a given message).
#
# For further information on spam-scoring filters, please consult the section “Spam Detection” in
# the NeoMutt manual.
# -------------------------------------------------------------------------
# http://mutt-users.mutt.narkive.com/t0y58ITT/sort-mailbox-by-spam-tag-score-sorting-strangeness
spam "X-Spam-Status: (Yes|No), score=(-?[[:digit:]]+\.[[:digit:]]+)" "%2"
# ]]]

#  ╭──────────────────────────────────────────────────────────────────────────────╮
#  │                                    Colors                                    │
#  ╰──────────────────────────────────────────────────────────────────────────────╯ [[[
#### Objects
# attach_headers attachment  body        bold         error
# hdrdefault     header      index       index_author index_collapsed
# index_date     index_flags index_label index_number index_size
# index_subject  index_tag   index_tags  indicator    markers
# message        normal      progress    prompt       quoted
# quotedN        search      signature   status       tilde
# tree           underline

# sidebar_divider   sidebar_flagged sidebar_highlight
# sidebar_indicator sidebar_new     sidebar_ordinary
# sidebar_spool_file
#
##### composeobjects
# include header, security_encrypt, security_sign, security_both, security_none
#
#### colors:
#  include: default, black, red, green, yellow, blue, magenta, cyan, white, colorN
#
#### attributes:
# none, bold, underline, reverse, and standout.
#
# pattern “*” is a special token which means to clear the color list of all entries.
# Colors for deleted mail


# Default index colors:
color index yellow default '.*'
color index_author  red  default ".*"
color index_flags   bold color20 default ".*"
color index_subject color28 default ".*"
color index_tag     bold color23 default ".*"

# Deleted mail
color index color15  default "~D"    # Deleted, renders as gray
color index color5 default "!~(!~D)" # Deleted THREADS

# New mail is boldened:
color index         bold color17    default "~N"
color index_author  bold brightred  default "~N"
color index_flags   bold color19 default "~N"
color index_subject bold color28  default "~N"
# color index black default ~O # old

# Flagged mail
color index         bold color17    default "~F"
color index_author  bold color21    default "~F"
color index_flags   bold brightblue default "~F"
color index_subject bold color21    default "~F"
# mono  index         bold    "~F"

# Encrypted mail
color index         bold color17 default "~G"
color index_author  bold color18 default "~G"
color index_flags   color20 default "~G"
color index_subject bold color18 default "~G"

# Messages from me
color index_author  bold color32 default "~P"
# color index_flags   color20 default "~G"
# color index_subject bold color18 default "~G"

# Not addressed to me personally
color index green default !(~p)

# Tagged mail is highlighted:
# color index black default ~T # tagged
color index_author brightred default    "~T" # tagged messages

color index green   default ~Q    # have been replied to
color index magenta default "~h X-Mutt-Fcc" # drafts
# mono index bold "~F" # flagged
color index red     default "~F ~G" # flagged, encrypted
color index blue    default "~F !(~p)" # flagged, not addressed to me personally
color index black   default "~F ~P" # flagged, message from me
color index magenta default "~F ~h X-Mutt-Fcc" # flagged (finalized) drafts

# Other colors and aesthetic settings:
mono bold      bold
mono underline underline
mono indicator reverse
mono error     bold

color normal     default       default # message
color attachment brightmagenta default
color hdrdefault brightgreen   default # headers
color indicator  brightblack   white   # currently selected message
color markers    red           white   # the + for wrapped pager lines
color message    cyan          default # informational messages, not mail
color search     brightmagenta default # highlight search patterns in the pager
color signature  brightgreen   default # signature (after "-- ") is red
color status     brightyellow  default # status bar is yellow on dark blue
color tilde      default       default # ~'s after message body
mono  tilde      bold
color tree       red           default   # thread tree in index menu is magenta
color normal     white         default   # message

# coloring quoted text - coloring the first 7 levels:
color quoted  green     default
color quoted1 blue      default
color quoted2 cyan      default
color quoted3 yellow    default
color quoted4 blue      default
color quoted5 brightred default
color quoted6 red       default
color quoted7 green     default

# coloring the sidebar
color sidebar_highlight brightgreen default
color sidebar_divider   color46     default
color sidebar_flagged   red         default
color sidebar_new       green       default

color error     red     default
color bold      black   default
color underline black   default
color normal    default default

# compose menu colors (mutt 1.9)
color compose header           cyan   default
color compose security_none    red    default
color compose security_sign    red    default
color compose security_encrypt yellow default
color compose security_both    green  default

# === Regex highlighting === [[[
color header blue          default ".*"
color header brightblue    default '^(Received)'
color header magenta       default '^(Date)'
color header brightred     default '^(To)'
color header brightgreen   default '^(Message-ID)'
color header bold color20 default '^(Subject)'
color header bold color21  default '^(From)'

color header brightwhite   default "^(B[cC][cC]|C[cC])"
color header brightgreen   default "(Return-[Pp]ath)"
color header brightgreen   default '^(Reply-To)'
color header brightred     default "^(X-Spam-Status)"
color header brightgreen   default "^(X-)?Sender:"

color header    brightyellow    default   '^(User-Agent)'
color header    red             default   '^(Content-Length)'
color header    red             default   '^(Status)'
color header    red             default   '^(Lines)'
color header    brightyellow    default   '^(X-)?Mime'
color header    brightblue      default   "^(Delivered-|X-Original-|Envelope-)?To"
color header    brightgreen     default   '^(Mail-Followup-To)'
color header    brightgreen     default   '^(X-Disposition-Notification-To)'
color header    brightgreen     default   '^(x-url)'
color header    magenta         default   '^(Delivery-date)'
color header    magenta         default   '^(Posted)'
color header    magenta         default   '^(NNTP-Posting-Date)'
color header    brightwhite     default   '^(X-All-Your-Base-Are-Belong-To)'
color header    green           default   '^(References)'
color header    green           default   '^(In-Reply-To)'
color header    green           default   '^(Organi[sz]ation)'
color header    green           default   '^(X-Trace)'
color header    green           default   '^(Injection-Info)'
color header    brightyellow    default   '^(Old-)?Content-(Type|Disposition|Transfer-Encoding)'
color header    brightyellow    default   '^(X-Mailer[A-Za-z-]*)'
color header    brightyellow    default   '^(X-Editor)'
color header    brightyellow    default   '^(X-Operating-System)'
color header    brightyellow    default   '^(X-Newsreader)'
color header    brightyellow    default   '^(X-Accept-Language)'
color header    brightyellow    default   '^(X-MSMail-)'
color header    brightyellow    default   '^(X-)?Priority'
color header    brightyellow    default   '^(X-HTTP-UserAgent)'
color header    brightblack     default   '^(X-HotPOP-Delivered-To)'
color header    brightblack     default   '^(X-Face)'

# Date formats
color body color19 default "[0-9]{1,2}:[0-9]{2}(:[0-9]{2})?( ?(AM|PM|am|pm))?( +[+-][0-9]{4})?"
color body color19 default "(\(19|20\)?[0-9]{2}/[01]?[0-9]/[0123]?[0-9]|[0123]?[0-9][/.][01]?[0-9][/.]\(19|20\)?[0-9]{2})(( at)? +[0-9]{1,2}:[0-9]{2}(:[0-9]{2})?( ?(AM|PM|am|pm))?( +[+-][0-9]{4})?)?"
color body color19 default "((Sun(day)?|Mon(day)?|Tue(sday)?|Wed(nesday)?|Thu(sday)?|Fri(day)?|Sat(urday)?),? +)?(Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|June?|July?|Aug(ust)?|Sep(ember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?)[ .]+[0-9]{1,2}(st|nd|rd|th)?,?( +(19|20)[0-9]{2}(,?( at)? [0-9]{1,2}:[0-9]{2}(:[0-9]{2})?( ?(AM|PM|am|pm))?( +[+-][0-9]{4})?)?)?"
color body color19 default "((Sun(day)?|Mon(day)?|Tue(sday)?|Wed(nesday)?|Thu(sday)?|Fri(day)?|Sat(urday)?),? +)?[0-9]{1,2}(st|nd|rd|th)?[ .]+(Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|June?|July?|Aug(ust)?|Sep(ember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?),?( +(19|20)?[0-9]{2})?(( at)? [0-9]{1,2}:[0-9]{2}(:[0-9]{2})?( ?(AM|PM|am|pm))?( +[+-][0-9]{4})?)?"

# URL highlighting
color body brightblue   default "(https?|ftp)://[\-\.,/%~_:?&=\#a-zA-Z0-9]+" # URL

# Email highlighting
color body brightred default  "[\-\.+_a-zA-Z0-9]+@[\-\.a-zA-Z0-9]+" # Email addresses
mono  body bold               "[\-\.+_a-zA-Z0-9]+@[\-\.a-zA-Z0-9]+" # Email addresses

# Bad PGP signature
color body red          default "(BAD signature)"
color body brightyellow red     "^gpg: BAD signature from.*"

# Formatting
color body brightwhite  default "(^| |\t)\\*[a-z0-9]([a-z0-9-]* ){,3}[a-z0-9,.!?-]*\\*"
color body brightyellow default "(^| |\t)_[a-z0-9]([a-z0-9-]* ){,6}[a-z0-9,.!?-]+_"
color body brightyellow default "(^| |\t)_[a-z0-9][a-z0-9,.!?_-]*_"

# Misc
color body brightblack black "^[-_=*]{3,}\n"
color body color31     black "^SPAM:"

color body green        default "\`[^\`]*\`"          # Green text between ` and `
color body brightblue   default "^# \.*"              # Headings as bold blue
color body brightcyan   default "^## \.*"             # Subheadings as bold cyan
color body brightgreen  default "^### \.*"            # Subsubheadings as bold green
color body yellow       default "^(\t| )*(-|\\*) \.*" # List items as yellow
color body brightcyan   default "[;:][-o][)/(|]"      # emoticons
color body brightcyan   default "[;:][)(|]"           # emoticons
color body brightcyan   default "[ ][*][^*]*[*][ ]?"  # more emoticon?
color body brightcyan   default "[ ]?[*][^*]*[*][ ]"  # more emoticon?
color body cyan         default "(Good signature)"
color body brightblack  default "^gpg: Good signature .*"
color body brightyellow default "^gpg: "
mono  body bold         "^gpg:  Good signature"

color body red default "([a-z][a-z0-9+-]*://(((([a-z0-9_.!~*'();:&=+$,-]|%[0-9a-f][0-9a-f])*@)?((([a-z0-9]([a-z0-9-]*[a-z0-9])?)\\.)*([a-z]([a-z0-9-]*[a-z0-9])?)\\.?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(:[0-9]+)?)|([a-z0-9_.!~*'()$,;:@&=+-]|%[0-9a-f][0-9a-f])+)(/([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*(;([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*)*(/([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*(;([a-z0-9_.!~*'():@&=+$,-]|%[0-9a-f][0-9a-f])*)*)*)?(\\?([a-z0-9_.!~*'();/?:@&=+$,-]|%[0-9a-f][0-9a-f])*)?(#([a-z0-9_.!~*'();/?:@&=+$,-]|%[0-9a-f][0-9a-f])*)?|(www|ftp)\\.(([a-z0-9]([a-z0-9-]*[a-z0-9])?)\\.)*([a-z]([a-z0-9-]*[a-z0-9])?)\\.?(:[0-9]+)?(/([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*(;([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*)*(/([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*(;([-a-z0-9_.!~*'():@&=+$,]|%[0-9a-f][0-9a-f])*)*)*)?(\\?([-a-z0-9_.!~*'();/?:@&=+$,]|%[0-9a-f][0-9a-f])*)?(#([-a-z0-9_.!~*'();/?:@&=+$,]|%[0-9a-f][0-9a-f])*)?)[^].,:;!)? \t\r\n<>\"]"
# ]]]
# ]]]

source /home/lucas/.config/mutt/accounts/burnsac@me.com.muttrc
source /home/lucas/.config/mutt/emails.muttrc

# Other
# Can search for PGP using: ~g, ~G, and ~k

# vim: ft=neomuttrc:et:sw=0:ts=2:sts=2:fdm=marker:fmr=[[[,]]]:
