# ╭──────────────────────────────────────────────────────────╮
# │                   Key Movement / Keys                    │
# ╰──────────────────────────────────────────────────────────╯

# xte "keyup h" "key Left"

## Autokey does this much better

# Modify keys with mod3 to mimic arrow keys
# mod3 + h
#     xdotool keyup h key --clearmodifiers Left

# mod3 + j
#     xdotool keyup j key --clearmodifiers Down
#
# mod3 + k
#     xdotool keyup k key --clearmodifiers Up
#
# mod3 + l
#     xdotool keyup l key --clearmodifiers Right

# Get help for keybindings
super + shift + h
    sxhkd_help &

# ╭──────────────────────────────────────────────────────────╮
# │                         Restart                          │
# ╰──────────────────────────────────────────────────────────╯

# Quit bspwm
super + shift + Escape
    prompt "Are you sure you would like to quit this Xsession" "bspc quit"

# Restart hotkey damon
super + shift + x
    killandnotify sxhkd "Config reloaded" && sxhkd &

# Restart polybar
super + shift + p
    reloadpolybar

# Restart dunst
super + shift + d
    killandnotify dunst "Dunst reloaded" && dunst &

# Restart bspwm
ctrl + alt + super + r
    notify-send "bpswm" "Configuration reloaded" && bspc wm -r

# Restart crashed items
# Happens when using `bustd`
super + shift + c
    notify-send "Crashed" "Items were reloaded" && restart-crashed

# bspc wm -r

# ╭──────────────────────────────────────────────────────────╮
# │                          Screen                          │
# ╰──────────────────────────────────────────────────────────╯

# Lock screen
super + Delete
    xidlehook-client --socket /tmp/xidlehook.sock control --action trigger --timer 1

# ╭──────────────────────────────────────────────────────────╮
# │                          Window                          │
# ╰──────────────────────────────────────────────────────────╯

# NODE_SEL :=
#
#   [NODE_SEL#]
#     (DIR|CYCLE_DIR|PATH|any|first_ancestor|last|newest|
#      older|newer|focused|pointed|biggest|smallest|
#      <node_id>
#     )[.[!]focused][.[!]active][.[!]automatic][.[!]local]
#      [.[!]leaf][.[!]window][.[!]STATE][.[!]FLAG][.[!]LAYER][.[!]SPLIT_TYPE]
#      [.[!]same_class][.[!]descendant_of][.[!]ancestor_of]
#
# STATE      := tiled|pseudo_tiled|floating|fullscreen
# FLAG       := hidden|sticky|private|locked|marked|urgent
# LAYER      := below|normal|above
# SPLIT_TYPE := horizontal|vertical
# PATH       := @[DESKTOP_SEL:][[/]JUMP](/JUMP)*
# JUMP       := first|1|second|2|brother|parent|DIR

# Closing/Killing Windows
# super + {_,shift + }q
#     bspc node -{c,k}

# Close/kill window
alt + shift + {_,ctrl + }x
    bspc node -{c,k}

# Close/kill window
alt + super + {_,ctrl + }x
    bspc node -{c,k}

# Open/close windows (functional equivalent of minimize)
super + m
    whid dmenu

# Close window (minimize)
super + shift + m
    whid hide

# Reopen last closed window
super + ctrl + m
    whid last

# ╭──────────────╮
# │ Tiled Window │
# ╰──────────────╯

# Focus a (pseudo_)tiled window / Cycle (pseudo_)tiled windows.
super + {_,shift + }t
    bspc node -f 'focused.!floating.!fullscreen.window#{next,prev}.local.!hidden.!floating.!fullscreen.window' \
        || bspc node -f 'last.local.!focused.!hidden.!floating.!fullscreen.window' \
        || bspc node -f 'any.local.!focused.!hidden.!floating.!fullscreen.window'

# Rotate tree
mod3 + {_,shift +}r
    bspc node @/ --rotate {90,-90}
#   bspc node @/ -C forward # backward

# Focus on window in direction (tiled)
alt + {h,j,k,l}
    bspc node -f {west,south,north,east}

# Swap window in direction (tiled)
alt + shift + {h,j,k,l}
    bspc node -s {west,south,north,east}
# bspwm_smart_move {west,south,north,east}

# alt + {_,shift + } + r
#     bspc node @/ --circulate {backward,forward}

# Equalize window sizes
ctrl + alt + 0
    bspc node @/ -B
# bspc node @/ -E

# Dynamic gaps
mod3 + shift + bracket{left,right}
    bspc config -d focused window_gap "$(($(bspc config -d focused window_gap) {-,+} 5 ))"

# Resize window in any direction
# When floating, moves sides in
ctrl + alt + {h,j,k,l}
    bspwm-resize {west,south,north,east} 20

# Resize window in any direction
# When floating, moves sides out
super + ctrl + alt + {h,j,k,l}
  n=10; \
  { d1=left;   d2=right;  dx=-$n; dy=0;   \
  , d1=bottom; d2=top;    dx=0;   dy=$n;  \
  , d1=top;    d2=bottom; dx=0;   dy=-$n; \
  , d1=right;  d2=left;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# Resize windows with bigger increments
super + ctrl + {h,j,k,l}
    bspwm-resize {west,south,north,east} 50

# ╭─────────╮
# │ Monocle │
# ╰─────────╯

# Toggle monocle layout (maximise focused node).
# If you use `-l monocle` you lose the toggle functionality.
mod3 + m
    bspc desktop -l next

# super + {_,shift + }p
#     bspc node -f {next,prev}

# This command fixed above from not focusing?
# bspc node -l below -f next.local

# super + {h,j,k,l}
#     m='.local'; \
#     bspwm-monocle {west$m next$m,south$m prev$m,north$m next$m,east$m prev$m}

# Alternate layers (doesn't switch focus)
# super + shift + {h,j,k}
#     bspc node -l {normal,below,above}

# Alternate layers (doesn't switch focus)
super + shift + j
    bspc node -l below || bspc node -l above

# ??
# mod3 + {comma,period}
#     bspc desktop -C {backward,forward}

# set manual preselect split direction on current window
# ctrl + alt + shift {h,j,k,l}
#     bspc node -p {west,south,north,east}

# cancel the manual preselect direction on the current window or all windows on the desktop
# ctrl + alt + shift + {_,shift + }space
#     bspc {node -p cancel,desktop -c}

# set the node flags
# super + ctrl + {m,x,y,z}
#   bspc node -g {marked,locked,sticky,private}

# ╭───────────────────╮
# │ Fullscreen Window │
# ╰───────────────────╯

# Rotates full screen
mod3 + bracket{left,right}
    bspc node -f next.tiled && bspc node focused.tiled -t fullscreen

# Toggle between tiled/fullscreen
mod3 + f
    bspc node -t tiled || bspc node -t fullscreen

# ╭─────────────────╮
# │ Floating Window │
# ╰─────────────────╯

# Toggle floating on and off
mod3 + space
    bspc node focused.tiled -t floating || bspc node focused.floating -t tiled
# bspc node -t tiled || bspc node -t floating

# Focus a floating window / cycle floating windows
super + {_,shift + }f
    bspc node -f 'focused.floating#{next,prev}.local.!hidden.floating' \
        || bspc node -f 'last.local.!focused.!hidden.floating' \
        || bspc node -f  'any.local.!focused.!hidden.floating'

# Toggle fullscreen, floating, and tiled
# mod3 + {shift + space,space}
#    bspc node -t {tiled,floating}

# Move a floating window with the arrow keys (else use Alt + Left Mouse
# Click to drag).  I seldom use floating windows.
# ctrl + shift + {Left,Down,Up,Right}
#     bspc node -v {-20 0,0 20,0 -20,20 0}

# ╭────────────╮
# │ Any Window │
# ╰────────────╯

# Rotate between any window (monocle|floating|fullscreen) windows
super + {j,k}
    bspc node -f 'focused.window#{next,prev}.local.!hidden.window' \
        || bspc node -f 'last.local.!focused.!hidden.window' \
        || bspc node -f 'any.local.!focused.!hidden.window'
# bspc node -f {next,prev}.local.!hidden.window

# Focus the older or newer node in the focus history
super + {o,i}
    bspc wm -h off; \
    bspc node -f {older,newer}; \
    bspc wm -h on

# Focus last window (works for monocle windows)
super + comma
    bspc node -f last.local.!hidden.window

# mod3 + e
#     bspc node -f {next.floating,next.tiled}

# ╭──────────────────────────────────────────────────────────╮
# │                         Desktop                          │
# ╰──────────────────────────────────────────────────────────╯

# DESKTOP_SEL :=
#
#   [DESKTOP_SEL#]
#     (CYCLE_DIR|any|last|newest|older|newer|
#         [MONITOR_SEL:](focused|^<n>)|
#         <desktop_id>|<desktop_name>
#     )[.[!]focused][.[!]active][.[!]occupied][.[!]urgent][.[!]local]

# focus the node for the given path jump
# super + {p,b, comma, period}
#     bspc node -f @{parent,brother,first,second}

# focus the last node/desktop
super + {grave,Tab}
    bspc -f {node,desktop} last

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} '^{1-9,10}'

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
    bspc desktop -f {prev,next}.local
# bspc desktop -f {prev.occupied,next.occupied}

# move desktops in another way
alt + {Left,Right}
    bspc desktop -f {prev,next}

# super + h
#   bspc window -p down
#
# # Split window vertically
# super + v
#   bspc window -p right

# ╭─────────╮
# │ Monitor │
# ╰─────────╯

# MONITOR_SEL :=
#
#   [MONITOR_SEL#]
#     (DIR|CYCLE_DIR|any|last|newest|older|newer|focused|pointed|primary|^<n>|
#      <monitor_id>|<monitor_name>
#     )[.[!]focused][.[!]occupied]

# ╭──────────────────────────────────────────────────────────╮
# │                       Receptacles                        │
# ╰──────────────────────────────────────────────────────────╯

# A leaf node that doesn’t hold any window.
# When a node is inserted on a receptacle in automatic mode, it will replace the receptacle.
# A receptacle can be inserted on a node, preselected and killed.

# mod3 + x ; n ; r
#     bspc node -i

# ╭──────────────────────────────────────────────────────────╮
# │                     Continuous Input                     │
# ╰──────────────────────────────────────────────────────────╯

mod3 + c : {h,j,k,l}
    bspwm-resize {west,south,north,east} 50

# Mode for dynamic gaps.
mod3 + c : bracket{left,right}
    bspc config -d focused window_gap "$(($(bspc config -d focused window_gap) {-,+} 5 ))"

# Move floating windows with the arrow keys
mod3 + c : {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

# ╭──────────────────────────────────────────────────────────╮
# │                          Launch                          │
# ╰──────────────────────────────────────────────────────────╯

# Launch alacritty
super + Return
    alacritty

# Launch alacritty
# super + ctrl + Return
#     alacritty

# Launch tdrop
super + alt + Return
    tdrop -ma -w 1916 -y 0 alacritty

# Open URL in clipboard
control + alt + super + o
    handlr open "$(xsel -b)"

# Launch rofi application
mod3 + d
    rofi -show drun

# Launch rofi
mod3 x ; {x,b}
     rofi -show {drun,window}

# Launch applications
mod3 + {b,v,g,p,period,s}
    {$BROWSER &>/dev/null,brave,chromium,pcmanfm,thunderbird,signal-desktop}

# prs-copy

# Password manager dmenu script
ctrl + alt + super + p
    prs-dmenu

# Clipboard history
ctrl + alt + y
    rofi-greenclip

# Media Controls
super + F1
    $TERMINAL -e ncmpcpp

# ╭──────────────────────────────────────────────────────────╮
# │                        Additions                         │
# ╰──────────────────────────────────────────────────────────╯

# Speaker/output volume.  Requires `amixer` and dedicated keys.
XF86Audio{Mute,LowerVolume,RaiseVolume}
    volume-notify '' {toggle,-5%,+5%}

# Speaker/output volume.  Requires `amixer` and dedicated keys.
shift + XF86Audio{Mute,LowerVolume,RaiseVolume}
    volume-notify 'bluetooth' {toggle,-5%,+5%}

# amixer-notify "toggle"
# amixer-notify "set" "{5%-,5%+}"
# pulsevolctrl-notify "output-vol" "alsa_output.pci-0000_00_1f.3.hdmi-stereo" {+2%, -2%}
# pulsevolctrl-notify "output-mute" "alsa_output.pci-0000_00_1f.3.hdmi-stereo"

ctrl + alt + shift + b
    $TERMINAL -e "fzf-bluetooth" &

# Toggle caffeinate on/off
F10
    togglecaffeine

# Remap keys
F11
    remaps && dunstify "remaps" "remapped"

# ??
# XF86Mail
F12
    $TERMINAL -e neomutt

# Sync email
super + F8
    mailsync

# Mount a USB drive or Android device
# super + {F9,F10}
#     {dmenumount,dmenuumount}

Print
    flameshot full -p ~/Pictures/screenshot

# Gui screenshot
Print + shift
    flameshot gui

Print + super
    flameshot screen -p ~/Pictures/screenshot

Print + ctrl
    maimpick

ctrl + shift + 3
    prtscr

ctrl + shift + 4
    prtregion --disk

ctrl + shift + 5
    prtwindow

control + super + alt + u
    prtwindow

# super + {F5,F6,F7,F8}
#     playerctl -p "mpd" {stop,previous,play-pause,next}

super + {F4,F5,F6}
    playerctl -p "mpd" {previous,play-pause,next}

# Control the [last] currently active player.
mod3 + XF86Audio{Play,Prev,Next}
    playerctl {play-pause,previous,next}

# Hide/show dunst
mod3 + {_,shift + }n
    dunstctl {history-pop,close-all}

# ╭──────────────────────────────────────────────────────────╮
# │                          Addons                          │
# ╰──────────────────────────────────────────────────────────╯

# Print
#   scrot -u -z '%Y-%m-%d_%H:%M:%S_$wx$h$n.png' -e 'mv $f ~/Pictures' \
#     && notify-send -i gnome-screenshot "Window view screenshot" "Saved image to Pictures"

# mod4 + Print
#   scrot -m -z '%Y-%m-%d_%H:%M:%S_$wx$h.png' -e 'mv $f ~/Pictures' \
#     && notify-send -i gnome-screenshot "Screen view screenshot" "Saved image to Pictures"

# ╭──────────────────────────────────────────────────────────╮
# │                          Extra                           │
# ╰──────────────────────────────────────────────────────────╯

# Preselect the direction or insert again to cancel the preselection.
# This enters the manual tiling mode that splits the currently focused
# window.
alt + control + shift + {h,j,k,l}
    bspc node --presel-dir {west,south,north,east}

alt + control + shift + c
    bspc node -p cancel

# Preselect the ratio.  The default value is 0.5, defined in `bspwmrc`.
# mod4 + alt + {1-9}
#   bspc node -o 0.{1-9}

# Set the node flags.  Locked is a node that cannot be closed with `bspc
# node --close`.  Marked is a specific selector that allows operating on
# the given item (such as sending the marked item to the newest
# preselection).  Sticky stays in the focused desktop.  Private tries to
# keep its dimensions and tiling position.
# mod4 + x ; f ; {l,m,s,p}
# bspc node -g {locked,marked,sticky,private}

# super + {t,shift + t,s,f}
#   bspc node -t {tiled,pseudo_tiled,floating,fullscreen}
