{
  // If false, CocFzf and Bqf-fzf open
  "coc.preferences.useQuickfixForLocations": true,
  "coc.preferences.extensionUpdateCheck": "daily",
  "coc.preferences.messageLevel": "error",
  "coc.preferences.currentFunctionSymbolAutoUpdate": false,
  // "coc.preferences.formatOnSaveFiletypes": [
  //   "go"
  // ],
  "coc.preferences.formatOnType": true,
  "coc.preferences.snippetHighlight": false,
  "coc.source.file.triggerCharacters": ["/"],
  "coc.source.file.ignoreHidden": false,
  "coc.source.file.shortcut": "", // "", "FIL"
  "coc.source.around.shortcut": "ARO", // "",
  "coc.source.buffer.shortcut": "BUF", // "",
  "coc.source.tag.shortcut": "TAG", // "",
  "coc.source.word.shortcut": "WRD",
  "coc.source.syntax.shortcut": "SYN",
  // "coc.source.word.priority": 0,
  "outline.keepWindow": true,
  "outline.sortBy": "position",
  "outline.splitCommand": "botright 40vs",
  "outline.showLineNumber": true,
  "outline.followCursor": true,
  "outline.switchSortKey": "<C-s>",
  "tree.key.activeFilter": "zf",
  "tree.key.close": "qq",
  "tree.key.toggle": "t",
  "tree.key.selectNext": "<C-j>",
  "tree.key.selectPrevious": "<C-k>",
  // Filetypes that enable semanticTokens highlighting
  "semanticTokens.filetypes": [
    // "c",
    "cpp",
    "go",
    "html",
    "java"
    // "javascript",
    // "lua",
    // "rust",
    // "typescript"
  ],
  "diagnostic.errorSign": "", //  ••
  "diagnostic.warningSign": "", //  •
  "diagnostic.hintSign": "", // •
  "diagnostic.infoSign": "", // •
  "diagnostic.checkCurrentLine": false,
  "diagnostic.level": "hint",
  "diagnostic.autoRefresh": true,
  "diagnostic.refreshOnInsertMode": false,
  "diagnostic.locationlistUpdate": true,
  "diagnostic.virtualText": true,
  // "diagnostic.virtualTextCurrentLineOnly": true,
  // "diagnostic.format": "%message [%source:%code]", // %source code severity message
  "diagnostic.signPriority": 50,
  "diagnostic.enableHighlightLineNumber": true,
  "diagnostic.messageTarget": "float",
  "diagnostic.separateRelatedInformationAsDiagnostics": true,
  // Float
  "suggest.floatConfig": {
    "border": true,
    "rounded": true,
    "borderhighlight": "FloatBorder",
    "highlight": "CocSuggestFloating"
  },
  "diagnostic.floatConfig": {
    "border": true,
    "rounded": true,
    "borderhighlight": "FloatBorder",
    "highlight": "CocFloating",
    "maxWidth": 120,
    "focusable": true
  },
  "hover.floatConfig": {
    "border": true,
    "rounded": true,
    "borderhighlight": "SpellCap",
    "highlight": "CocFloating",
    "maxWidth": 120,
    "focusable": true
  },
  "signature.floatConfig": {
    "border": true,
    "rounded": true,
    "borderhighlight": "Normal",
    "highlight": "CocFloating",
    "maxWidth": 120,
    "focusable": true
  },
  // "dialog.floatHighlight": "Normal",
  "dialog.floatBorderHighlight": "Normal",
  "dialog.rounded": true,
  "notification.border": true,
  "diagnostic-languageserver.filetypes": {
    // "zsh": "shellcheck"
    "sh": "shellcheck",
    // "yaml": ["yamllint"],
    // "lua": "selene",
    "cmake": ["cmake-lint"],
    "systemd": "systemd-analyze"
  },
  "diagnostic-languageserver.formatFiletypes": {
    "sh": "shfmt"
    //   "zsh": "shfmt"
  },
  "prettier.tabWidth": 2,
  "prettier.singleQuote": false,
  "prettier.semi": true,
  "prettier.trailingComma": "es5",
  "lightbulb.excludeFiletypes": [],
  "lightbulb.enableVirtualText": true,
  "lightbulb.virtualText": "💡",
  "codeLens.enable": true,
  "codeLens.separator": "‣",
  "codeLens.subseparator": " | ",
  "codeLens.position": "eol",
  "list.indicator": ">",
  "signature.enable": true,
  "signature.target": "float",
  "tabnine.priority": 99,
  "tabnine.shortcut": "TN",
  "snippets.priority": 95,
  "snippets.shortcut": "",
  "snippets.ultisnips.directories": ["UltiSnips", "gosnippets/UltiSnips"],
  "snippets.userSnippetsDirectory": "~/.config/nvim/UltiSnips",
  "snippets.extends": {
    "cpp": ["c"],
    "typescript": ["javascript"]
  },
  "suggest.snippetIndicator": "",
  "suggest.languageSourcePriority": 99,
  "suggest.removeDuplicateItems": true,
  "suggest.detailField": "preview",
  "suggest.detailMaxLength": 100,
  "suggest.selection": "recentlyUsedByPrefix", // recentlyUsed
  "suggest.defaultSortMethod": "none",
  "suggest.virtualText": false,
  "suggest.acceptSuggestionOnCommitCharacter": true,
  "suggest.completionItemKindLabels": {
    "default": "",
    "text": "", // 
    "method": "", // 
    "function": "", // ƒ
    "constructor": "", // 
    "field": "", // 料  
    "variable": "", //  
    "class": "", // ﴯ 
    "interface": "", // 
    "module": "", // 
    "property": "", // ﰠ
    "unit": "", //  塞
    "value": "",
    "enum": "", // 
    "keyword": "", // 
    "snippet": "", //    
    "color": "",
    "file": "", // 
    "reference": "", //  渚
    "folder": "", // 
    "enumMember": "", // 
    "constant": "", // 
    "struct": "פּ", // 
    "event": "", // 鬒
    "operator": "Ψ", // 
    "typeParameter": "" //   
  },
  // ╭──────────────────────────────────────────────────────────╮
  // │                          Clangd                          │
  // ╰──────────────────────────────────────────────────────────╯
  "clangd.enabled": true,
  "clangd.inlayHints.enable": true,
  "clangd.inlayHints.sep": "‣",
  // "clangd.arguments": [
  //   "--clang-tidy",
  //   "--completion-style=detailed",
  //   "--fallback-style=google",
  //   "--header-insertion=iwyu",
  //   "--suggest-missing-includes"
  // ],
  "clangd.trace.server": "off",
  // ╭──────────────────────────────────────────────────────────╮
  // │                           Rust                           │
  // ╰──────────────────────────────────────────────────────────╯
  "rust-analyzer.enable": true,
  "rust-analyzer.trace.server": "off",
  "rust-analyzer.server.path": "rust-analyzer",
  "rust-analyzer.updates.channel": "nightly",
  "rust-analyzer.updates.checkOnStartup": true,
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.updates.prompt": true,
  "rust-analyzer.notifications.cargoTomlNotFound": true,
  "rust-analyzer.completion.postfix.enable": true,
  "rust-analyzer.diagnostics.enable": true,
  "rust-analyzer.lens.enable": true,
  "rust-analyzer.lens.implementations.enable": true,
  "rust-analyzer.lens.references.adt.enable": true,
  "rust-analyzer.lens.references.enumVariant.enable": false,
  "rust-analyzer.lens.references.method.enable": true,
  "rust-analyzer.lens.references.trait.enable": true,
  "rust-analyzer.lens.run.enable": true,
  "rust-analyzer.lens.debug.enable": true,
  "rust-analyzer.debug.vimspector.configuration.name": "launch",
  "rust-analyzer.inlayHints.enable": true,
  "rust-analyzer.inlayHints.bindingModeHints.enable": true, // Unsure what this is
  "rust-analyzer.inlayHints.chainingHints.enable": true,
  "rust-analyzer.inlayHints.chainingHintsSeparator": "‣",
  "rust-analyzer.inlayHints.closingBraceHints.enable": true,
  "rust-analyzer.inlayHints.closingBraceHints.minLines": 25,
  "rust-analyzer.inlayHints.closureReturnTypeHints.enable": "never",
  "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "skip_trivial",
  "rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames": false,
  "rust-analyzer.inlayHints.maxLength": 30,
  "rust-analyzer.inlayHints.parameterHints.enable": true,
  "rust-analyzer.inlayHints.reborrowHints.enable": "always",
  "rust-analyzer.inlayHints.refreshOnInsertMode": false,
  "rust-analyzer.inlayHints.renderColons": true,
  "rust-analyzer.inlayHints.typeHints.enable": true,
  "rust-analyzer.inlayHints.typeHints.hideClosureInitialization": false,
  "rust-analyzer.inlayHints.typeHints.hideNamedConstructor": false,
  "rust-analyzer.inlayHints.typeHintsSeparator": "‣",
  // ╭──────────────────────────────────────────────────────────╮
  // │                          Golang                          │
  // ╰──────────────────────────────────────────────────────────╯
  "go.trace.server": "off",
  "go.goplsPath": "gopls",
  "go.goplsUseDaemon": false,
  "go.goplsOptions": {
    "usePlaceholders": true,
    "semanticTokens": true,
    "experimentalPostfixCompletions": true,
    "staticcheck": true
  },
  // ╭──────────────────────────────────────────────────────────╮
  // │                           Lua                            │
  // ╰──────────────────────────────────────────────────────────╯
  // https://github.com/xiyaowong/coc-sumneko-lua/blob/main/settings.md
  //
  // The Coc package for Lua provides inline hints, which is better
  // than a manual setup (can be found below)
  "sumneko-lua.enable": true,
  // "sumneko-lua.enableNvimLuaDev": true,
  "sumneko-lua.checkUpdate": true,
  "sumneko-lua.inlayHints.refreshOnInsertMode": false,
  "sumneko-lua.inlayHints.trimSemicolon": true,
  "sumneko-lua.inlayHints.typeHintsPrefix": "« ",
  "sumneko-lua.inlayHints.paramHintsPrefix": "» ",
  "Lua.telemetry.enable": false,
  "Lua.runtime.version": "LuaJIT",
  "Lua.runtime.path": ["?.lua", "?/init.lua"],
  // "Lua.workspace.checkThirdParty": false,
  "Lua.workspace.maxPreload": 10000,
  "Lua.workspace.ignoreDir": [".vscode", ".git"],
  "Lua.workspace.preloadFileSize": 10000,
  "Lua.workspace.library": [],
  "Lua.format.enable": false,
  "Lua.completion.enable": true,
  "Lua.completion.autoRequire": true,
  "Lua.completion.callSnippet": "Replace",
  "Lua.completion.postfix": ".",
  "Lua.hint.enable": true,
  "Lua.hint.await": true,
  "Lua.hint.paramName": "All",
  "Lua.hint.arrayIndex": "Enable",
  "Lua.hint.setType": true,
  "Lua.hint.paramType": true,
  "Lua.hover.enable": true,
  "Lua.hover.expandAlias": true,
  "Lua.hover.enumsLimit": 5,
  "Lua.hover.viewString": true,
  "Lua.hover.viewNumber": true,
  "Lua.window.statusBar": false,
  "Lua.window.progressBar": true,
  "Lua.diagnostics.enable": true,
  "Lua.diagnostics.libraryFiles": "Opened",
  "Lua.diagnostics.neededFileStatus": {
    "different-requires": "None"
  },
  "Lua.diagnostics.disable": [
    "lowercase-global",
    "redundant-parameter",
    "missing-parameter",
    "redefined-local"
  ],
  "Lua.diagnostics.globals": [
    "dev",
    "a",
    "async",
    "Path",
    "Job",
    "List",
    "ex",
    "F",
    "uv",
    "api",
    "fn",
    "cmd",
    "env",
    "o",
    "b",
    "w",
    "R",
    "P",
    "RELOAD",
    "BLACKLIST_FT",
    "packer_plugins",
    "_t",
    "hs",
    "vim",
    "nvim",
    "it",
    "describe",
    "before_each",
    "after_each"
  ],
  // ╭──────────────────────────────────────────────────────────╮
  // │                           Ruby                           │
  // ╰──────────────────────────────────────────────────────────╯
  "solargraph.diagnostics": true,
  "solargraph.autoformat": true,
  "solargraph.formatting": true,
  "solargraph.trace.server": "off",
  "solargraph.folding": true,
  "solargraph.symbols": true,
  "solargraph.references": true,
  "solargraph.definitions": true,
  // ╭──────────────────────────────────────────────────────────╮
  // │                          Python                          │
  // ╰──────────────────────────────────────────────────────────╯
  // "python.jediEnabled": true,
  "python.formatting.provider": "black",
  "python.linting.enabled": true,
  "python.linting.flake8Enabled": true,
  "python.linting.pylintEnabled": true,
  "python.linting.pylintPath": "pylint",
  "python.pythonPath": "/home/lucas/.local/share/pyenv/shims/python",
  "python.analysis.diagnosticMode": "workspace",
  // "python.analysis.diagnosticMode": "openFilesOnly",
  // ╭──────────────────────────────────────────────────────────╮
  // │                           Java                           │
  // ╰──────────────────────────────────────────────────────────╯
  "java.trace.server": "off",
  "java.enabled": true,
  "java.codeGeneration.useBlocks": true,
  "java.import.maven.enabled": true,
  "java.maven.downloadSources": false,
  // ╭──────────────────────────────────────────────────────────╮
  // │                          Dlang                           │
  // ╰──────────────────────────────────────────────────────────╯
  // "d.enabled": true,
  // "d.servedPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/serve-d",
  // "d.dcdServerPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/dcd-server",
  // "d.dcdClientPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/dcd-client",
  // ╭──────────────────────────────────────────────────────────╮
  // │                           SQL                            │
  // ╰──────────────────────────────────────────────────────────╯
  "sql.formatOptions": {
    "indent": "    "
  },
  // ╭──────────────────────────────────────────────────────────╮
  // │                    Config file types                     │
  // ╰──────────────────────────────────────────────────────────╯
  "json.trace.server": "off",
  "json.schemas": [
    {
      "fileMatch": ["*/nvim/snippets/*.json", "!*/nvim/snippets/snippets.json"],
      "url": "https://raw.githubusercontent.com/kevinhwang91/dotfiles/main/nvim/snippets/snippets.json"
    }
  ],
  "yaml.trace.server": "off",
  "yaml.validate": true,
  "yaml.format.singleQuote": true,
  "yaml.completion": true,
  // ╭──────────────────────────────────────────────────────────╮
  // │                  Typescript/Javascript                   │
  // ╰──────────────────────────────────────────────────────────╯
  "eslint.packageManager": "yarn",
  "eslint.run": "onSave",
  "eslint.trace.server": "off",
  "eslint.autoFixOnSave": false,
  "eslint.format.enable": true,
  "tsserver.trace.server": "off",
  // Typescript
  "typescript.format.enabled": true,
  "typescript.preferences.quoteStyle": "double",
  "typescript.preferences.useAliasesForRenames": false,
  "typescript.format.semicolons": "insert",
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  "typescript.format.insertSpaceBeforeFunctionParenthesis": false,
  // FIX: The codelens and inlayhints swap places when typing (create an issue if I can't)
  "typescript.referencesCodeLens.showOnAllFunctions": true,
  "typescript.implementationsCodeLens.enable": true,
  "typescript.referencesCodeLens.enable": false,
  "typescript.inlayHints.parameterNames.enabled": "literals",
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
  // Javascript
  "javascript.format.enabled": true,
  "javascript.preferences.quoteStyle": "double",
  "javascript.format.semicolons": "insert",
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
  "vimlsp.diagnostic.enable": true,
  "vimlsp.trace.server": "off",
  "xml.trace.server": "off",
  "xml.format.quotations": "doubleQuotes",
  "xml.format.enabled": true,
  "xml.symbols.enabled": true,
  "xml.codeLens.enabled": true,
  "html.trace.server": "off",
  "css.trace.server": "off",
  "zig.path": "/usr/bin/zls",
  // "sh.enable": true,
  "yank.highlight.duration": 100,
  "yank.enableCompletion": false,
  "markdownlint.config": {
    "default": true,
    "line-length": false
  },
  // ╭──────────────────────────────────────────────────────────╮
  // │                      Language Server                     │
  // ╰──────────────────────────────────────────────────────────╯
  "languageserver": {
    // "selene": {
    //   "command": "selene",
    //   "rootPatterns": [".git/", ".luacheckrc", "selene.toml", ".luarc.json"],
    //   "filetypes": ["lua"]
    // },
    // "golang": {
    //   "command": "gopls",
    //   "rootPatterns": ["go.mod", ".vim/", ".git/", ".hg/"],
    //   "filetypes": ["go"]
    // },
    // "ccls": {
    //   "command": "ccls",
    //   "filetypes": ["c", "cpp", "objc", "objcpp"],
    //   "rootPatterns": [
    //     ".ccls",
    //     "compile_commands.json",
    //     ".vim/",
    //     ".git/",
    //     ".hg/"
    //   ],
    //   "initializationOptions": {
    //     "cache": {
    //       "directory": "/tmp/ccls"
    //     }
    //   }
    // },
    // "R": {
    //   "command": "/usr/bin/R",
    //   "args": ["--slave", "-e", "languageserver::run()"],
    //   "filetypes": ["r"]
    // },
    // "zls": {
    //   "command": "/usr/bin/zls",
    //   "filetypes": ["zig"]
    // },
    // "serve-d": {
    //   "command": "/usr/bin/serve-d",
    //   "filetypes": ["d"]
    // },
    // "bash": {
    //   "command": "bash-language-server",
    //   "args": ["start"],
    //   "filetypes": ["sh"]
    // },
    "efm": {
      "initializationOptions": {
        "documentFormatting": true
      },
      "command": "efm-langserver",
      "args": [],
      "filetypes": ["sh", "teal"],
      "settings": {
        "rootMarkers": [".git/"],
        "languages": {
          "sh": [
            {
              "lintCommand": "shellcheck -f gcc -x",
              "lintSource": "shellcheck",
              "lintFormats": [
                "%f:%l:%c: %trror: %m",
                "%f:%l:%c: %tarning: %m",
                "%f:%l:%c: %tarning: %m"
              ]
            }
          ],
          "teal": [
            {
              "formatCommand": "lua-format -i",
              "formatStdin": true
            }
          ]
        }
      }
    },
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    },
    "teal": {
      "command": "teal-language-server",
      "filetypes": ["teal"],
      "rootPatterns": [".git/", "tlconfig.lua"]
    },
    // "rescript": {
    //   "enable": true,
    //   "module": "~/.local/share/nvim/site/pack/packer/start/vim-rescript/server/out/server.js",
    //   "args": [
    //     "--node-ipc"
    //   ],
    //   "filetypes": [
    //     "rescript"
    //   ],
    //   "rootPatterns": [
    //     "bsconfig.json"
    //   ]
    // },
    "crystal": {
      "command": "crystalline",
      "args": ["--stdio"],
      "filetypes": ["crystal"]
    }
    // "lua": {
    //   "command": "/usr/bin/lua-language-server",
    //   // "command": "/home/lucas/.config/coc/extensions/coc-lua-data/sumneko-lua-ls/bin/Linux/lua-language-server",
    //   "filetypes": ["lua"],
    //   "rootPatterns": [".git/"],
    //   "settings": {
    //     "Lua": {
    //       "workspace": {
    //         "maxPreload": 10000,
    //         "preloadFileSize": 10000
    //         // "checkThirdParty": false,
    //         // "library": { "/usr/share/nvim/runtime/lua": true }
    //       },
    //       "runtime": {
    //         "version": "LuaJIT"
    //       },
    //       "completion": {
    //         "callSnippet": "Replace",
    //         "postfix": "."
    //       },
    //       "diagnostics": {
    //         "enable": true,
    //         "globals": [
    //           // "dev",
    //           // "a",
    //           // "async",
    //           // "Path",
    //           // "Job",
    //           // "List",
    //           // "ex",
    //           // "F",
    //           // "uv",
    //           // "api",
    //           // "fn",
    //           // "cmd",
    //           // "env",
    //           // "o",
    //           // "b",
    //           // "w",
    //           // "R",
    //           // "P",
    //           // "RELOAD",
    //           // "BLACKLIST_FT",
    //           // "packer_plugins",
    //           // "_t",
    //           // "hs",
    //           "vim",
    //           "nvim",
    //           "it",
    //           "describe",
    //           "before_each",
    //           "after_each"
    //         ],
    //         "disable": [
    //           "lowercase-global",
    //           "redundant-parameter",
    //           "missing-parameter"
    //         ],
    //         "neededFileStatus": {
    //           "different-requires": "None"
    //         }
    //       },
    //       "IntelliSense": {
    //         "traceLocalSet": true,
    //         "traceReturn": true,
    //         "traceBeSetted": true,
    //         "traceFieldInject": true
    //       },
    //       "semantic": {
    //         "enable": true
    //       },
    //       "telemetry": {
    //         "enable": false
    //       },
    //       "window": {
    //         "progressBar": false,
    //         "statusBar": false
    //       }
    //     }
    //   },
    //   "disabledFeatures": ["documentFormatting", "documentRangeFormatting"]
    // }
  }
}
