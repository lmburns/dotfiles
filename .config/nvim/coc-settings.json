{
  "coc.preferences.useQuickfixForLocations": true,
  "coc.preferences.extensionUpdateCheck": "daily",
  "coc.preferences.messageLevel": "error",
  "coc.preferences.listOfWorkspaceEdit": "location",
  "coc.preferences.formatOnSaveFiletypes": ["go"],
  "coc.preferences.formatOnType": true,

  // Filetypes that enable semanticTokens highlighting
  // "coc.preferences.semanticTokensHighlights": true,
  "semanticTokens.filetypes": [
    "c",
    "go",
    "html",
    "java"
    // "javascript",
    // "lua",
    // "rust",
    // "typescript"
  ],

  "diagnostic.errorSign": "••",
  "diagnostic.warningSign": "•",
  "diagnostic.infoSign": "•",
  "diagnostic.hintSign": "•",
  "diagnostic.checkCurrentLine": false,
  "diagnostic.level": "hint",
  "diagnostic.refreshOnInsertMode": false,
  "diagnostic.virtualText": true,
  "diagnostic.signPriority": 20,
  "diagnostic.enableHighlightLineNumber": false,
  "diagnostic.locationlistUpdate": false,

  // FloatBorder
  "diagnostic.floatConfig": {
    "border": true,
    "borderhighlight": "#D9AE80",
    // "highlight": "Normal",
    "maxWidth": 120,
    "focusable": true
  },
  "hover.floatConfig": {
    "border": true,
    "borderhighlight": "#D9AE80",
    // "highlight": "Normal",
    "maxWidth": 120,
    "focusable": false
  },
  "signature.floatConfig": {
    "border": true,
    "borderhighlight": "#D9AE80",
    // "highlight": "Normal",
    "maxWidth": 120,
    "focusable": false
  },
  // "dialog.floatHighlight": "Normal",
  "dialog.floatBorderHighlight": "Normal",

  "diagnostic-languageserver.filetypes": {
    "sh": "shellcheck"
    // "zsh": "shellcheck"
  },
  "diagnostic-languageserver.formatFiletypes": {
    "sh": "shfmt"
    //   "zsh": "shfmt"
  },
  "codeLens.enable": true,
  "codeLens.separator": "‣",
  "codeLens.subseparator": " | ",
  "codeLens.position": "eol",
  // "codeLens.position": "eol",
  "coc.source.file.triggerCharacters": ["/"],
  "list.indicator": "➤",
  "signature.enable": true,
  "sh.enable": true,
  // "python.jediEnabled": true,
  "python.formatting.provider": "black",
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": true,
  "python.linting.pylintPath": "pylint",
  "python.linting.flake8Enabled": true,
  "python.pythonPath": "/home/lucas/.local/share/pyenv/shims/python",
  "coc.source.file.ignoreHidden": false,
  "coc.source.file.shortcut": "\uf414",
  "coc.source.around.firstMatch": false,
  "coc.source.around.shortcut": "\uf667",
  "coc.source.buffer.firstMatch": false,
  "coc.source.buffer.shortcut": "\uf719",
  "coc.source.syntax.firstMatch": false,
  "coc.source.syntax.shortcut": "\uf670",
  "tabnine.priority": 99,
  "git.addedSign.text": "┃",
  "git.changedSign.text": "┃",
  "git.changeRemovedSign.text": "┃",
  "git.removedSign.text": "◢",
  "git.topRemovedSign.text": "◥",
  "git.addedSign.hlGroup": "SignifySignAdd",
  "git.changedSign.hlGroup": "SignifySignChange",
  "git.changeRemovedSign.hlGroup": "SignifySignChange",
  "git.removedSign.hlGroup": "SignifySignDelete",
  "git.topRemovedSign.hlGroup": "SignifySignDelete",
  // "git.addGBlameToVirtualText": true,
  // "git.virtualTextPrefix": "     commit: ",
  // coc-explorer
  "explorer.icon.enableNerdfont": true,
  "explorer.icon.source": "vim-devicons",
  // "explorer.icon.enableVimDevicons": false,
  "explorer.git.enable": true,
  "explorer.quitOnOpen": true,
  "explorer.position": "left",
  "explorer.file.showHiddenFiles": true,
  "explorer.file.column.clip.copy": "",
  "explorer.file.column.clip.cut": "",
  "explorer.file.column.indent.indentLine": true,
  "explorer.openAction.select.filter": {
    "buftypes": ["terminal"],
    "filetypes": ["vista_kind", "qf", "minimap"],
    "floatingWindows": true,
    "sources": {
      "buffer": {
        "buftypes": []
      }
    }
  },
  "explorer.keyMappingMode": "none",
  "explorer.keyMappings.global": {
    "i": false,
    "gk": "expandablePrev",
    "gj": "expandableNext",
    "<space>": "toggleSelection",
    "<tab>": "actionMenu",
    "h": "collapse",
    "l": ["expandable?", "expand", "open"],
    "J": ["toggleSelection", "nodeNext"],
    "K": ["toggleSelection", "nodePrev"],
    "<2-LeftMouse>": [
      "expandable?",
      ["expanded?", "collapse", "expand"],
      "open"
    ],
    "o": ["expanded?", "collapse", "expand"],
    "<cr>": ["expandable?", "cd", "open"],
    // "o": ["expandable?", ["expanded?", "collapse", "expand"], "open"],
    // "<cr>": "open",
    // "l": "indentNext",
    // "h": "indentPrev",
    "H": ["gotoParent"],
    "s": "open:split",
    "S": "open:split:plain",
    "V": "open:vsplit",
    "t": "open:tab",
    "<bs>": "gotoParent",
    "gp": "preview:labeling",
    "yf": "copyFile",
    "yy": "copyFilename",
    "x": "cutFile",
    "p": "pasteFile",
    "dd": "delete",
    "mf": "addFile",
    "md": "addDirectory",
    "r": "rename",
    ".": "toggleHidden",
    "R": "refresh",
    "?": "help",
    "q": "quit",
    "<esc>": "esc",
    "!": "systemExecute",
    "gd": "listDrive",
    "<C-p>": "preview",
    "f": "search",
    "F": "searchRecursive",
    "gf": "gotoSource:file",
    "gb": "gotoSource:buffer",
    "[[": "sourcePrev",
    "]]": "sourceNext",
    "[d": "diagnosticPrev",
    "]d": "diagnosticNext",
    "[c": "gitPrev",
    "]c": "gitNext",
    "<<": "gitStage",
    ">>": "gitUnstage"
  },
  "snippets.ultisnips.directories": ["UltiSnips", "gosnippets/UltiSnips"],
  "snippets.userSnippetsDirectory": "~/.config/nvim/UltiSnips",
  "snippets.extends": {
    "cpp": ["c"],
    "typescript": ["javascript"]
  },
  "coc.preferences.snippetHighlight": false,
  "suggest.disableMenu": false,
  "suggest.snippetIndicator": "",
  "suggest.languageSourcePriority": 100,
  "suggest.enablePreview": true,
  "suggest.removeDuplicateItems": true,
  "suggest.detailField": "preview",
  "suggest.detailMaxLength": 100,
  "suggest.noselect": false,
  "suggest.selection": "none",

  // "suggest.completionItemKindLabels": {
  //   "keyword": "\uf1de",
  //   "variable": "\uf169",
  //   "value": "\uf89f",
  //   "operator": "\u03a8",
  //   "function": "\uf794",
  //   "reference": "\uf838",
  //   "constant": "\uf8ff",
  //   "method": "\uf794",
  //   "struct": "\ufb44",
  //   "class": "\uf0e8",
  //   "interface": "\ue60b",
  //   "text": "\ue612",
  //   "enum": "\uf435",
  //   "enumMember": "\uf02b",
  //   "module": "\ue79b",
  //   "color": "\ue22b",
  //   "property": "\ue624",
  //   "field": "\uf02b",
  //   "unit": "\uf475",
  //   "event": "\ufacd",
  //   "file": "\uf723",
  //   "folder": "\uf114",
  //   "snippet": "\uf672",
  //   "typeParameter": "\uf728",
  //   "default": "\uf29c"
  // },
  "suggest.acceptSuggestionOnCommitCharacter": true,
  "suggest.completionItemKindLabels": {
    "default": "",
    "text": "",
    "method": "",
    "function": "ƒ",
    "constructor": "",
    "field": "料",
    "variable": "",
    "class": "",
    "interface": "",
    "module": "",
    "property": "",
    "unit": "",
    "value": "",
    "enum": "",
    "keyword": "",
    "snippet": "",
    "color": "",
    "file": "",
    "reference": "渚",
    "folder": "",
    "enumMember": "",
    "constant": "",
    "struct": "פּ",
    "event": "鬒",
    "operator": "Ψ",
    "typeParameter": ""
  },
  "snippets.shortcut": "\uf672",
  "clangd.enabled": true,
  "clangd.arguments": [
    "--clang-tidy",
    "--completion-style=detailed",
    "--fallback-style=google",
    "--header-insertion=iwyu",
    "--suggest-missing-includes"
  ],
  "rust-analyzer.server.path": "rust-analyzer",
  "rust-analyzer.updates.channel": "nightly",
  "rust-analyzer.cargo.allFeatures": true,
  "rust-analyzer.checkOnSave.allFeatures": true,
  "rust-analyzer.updates.checkOnStartup": true,
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.updates.prompt": true,
  "rust-analyzer.trace.server": "verbose",
  "rust-analyzer.notifications.cargoTomlNotFound": true,
  "rust-analyzer.completion.postfix.enable": true,
  "rust-analyzer.completion.addCallArgumentSnippets": true,
  "rust-analyzer.completion.addCallParenthesis": true,
  "rust-analyzer.inlayHints.chainingHints": true,
  "rust-analyzer.inlayHints.typeHints": true,
  "rust-analyzer.inlayHints.enable": true,
  "rust-analyzer.diagnostics.enable": true,
  "rust-analyzer.diagnostics.enableExperimental": true,
  "rust-analyzer.lens.enable": true,
  "rust-analyzer.lens.implementations": true,
  // "rust-analyzer.lens.methodReferences": true,
  // "rust.show_warnings": false,
  // "rust.clippy_preference": "on",
  "languageserver": {
    "golang": {
      "command": "gopls",
      "rootPatterns": ["go.mod", ".vim/", ".git/", ".hg/"],
      "filetypes": ["go"]
    },
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cpp", "objc", "objcpp"],
      "rootPatterns": [
        ".ccls",
        "compile_commands.json",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "initializationOptions": {
        "cache": {
          "directory": "/tmp/ccls"
        }
      }
    },
    "R": {
      "command": "/usr/bin/R",
      "args": ["--slave", "-e", "languageserver::run()"],
      "filetypes": ["r"]
    },
    "zls": {
      "command": "/usr/bin/zls",
      "filetypes": ["zig"]
    },
    "serve-d": {
      "command": "/usr/bin/serve-d",
      "filetypes": ["d"]
    },
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    },
    "lua": {
      // "command": "/usr/bin/lua-language-server",
      "command": "/home/lucas/.config/coc/extensions/coc-lua-data/sumneko-lua-ls/bin/Linux/lua-language-server",
      "filetypes": ["lua"],
      "rootPatterns": [".git/"],
      "settings": {
        "Lua": {
          "workspace": {
            "maxPreload": 10000,
            "preloadFileSize": 10000,
            // "checkThirdParty": false,
            // "library": { "/usr/share/nvim/runtime/lua": true }
          },
          "runtime": {
            "version": "LuaJIT"
          },
          "completion": {
            "callSnippet": "Replace",
            "postfix": "."
          },
          "diagnostics": {
            "enable": true,
            "globals": [
              "hs",
              "vim",
              "it",
              "describe",
              "before_each",
              "after_each"
            ],
            "disable": ["lowercase-global"],
            "neededFileStatus": {
              "different-requires": "None"
            }
          },
          "IntelliSense": {
            "traceLocalSet": true,
            "traceReturn": true,
            "traceBeSetted": true,
            "traceFieldInject": true
          },
          "semantic": {
            "enable": true
          },
          "telemetry": {
            "enable": false
          },
          "window": {
            "progressBar": false,
            "statusBar": false
          }
        }
      },
      "disabledFeatures": ["documentFormatting", "documentRangeFormatting"]
    }
  },
  "yank.highlight.duration": 100,
  "solargraph.diagnostics": true,
  "solargraph.autoformat": true,
  "solargraph.formatting": true,

  "d.servedPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/serve-d",

  "outline.keepWindow": true,
  "outline.sortBy": "position",
  "outline.splitCommand": "botright 40vs",
  "outline.showLineNumber": true,

  "tree.key.activeFilter": "zf",
  "tree.key.close": "qq",
  "tree.key.toggle": "t",

  "clangd.trace.server": "off",
  "vimlsp.trace.server": "off",
  "xml.trace.server": "off",
  "html.trace.server": "off",
  "css.trace.server": "off",
  "tsserver.trace.server": "off",
  "go.trace.server": "off",
  "json.trace.server": "off",

  "yaml.trace.server": "off",
  "yaml.validate": true,
  "yaml.format.singleQuote": true,
  "yaml.completion": true,
  "d.dcdServerPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/dcd-server",
  "d.dcdClientPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/dcd-client",

  // I don't see these working
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  "javascript.format.semicolons": "remove",
  "typescript.format.semicolons": "remove"

  // "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
  // "typescript.format.insertSpaceBeforeFunctionParenthesis": true,
  // "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": true
}
