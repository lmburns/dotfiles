{
  // ╒══════════════════════════════════════════════════════════╕
  //                           General
  // ╘══════════════════════════════════════════════════════════╛
  // If false, CocFzf and Bqf-fzf open
  "coc.preferences.useQuickfixForLocations": true,
  "coc.preferences.extensionUpdateCheck": "daily",
  "coc.preferences.messageLevel": "error",
  "coc.preferences.currentFunctionSymbolAutoUpdate": true,
  // "coc.preferences.formatOnSaveFiletypes": [
  //   "go"
  // ],
  "coc.preferences.formatOnType": false,
  "coc.preferences.bracketEnterImprove": false,
  "coc.preferences.enableMessageDialog": true,
  "coc.source.file.triggerCharacters": ["/"],
  "coc.source.file.ignoreHidden": false,
  "coc.source.file.shortcut": "", // "", "FIL"
  "coc.source.around.shortcut": "ARO", // "",
  "coc.source.buffer.shortcut": "BUF", // "",
  "coc.source.tag.shortcut": "TAG", // "",
  "coc.source.word.shortcut": "WRD",
  "coc.source.syntax.shortcut": "SYN",
  "coc.source.file.priority": 13,
  "coc.source.around.priority": 11,
  "coc.source.buffer.priority": 12,
  "coc.source.tag.priority": 3,
  "coc.source.word.priority": 10,
  "coc.source.syntax.priority": 10,
  "outline.keepWindow": true,
  "outline.sortBy": "position",
  "outline.splitCommand": "botright 40vs",
  "outline.showLineNumber": true,
  "outline.followCursor": true,
  "outline.switchSortKey": "<C-s>",
  "tree.key.activeFilter": "zf",
  "tree.key.close": "qq",
  "tree.key.toggle": "t",
  "tree.key.selectNext": "<C-j>",
  "tree.key.selectPrevious": "<C-k>",
  // Filetypes that enable semanticTokens highlighting
  "[go][html][java]": {
    "semanticTokens.enable": true
  },
  "pullDiagnostic.onChange": true,
  "pullDiagnostic.onSave": false,
  "pullDiagnostic.workspace": false,
  // ╭───────────╮
  // │ InlayHint │
  // ╰───────────╯
  "inlayHint.display": true,
  "inlayHint.refreshOnInsertMode": false,
  "inlayHint.enableParameter": true,
  "inlayHint.typeSeparator": "« ", // "‣
  "inlayHint.parameterSeparator": "» ",
  "inlayHint.subSeparator": " ",
  // ╭────────────╮
  // │ Diagnostic │
  // ╰────────────╯
  "diagnostic.enable": true,
  "diagnostic.enableSign": true,
  "diagnostic.signPriority": 50,
  "diagnostic.errorSign": "", //  ••
  "diagnostic.warningSign": "", //  •
  "diagnostic.hintSign": "", // •
  "diagnostic.infoSign": "", // •
  "diagnostic.checkCurrentLine": false,
  "diagnostic.level": "hint",
  "diagnostic.autoRefresh": true,
  "diagnostic.refreshOnInsertMode": false,
  "diagnostic.locationlistUpdate": true,
  "diagnostic.virtualText": true,
  "diagnostic.virtualTextCurrentLineOnly": true,
  "diagnostic.virtualTextLineSeparator": " \\ ",
  "diagnostic.virtualTextPrefix": " | ",
  "diagnostic.virtualTextFormat": "%message",
  "diagnostic.format": "%message [%source%code]", // %source code severity message
  "diagnostic.messageTarget": "float",
  "diagnostic.enableHighlightLineNumber": true,
  "diagnostic.separateRelatedInformationAsDiagnostics": true,
  "diagnostic-languageserver.filetypes": {
    "cmake": ["cmake-lint"],
    "systemd": "systemd-analyze"
  },
  "diagnostic-languageserver.formatFiletypes": {
    // "sh": "shfmt"
    // "zsh": "shfmt"
  },
  "codeLens.enable": true,
  "codeLens.separator": "‣",
  "codeLens.subseparator": " | ",
  "codeLens.position": "eol",
  "list.indicator": ">",
  "list.floatPreview": true,
  "signature.enable": true,
  "signature.target": "float",
  "signature.hideOnTextChange": false,
  "signature.preferShownAbove": true,
  "snippets.priority": 99,
  "snippets.shortcut": "",
  "snippets.ultisnips.directories": ["UltiSnips", "gosnippets/UltiSnips"],
  "snippets.userSnippetsDirectory": "~/.config/nvim/UltiSnips",
  "snippets.extends": {
    "cpp": ["c"],
    "typescript": ["javascript"]
  },

  // "dialog.floatHighlight": "Normal",
  "dialog.floatBorderHighlight": "Normal",
  "dialog.rounded": true,
  "dialog.floatHighlight": "CocFloating",
  "notification.border": true,
  "notification.focusable": true,
  "notification.highlightGroup": "CocFloating",
  "notification.statusLineProgress": false,

  // Float
  "floatFactory.floatConfig": {
    "border": true,
    "rounded": true,
    "borderhighlight": "FloatBorder",
    "highlight": "CocSuggestFloating",
    "maxWidth": 120,
    "focusable": true
  },
  "suggest.floatConfig": {
    "border": true,
    "rounded": true,
    "borderhighlight": "Tag",
    "highlight": "CocSuggestFloating",
    "maxWidth": 120,
  },
  "diagnostic.floatConfig": {
    "border": true,
    "rounded": true,
    "borderhighlight": "ErrorMsg",
    "highlight": "CocFloating",
    "maxWidth": 120,
    "focusable": true
  },
  "hover.floatConfig": {
    "border": true,
    "rounded": true,
    "borderhighlight": "SpellCap",
    "highlight": "CocFloating",
    "maxWidth": 120,
    "focusable": true,
  },
  "signature.floatConfig": {
    "border": true,
    "rounded": true,
    "borderhighlight": "Normal",
    "highlight": "CocFloating",
    "maxWidth": 120,
    "focusable": true,
  },
  // Items within the suggest window
  "suggest.pumFloatConfig": {
    "border": true,
    "rounded": true,
    "borderhighlight": "FloatBorder",
    "highlight": "CocSuggestFloating",
  },

  "suggest.enableFloat": true,
  "suggest.snippetIndicator": "",
  "suggest.languageSourcePriority": 99,
  "suggest.removeDuplicateItems": true,
  "suggest.detailField": "preview",
  "suggest.labelMaxLength": 100,
  "suggest.defaultSortMethod": "none",
  "suggest.virtualText": false,
  "suggest.selection": "first", // recentlyUsed
  "suggest.acceptSuggestionOnCommitCharacter": true,
  "suggest.completionItemKindLabels": {
    "default": "",
    "text": "", // 
    "method": "", // 
    "function": "", // ƒ
    "constructor": "", // 
    "field": "", // 料  
    "variable": "", //  
    "class": "", // ﴯ 
    "interface": "", // 
    "module": "", // 
    "property": "", // ﰠ
    "unit": "", //  塞
    "value": "",
    "enum": "", // 
    "keyword": "", // 
    "snippet": "", //    
    "color": "",
    "file": "", // 
    "reference": "", //  渚
    "folder": "", // 
    "enumMember": "", // 
    "constant": "", // 
    "struct": "פּ", // 
    "event": "", // 鬒
    "operator": "Ψ", // 
    "typeParameter": "" //   
  },
  // ╒══════════════════════════════════════════════════════════╕
  //                           Prettier
  // ╘══════════════════════════════════════════════════════════╛
  "prettier.tabWidth": 2,
  "prettier.singleQuote": true,
  "prettier.semi": true,
  "prettier.trailingComma": "es5",

  // "lightbulb.excludeFiletypes": [],
  // "lightbulb.enableVirtualText": true,
  // "lightbulb.virtualText": "💡",
  // "lightbulb.text": "Code action",
  // "lightbulb.enableSign": false,

  // ╒══════════════════════════════════════════════════════════╕
  //                           Tabnine
  // ╘══════════════════════════════════════════════════════════╛
  "tabnine.priority": 99,
  "tabnine.shortcut": "TN",
  // ╒══════════════════════════════════════════════════════════╕
  //                            Clangd
  // ╘══════════════════════════════════════════════════════════╛
  "clangd.enabled": true,
  // "clangd.inlayHints.enable": true,
  // "clangd.inlayHints.sep": "淪", // "‣ 淪輪  "
  "clangd.arguments": [
    "--query-driver=/usr/bin/clang++",
    "--background-index",
    "--clang-tidy",
    "--completion-style=detailed",
    "--fallback-style=google",
    "--header-insertion=iwyu",
    "--suggest-missing-includes"
  ],
  "clangd.checkUpdates": true,
  "clangd.trace.server": "off",
  // ╒══════════════════════════════════════════════════════════╕
  //                             Rust
  // ╘══════════════════════════════════════════════════════════╛
  "rust-analyzer.enable": true,
  "rust-analyzer.trace.server": "off",
  "rust-analyzer.server.path": "rust-analyzer",
  "rust-analyzer.updates.channel": "nightly",
  "rust-analyzer.updates.checkOnStartup": true,
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.procMacro.attributes.enable": true,
  "rust-analyzer.cargo.buildScripts.enable": true,
  "rust-analyzer.updates.prompt": true,
  "rust-analyzer.notifications.cargoTomlNotFound": true,
  "rust-analyzer.debug.vimspector.configuration.name": "launch",
  "rust-analyzer.diagnostics.enable": true,
  "rust-analyzer.joinLines.joinAssignments": true,
  "rust-analyzer.joinLines.joinElseIf": true,
  "rust-analyzer.joinLines.removeTrailingComma": true,
  "rust-analyzer.joinLines.unwrapTrivialBlock": true,

  "rust-analyzer.completion.autoimport.enable": true,
  "rust-analyzer.completion.autoself.enable": true,
  "rust-analyzer.completion.callable.snippets": "fill_arguments",
  "rust-analyzer.completion.postfix.enable": true,

  "rust-analyzer.hover.documentation.enable": true,
  "rust-analyzer.hover.documentation.keywords.enable": true,
  "rust-analyzer.hover.links.enable": true,

  "rust-analyzer.highlightRelated.breakPoints.enable": true,
  "rust-analyzer.highlightRelated.exitPoints.enable": true,
  "rust-analyzer.highlightRelated.references.enable": true,
  "rust-analyzer.highlightRelated.yieldPoints.enable": true,

  "rust-analyzer.lens.enable": true,
  "rust-analyzer.lens.implementations.enable": true,
  "rust-analyzer.lens.references.adt.enable": true,
  "rust-analyzer.lens.references.enumVariant.enable": false,
  "rust-analyzer.lens.references.method.enable": true,
  "rust-analyzer.lens.references.trait.enable": true,
  "rust-analyzer.lens.run.enable": true,
  "rust-analyzer.lens.debug.enable": true,

  "rust-analyzer.inlayHints.bindingModeHints.enable": true, // Unsure what this is
  "rust-analyzer.inlayHints.chainingHints.enable": true,
  "rust-analyzer.inlayHints.closingBraceHints.enable": false, // Shows things slike 'fn fname'
  "rust-analyzer.inlayHints.closingBraceHints.minLines": 25,
  "rust-analyzer.inlayHints.closureReturnTypeHints.enable": "with_block",
  "rust-analyzer.inlayHints.discriminantHints.enable": "fieldless",
  "rust-analyzer.inlayHints.expressionAdjustmentHints.enable": "never",
  "rust-analyzer.inlayHints.expressionAdjustmentHints.mode": "prefix",
  "rust-analyzer.inlayHints.expressionAdjustmentHints.hideOutsideUnsafe": false,
  "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "skip_trivial",
  "rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames": true,
  "rust-analyzer.inlayHints.maxLength": 35,
  "rust-analyzer.inlayHints.parameterHints.enable": false,
  "rust-analyzer.inlayHints.reborrowHints.enable": "never",
  "rust-analyzer.inlayHints.renderColons": false,
  "rust-analyzer.inlayHints.typeHints.enable": true,
  "rust-analyzer.inlayHints.typeHints.hideClosureInitialization": false,
  "rust-analyzer.inlayHints.typeHints.hideNamedConstructor": false,

  // "rust-analyzer.inlayHints.refreshOnInsertMode": false,
  // "rust-analyzer.inlayHints.typeHintsSeparator": "淪", // ‣
  // "rust-analyzer.inlayHints.chainingHintsSeparator": "‣",
  // ╒══════════════════════════════════════════════════════════╕
  //                            Golang
  // ╘══════════════════════════════════════════════════════════╛
  "go.trace.server": "off",
  "go.goplsPath": "gopls",
  "go.goplsUseDaemon": false,
  "go.goplsOptions": {
    "codelenses": {
      "generate": true,
      "gc_details": false,
      "tidy": true
    },
    "usePlaceholders": true,
    "semanticTokens": true,
    "experimentalPostfixCompletions": true,
    "staticcheck": true,
    "analyses": {
      "unusedparams": true
    },
    "hints": {
      "assignVariableTypes": true,
      "compositeLiteralFields": true,
      "compositeLiteralTypes": true,
      "constantValues": true,
      "functionTypeParameters": true,
      "parameterNames": false,
      "rangeVariableTypes": true
    }
  },
  // ╒══════════════════════════════════════════════════════════╕
  //                             Lua
  // ╘══════════════════════════════════════════════════════════╛
  // https://github.com/xiyaowong/coc-sumneko-lua/blob/main/settings.md
  //
  // The Coc package for Lua provides inline hints, which is better
  // than a manual setup (can be found below)
  "sumneko-lua.enable": true,
  "sumneko-lua.enableNvimLuaDev": true,
  "sumneko-lua.checkUpdate": true,
  "Lua.misc.parameters": [],
  "Lua.telemetry.enable": false,
  "Lua.runtime.version": "LuaJIT",
  "Lua.runtime.path": ["?.lua", "?/init.lua"],
  "Lua.workspace.checkThirdParty": false,
  "Lua.workspace.maxPreload": 10000,
  "Lua.workspace.ignoreDir": [".vscode", ".git"],
  "Lua.workspace.preloadFileSize": 10000,
  "Lua.workspace.library": [
    "/home/lucas/.config/nvim/lua",
    // "/home/lucas/.local/share/nvim/site/pack/packer/opt",
    // "/home/lucas/.local/share/nvim/site/pack/packer/start"
  ],
  "Lua.format.enable": false,
  "Lua.completion.enable": true,
  "Lua.completion.showParams": true,
  "Lua.completion.autoRequire": true,
  "Lua.completion.callSnippet": "Replace",
  "Lua.completion.postfix": ".",
  // sumneko-lua.inlayHints already does this (though it is displayed the same color as CodeLens)
  "Lua.hint.enable": false,
  "Lua.hint.await": true,
  "Lua.hint.paramName": "All",
  "Lua.hint.arrayIndex": "Enable",
  "Lua.hint.setType": true,
  "Lua.hint.paramType": true,
  "Lua.hover.enable": true,
  "Lua.hover.expandAlias": true,
  "Lua.hover.enumsLimit": 5,
  "Lua.hover.viewString": true,
  "Lua.hover.viewNumber": true,
  "Lua.window.statusBar": false,
  "Lua.window.progressBar": false, // FIX: I like having this but somehow it cancels startup
  "Lua.type.castNumberToInteger": true,
  "Lua.semantic.annotation": true,
  "Lua.semantic.variable": true,
  "Lua.semantic.enable": true,
  "Lua.semantic.keyword": false,
  "Lua.diagnostics.enable": true,
  // "Lua.diagnostics.workspaceDelay": -1,
  "Lua.diagnostics.libraryFiles": "Opened",
  "Lua.diagnostics.neededFileStatus": {
    // https://github.com/sumneko/lua-language-server/wiki/Diagnostics
    "different-requires": "None",
    "codestyle-check": "None",
    "param-type-mismatch": "None",
    "need-check-nil": "None",
    "redefined-local": "None",
    "missing-parameter": "None",
    "redundant-parameter": "None",
    "lowercase-global": "None",

    "ambiguity-1": "Opened",
    "circle-doc-class": "Opened",
    "close-non-object": "Opened",
    "count-down-loop": "Opened",
    "doc-field-no-class": "Opened",
    "duplicate-doc-alias": "Opened",
    "duplicate-doc-field": "Opened",
    "duplicate-doc-param": "Opened",
    "duplicate-index": "Opened",
    "duplicate-set-field": "Opened",
    "global-in-nil-env": "Opened",
    "newfield-call": "Opened",
    "newline-call": "Opened",
    "unbalanced-assignments": "Opened",
    "undefined-doc-class": "Opened",
    "undefined-doc-name": "Opened",
    "undefined-doc-param": "Opened",
    "undefined-env-child": "Opened",
    "undefined-field": "Opened",
    "undefined-global": "Opened",
    "unknown-diag-code": "Opened",
    "unknown-cast-variable": "Opened"
  },
  "Lua.diagnostics.disable": [
    "lowercase-global",
    "redundant-parameter",
    "missing-parameter",
    "redefined-local",
    // New
    "codestyle-check",
    "need-check-nil",
    "param-type-mismatch" // Until the builtin functions are updated totally, this should be off
  ],
  "Lua.diagnostics.globals": [
    "dev",
    // "a",
    // "async",
    "Path",
    "Job",
    "List",
    // "ex",
    // "F",
    // "uv",
    // "api",
    // "fn",
    // "cmd",
    // "env",
    // "o",
    // "b",
    // "w",
    "p",
    "R",
    "P",
    "RELOAD",
    "BLACKLIST_FT",
    "packer_plugins",
    "_t",
    "hs",
    "vim",
    "nvim",
    "it",
    "describe",
    "before_each",
    "after_each",
    "await",
    "async",
    "Promise"
  ],
  // ╒══════════════════════════════════════════════════════════╕
  //                             Ruby
  // ╘══════════════════════════════════════════════════════════╛
  "solargraph.diagnostics": true,
  "solargraph.autoformat": true,
  "solargraph.formatting": true,
  "solargraph.trace.server": "off",
  "solargraph.folding": true,
  "solargraph.symbols": true,
  "solargraph.references": true,
  "solargraph.definitions": true,
  // ╒══════════════════════════════════════════════════════════╕
  //                            Python
  // ╘══════════════════════════════════════════════════════════╛
  // "python.jediEnabled": true,
  "python.formatting.provider": "black",
  "python.linting.enabled": true,
  "python.linting.flake8Enabled": true,
  "python.linting.pylintEnabled": true,
  "python.linting.pylintPath": "pylint",
  "python.pythonPath": "/home/lucas/.local/share/pyenv/shims/python",
  "python.analysis.diagnosticMode": "workspace",
  // "python.analysis.diagnosticMode": "openFilesOnly",
  // ╒══════════════════════════════════════════════════════════╕
  //                             Java
  // ╘══════════════════════════════════════════════════════════╛
  "java.trace.server": "off",
  "java.enabled": true,
  "java.codeGeneration.useBlocks": true,
  "java.import.maven.enabled": true,
  "java.maven.downloadSources": false,
  // ╒══════════════════════════════════════════════════════════╕
  //                            Dlang
  // ╘══════════════════════════════════════════════════════════╛
  // "d.enabled": true,
  // "d.servedPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/serve-d",
  // "d.dcdServerPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/dcd-server",
  // "d.dcdClientPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/dcd-client",
  // ╒══════════════════════════════════════════════════════════╕
  //                             SQL
  // ╘══════════════════════════════════════════════════════════╛
  "sql.formatOptions": {
    "indent": "    "
  },
  // ╒══════════════════════════════════════════════════════════╕
  //                             JSON
  // ╘══════════════════════════════════════════════════════════╛
  "json.trace.server": "off",
  "json.schemaDownload.enable": true,
  "json.format.enable": true,
  "json.format.keepLines": true,
  // "json.schemas": [
  //   {
  //     "description": "Snippet files",
  //     "fileMatch": ["*/nvim/snippets/*.json", "!*/nvim/snippets/snippets.json"],
  //     "url": "https://raw.githubusercontent.com/kevinhwang91/dotfiles/main/nvim/snippets/snippets.json"
  //   },
  //   {
  //     "description": "TypeScript compiler configuration file",
  //     "fileMatch": ["tsconfig.json", "tsconfig.*.json"],
  //     "url": "https://json.schemastore.org/tsconfig.json"
  //   },
  //   {
  //     "description": "Babel configuration",
  //     "fileMatch": [".babelrc.json", ".babelrc", "babel.config.json"],
  //     "url": "https://json.schemastore.org/babelrc.json"
  //   },
  //   {
  //     "description": "ESLint config",
  //     "fileMatch": [".eslintrc.json", ".eslintrc"],
  //     "url": "https://json.schemastore.org/eslintrc.json"
  //   },
  //   {
  //     "description": "Prettier config",
  //     "fileMatch": [".prettierrc", ".prettierrc.json", "prettier.config.json"],
  //     "url": "https://json.schemastore.org/prettierc"
  //   },
  //   {
  //     "description": "Bucklescript config",
  //     "fileMatch": ["bsconfig.json"],
  //     "url": "https://raw.githubusercontent.com/rescript-lang/rescript-compiler/8.2.0/docs/docson/build-schema.json"
  //   },
  //   {
  //     "description": "Lerna config",
  //     "fileMatch": ["lerna.json"],
  //     "url": "https://json.schemastore.org/lerna.json"
  //   },
  //   {
  //     "description": "Stylelint config",
  //     "fileMatch": [
  //       ".stylelintrc",
  //       ".stylelintrc.json",
  //       "stylelint.config.json"
  //     ],
  //     "url": "https://json.schemastore.org/stylelintrc"
  //   },
  //   {
  //     "description": "A JSON schema for the ASP.NET LaunchSettings.json files",
  //     "fileMatch": ["launchsettings.json"],
  //     "url": "https://json.schemastore.org/launchsettings.json"
  //   },
  //   {
  //     "description": "Schema for CMake Presets",
  //     "fileMatch": ["CMakePresets.json", "CMakeUserPresets.json"],
  //     "url": "https://raw.githubusercontent.com/Kitware/CMake/master/Help/manual/presets/schema.json"
  //   },
  //   {
  //     "description": "Config file for Command Task Runner",
  //     "fileMatch": ["commands.json"],
  //     "url": "https://json.schemastore.org/commands.json"
  //   },
  //   {
  //     "description": "LLVM compilation database",
  //     "fileMatch": ["compile_commands.json"],
  //     "url": "https://json.schemastore.org/compile-commands.json"
  //   },
  //   {
  //     "description": "AWS CloudFormation infrastructure resources in your cloud environment",
  //     "fileMatch": ["*.cf.json", "cloudformation.json"],
  //     "url": "https://raw.githubusercontent.com/awslabs/goformation/v5.2.9/schema/cloudformation.schema.json"
  //   },
  //   {
  //     "description": "JSON schema for properties JSON file for a GitHub Workflow template",
  //     "fileMatch": [".github/workflow-templates/**.properties.json"],
  //     "url": "https://json.schemastore.org/github-workflow-template-properties.json"
  //   },
  //   {
  //     "description": "golangci-lint configuration file",
  //     "fileMatch": [".golangci.toml", ".golangci.json"],
  //     "url": "https://json.schemastore.org/golangci-lint.json"
  //   },
  //   {
  //     "description": "Packer template JSON configuration",
  //     "fileMatch": ["packer.json"],
  //     "url": "https://json.schemastore.org/packer.json"
  //   },
  //   {
  //     "description": "NPM configuration file",
  //     "fileMatch": ["package.json"],
  //     "url": "https://json.schemastore.org/package.json"
  //   },
  //   {
  //     "description": "JSON schema for nodemon.json configuration files",
  //     "fileMatch": ["nodemon.json"],
  //     "url": "https://json.schemastore.org/nodemon.json"
  //   },
  //   {
  //     "description": "Sumneko_lua config file",
  //     "fileMatch": [".luarc.json"],
  //     "url": "https://raw.githubusercontent.com/sumneko/vscode-lua/master/setting/schema.json"
  //   }
  // ],
  // ╒══════════════════════════════════════════════════════════╕
  //                             YAML
  // ╘══════════════════════════════════════════════════════════╛
  "yaml.trace.server": "off",
  "yaml.format.enable": true,
  "yaml.format.singleQuote": true,
  "yaml.format.bracketSpacing": true,
  "yaml.format.proseWrap": "always",
  "yaml.format.printWidth": 100,
  "yaml.completion": true,
  "yaml.hover": true,
  "yaml.validate": true,
  "yaml.schemaStore.enable": true,
  "yaml.schemas": {
    // file:// shouldn't be needed but it seems like it is
    "file:///home/lucas/projects/conf_filetypes/yaml/schemas/none.json": [
      "alacritty.yml",
      "alacritty.yaml",
      ".alacritty.yml",
      ".alacritty.yaml"
    ]
    // ╭──────────╮
    // │ Examples │
    // ╰──────────╯
    // "http://json.schemastore.org/composer": ["/*"],
    // "file:///home/johnd/some-schema.json": ["some.yaml"],
    // "../relative/path/schema.json": ["/config*.yaml"],
    // "/Users/johnd/some-schema.json": ["some.yaml"],
    // "kubernetes": ["filePattern1.yaml", "filePattern2.yaml"]
  },
  // ╒══════════════════════════════════════════════════════════╕
  //                         ECMA Scripts
  // ╘══════════════════════════════════════════════════════════╛
  "eslint.packageManager": "yarn",
  "eslint.run": "onSave",
  "eslint.trace.server": "off",
  "eslint.autoFixOnSave": false,
  "eslint.format.enable": true,
  "tsserver.trace.server": "off",
  // Typescript
  "typescript.preferences.quoteStyle": "double",
  "typescript.preferences.useAliasesForRenames": false,
  "typescript.format.enable": true,
  "typescript.format.semicolons": "insert",
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  "typescript.format.insertSpaceBeforeFunctionParenthesis": false,
  // FIX: The codelens and inlayhints swap places when typing (create an issue if I can't)
  "typescript.referencesCodeLens.enabled": false,
  "typescript.referencesCodeLens.showOnAllFunctions": true,
  "typescript.inlayHints.parameterNames.enabled": "literals",
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
  // Javascript
  "javascript.preferences.quoteStyle": "double",
  "javascript.referencesCodeLens.enabled": false,
  "javascript.format.enable": true,
  "javascript.format.semicolons": "insert",
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
  // ╒══════════════════════════════════════════════════════════╕
  //                             Vim
  // ╘══════════════════════════════════════════════════════════╛
  "vimlsp.diagnostic.enable": true,
  "vimlsp.trace.server": "off",
  // ╒══════════════════════════════════════════════════════════╕
  //                             XML
  // ╘══════════════════════════════════════════════════════════╛
  "xml.trace.server": "off",
  "xml.format.quotations": "doubleQuotes",
  "xml.format.enabled": true,
  "xml.symbols.enabled": true,
  "xml.codeLens.enabled": true,

  // ╒══════════════════════════════════════════════════════════╕
  //                         Trace Server
  // ╘══════════════════════════════════════════════════════════╛
  "html.trace.server": "off",
  "css.trace.server": "off",
  "zig.path": "/usr/bin/zls",

  // "sh.enable": true,
  // "yank.highlight.duration": 100,
  // "yank.enableCompletion": false,

  // ╒══════════════════════════════════════════════════════════╕
  //                         MarkdownLint
  // ╘══════════════════════════════════════════════════════════╛
  "markdownlint.config": {
    "default": true,
    "line-length": false
  },

  // ╒══════════════════════════════════════════════════════════╕
  //                       Language Server
  // ╘══════════════════════════════════════════════════════════╛
  "languageserver": {
    "ruff-lsp": {
      "command": "ruff-lsp",
      "filetypes": ["python"]
    },
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    },
    "teal": {
      "command": "teal-language-server",
      "filetypes": ["teal"],
      "rootPatterns": [".git/", "tlconfig.lua"]
    },
    "awk": {
      "command": "awk-language-server",
      "filetypes": ["awk"]
    },
    "crystal": {
      "command": "crystalline",
      "args": ["--stdio"],
      "filetypes": ["crystal"]
    },
    // "selene": {
    //   "command": "selene",
    //   "rootPatterns": [".git/", ".luacheckrc", "selene.toml", ".luarc.json"],
    //   "filetypes": ["lua"]
    // },
    // "golang": {
    //   "command": "gopls",
    //   "rootPatterns": ["go.mod", ".vim/", ".git/", ".hg/"],
    //   "filetypes": ["go"]
    // },
    // "ccls": {
    //   "command": "ccls",
    //   "filetypes": ["c", "cpp", "objc", "objcpp"],
    //   "rootPatterns": [
    //     ".ccls",
    //     "compile_commands.json",
    //     ".vim/",
    //     ".git/",
    //     ".hg/"
    //   ],
    //   "initializationOptions": {
    //     "cache": {
    //       "directory": "/tmp/ccls"
    //     }
    //   }
    // },
    // "R": {
    //   "command": "/usr/bin/R",
    //   "args": ["--slave", "-e", "languageserver::run()"],
    //   "filetypes": ["r"]
    // },
    // "zls": {
    //   "command": "/usr/bin/zls",
    //   "filetypes": ["zig"]
    // },
    // "serve-d": {
    //   "command": "/usr/bin/serve-d",
    //   "filetypes": ["d"]
    // },
    // "bash": {
    //   "command": "bash-language-server",
    //   "args": ["start"],
    //   "filetypes": ["sh"]
    // },
    "efm": {
      "initializationOptions": {
        "documentFormatting": true,
        "hover": true,
        "documentSymbol": true,
        "codeAction": true,
        "completion": true
      },
      "command": "efm-langserver",
      "args": [],
      "filetypes": ["sh"],
      "settings": {
        "rootMarkers": [".git/"],
        "languages": {
          "sh": [
            {
              "lintCommand": "shellcheck -f gcc -x",
              "lintSource": "shellcheck",
              "lintFormats": [
                "%f:%l:%c: %trror: %m",
                "%f:%l:%c: %tarning: %m",
                "%f:%l:%c: %tarning: %m"
              ],
              "formatCommand": "shfmt -i 2",
              "formatStdin": true
            }
          ]
          // "python": [
          //   {
          //     "lintCommand": "mypy --show-column-numbers",
          //     "lintSource": "mypy",
          //     "lintFormats": [
          //       "%f:%l:%c: %trror: %m",
          //       "%f:%l:%c: %tarning: %m",
          //       "%f:%l:%c: %tote: %m"
          //     ]
          //   }
          // ]
          // "teal": [
          //   {
          //     "formatCommand": "lua-format -i",
          //     "formatStdin": true
          //   }
          // ]
        }
      }
    }
    // "rescript": {
    //   "enable": true,
    //   "module": "~/.local/share/nvim/site/pack/packer/start/vim-rescript/server/out/server.js",
    //   "args": [
    //     "--node-ipc"
    //   ],
    //   "filetypes": [
    //     "rescript"
    //   ],
    //   "rootPatterns": [
    //     "bsconfig.json"
    //   ]
    // },
  }
}
