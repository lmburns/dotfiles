-- ==> zen-mode; twilight
-- use(
--     {
--       "junegunn/goyo.vim",
--       {
--         "junegunn/limelight.vim",
--         config = conf("plugs.limelight"),
--       },
--     }
-- )
-- ==> hop
-- use(
--     {
--       "justinmk/vim-sneak",
--       after = "vim-surround",
--       keys = { { "n", "f" }, { "n", "F" } },
--       config = conf("sneak"),
--     }
-- )
-- ==> dial
-- use({ "AndrewRadev/switch.vim" })
-- use({
--   "ThePrimeagen/harpoon",
--   after = { "telescope.nvim" },
--   config = conf("plugs.harpoon"),
-- })
-- use(
--     {
--       "https://gitlab.com/yorickpeterse/nvim-pqf",
--       ft = { "qf" },
--       after = "nvim-bqf",
--       config = [[require('pqf').setup()]],
--     }
-- )
-- ╭──────────────────────────────────────────────────────────╮
-- │                           LSP                            │
-- ╰──────────────────────────────────────────────────────────╯
-- ==== Completion ====
-- use(
--     {
--       "hrsh7th/nvim-cmp",
--       requires = {
--         "hrsh7th/cmp-buffer",
--         "hrsh7th/cmp-calc",
--         "hrsh7th/cmp-cmdline",
--         "hrsh7th/cmp-nvim-lsp",
--         "hrsh7th/cmp-path",
--         "hrsh7th/cmp-vsnip",
--         "hrsh7th/cmp-nvim-lsp-signature-help",
--         "petertriho/cmp-git",
--         "hrsh7th/cmp-copilot",
--         "lukas-reineke/cmp-rg",
--         { "hrsh7th/vim-vsnip", requires = { "hrsh7th/vim-vsnip-integ" } },
--       },
--       config = function()
--         -- See lspconfig comment on why this is in a function wrapper
--         require("plugins.cmp").setup()
--       end,
--     }
-- )
-- ==== Other ===
-- "RRethy/vim-illuminate"     => Highlight word under cursor
-- "pechorin/any-jump.vim"     => Definition jumping
-- "j-hui/fidget.nvim"         => Standalone for LSP progress
-- "filipdutescu/renamer.nvim" => Like code action rename
-- "jubnzv/virtual-types.nvim" => Code lens
-- "ray-x/sad.nvim"            => Search and replace
-- use({"AckslD/nvim-anywise-reg.lua", conf = "anywise"})
-- use(
--     {
--         "nvim-neorg/neorg",
--         conf = "plugs.norg",
--         after = "nvim-treesitter",
--         requires = {"plenary.nvim", "nvim-neorg/neorg-telescope"}
--     }
-- )
-- 'jbyuki/venn.nvim'          => Draw ASCII diagrams in Neovim
-- '0styx0/abbreinder.nvim'    => Abbreviation reminders
-- 'mvllow/modes.nvim'         => Highlight cursorline based on mode
-- 'GustavoKatel/sidebar.nvim' => Sidebar with information
-- use(
--     {
--         "windwp/nvim-spectre",
--         cmd = "SpectreOpen",
--         conf = "spectre"
--     }
-- )
-- use(
--     {
--       "cutlass/gbprod.nvim",
--       conf = "cutlass",
--       -- keys = {
--       --   { "n", "c" },
--       --   { "n", "cc" },
--       --   { "n", "C" },
--       --   { "n", "d" },
--       --   { "n", "dd" },
--       --   { "n", "D" },
--       --   { "n", "x" },
--       --   { "n", "X" },
--       -- },
--     }
-- )
-- use(
--     {
--         "tanvirtin/vgit.nvim",
--         requires = {"nvim-lua/plenary.nvim"},
--         conf = "plugs.vgit",
--         cmd = "VGit"
--     }
-- )
-- use(
--     {
--         "vim-scripts/UnconditionalPaste",
--         patch = true,
--         keys = {
--             -- These have been removed from my patch
--             -- {"n", "g]]p"}, -- Messes up packer compiled; Paste linewise with more indent
--             -- {"n", "g]]P"},
--             -- {"n", "g>p"}, -- Paste lines with count times 'shiftwidth indent'
--             -- {"n", "g>P"},
--             -- {"n", "g#p"}, -- Paste linewise as commented text
--             -- {"n", "g#P"},
--             -- {"n", "gBp"}, -- Paste minimal fitting block
--             -- {"n", "gBP"},
--             -- {"n", "gqbp"}, -- Query for separator string, then paste minimal block
--             -- {"n", "gBP"},
--             -- {"n", "g,p"}, -- Paste charwise with each line delimited by ','
--             -- {"n", "g,P"},
--             -- {"n", "g,'p"}, -- Paste charwise with each line delimited by "'"
--             -- {"n", "g,'P"},
--             -- {"n", "gqp"}, -- Query for separator string, paste charwise
--             -- {"n", "gqP"}
--
--             {"n", "gcp"}, -- Paste charwise (newline and indent flattened)
--             {"n", "gcP"},
--             {"n", "glp"}, -- Paste linewise (even if not complete)
--             {"n", "glP"},
--             {"n", "gbp"}, -- Paste blockwise (multiple lines in place, push text to right)
--             {"n", "gbP"},
--             {"n", "gap"}, -- Paste linewise above (like glp but adjust indent) (MODIFIED)
--             {"n", "g]p"}, -- Paste linewise above (like glp but adjust indent)
--             {"n", "g]P"},
--             {"n", "g[p"}, -- Paste linewise below (like glp but adjust indent)
--             {"n", "g[P"},
--             {"n", "gsp"}, -- Paste with [count] spaces around lines
--             {"n", "gsP"}
--         }
--     }
-- )
-- Needs modified to change transparent background
-- use({"Mofiqul/vscode.nvim"})
-- use({"FrenzyExists/aquarium-vim"})
-- use({"yashguptaz/calvera-dark.nvim"})
-- use({"andersevenrud/nordic.nvim"})
-- use({"aktersnurra/no-clown-fiesta.nvim"})
-- use({"pwntester/nautilus.nvim"})
-- use({"doums/darcula"})
-- use({"ray-x/aurora"})
-- use({"shaunsingh/nord.nvim"})
-- use({"katawful/kat.nvim"})
-- use({"daschw/leaf.nvim"})
-- use({"Domeee/mosel.nvim"})
-- use({"lewpoly/sherbet.nvim"})
-- use({"projekt0n/github-nvim-theme"})
-- use({"metalelf0/jellybeans-nvim", requires = "rktjmp/lush.nvim"})
-- use({"kvrohit/substrata.nvim"})
-- use({"numToStr/Sakura.nvim"})
-- use({"fcpg/vim-farout"})
-- use({"tyrannicaltoucan/vim-quantum"})
-- use({"b4skyx/serenade"})
-- use({"AlessandroYorba/Alduin"})
-- use({ "olimorris/onedarkpro.nvim" })
-- use({ "kaicataldo/material.vim" })
-- use(
--     {
--       "puremourning/vimspector",
--       setup = [[vim.g.vimspector_enable_mappings = 'HUMAN']],
--       disable = true,
--     }
-- )
-- use(
--     {
--         "AckslD/nvim-neoclip.lua",
--         requires = {"nvim-telescope/telescope.nvim", "tami5/sqlite.lua"},
--         after = {"telescope.nvim", "sqlite.lua"},
--         conf = "plugs.nvim-neoclip"
--     }
-- )
-- use(
--     {
--         "christoomey/vim-conflicted",
--         cmd = {"Conflicted", "Merger", "GitNextConflict"},
--         keys = {
--             "<Plug>DiffgetLocal",
--             "<Plug>DiffgetUpstream",
--             "<Plug>DiffgetLocal",
--             "<Plug>DiffgetUpstream"
--         }
--     }
--
-- )
-- ur4ltz/surround.nvim
-- b = (), B = {}, r = [], a = <>
-- use(
--     {
--         "tpope/vim-surround",
--         setup = [[vim.g.surround_no_mappings = 1]],
--         keys = {
--             {"n", "ds"},
--             {"n", "cs"},
--             {"n", "cS"},
--             {"n", "ys"},
--             {"n", "ysW"},
--             {"n", "yS"},
--             {"n", "yss"},
--             {"n", "ygs"},
--             {"x", "S"},
--             {"x", "gS"}
--         },
--         conf = "surround"
--     }
-- )
--
-- ====================== Window Picker ======================= [[[
-- sindrets/winshift.nvim
-- t9md/vim-choosewin
-- use(
--     {
--         "https://gitlab.com/yorickpeterse/nvim-window",
--         conf = "window_picker",
--         keys = {{"n", "<M-->"}}
--     }
-- )
-- ]]] === Window Picker ===
--
-- ╭──────────────────────────────────────────────────────────╮
-- │                         Markdow                          │
-- ╰──────────────────────────────────────────────────────────╯
-- use(
--     {
--       "renerocksai/telekasten.nvim",
--       after = { "telescope.nvim" },
--       require = { "renerocksai/calendar-vim" },
--       conf = "plugs.telekasten"
--     }
-- )
-- use(
--     {
--         "lukas-reineke/headlines.nvim",
--         config = function()
--             require("headlines").setup()
--         end
--     }
-- )
-- use(
--     {
--         "vim-pandoc/vim-pandoc-syntax",
--         ft = {"pandoc", "markdown", "vimwiki"},
--         conf = "pandoc"
--     }
-- )
