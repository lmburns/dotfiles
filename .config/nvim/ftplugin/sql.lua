local ex = require("nvim").ex

ex.iabbrev {"<buffer>", "as", "AS"}
ex.iabbrev {"<buffer>", "by", "BY"}
ex.iabbrev {"<buffer>", "cascade", "CASCADE"}
ex.iabbrev {"<buffer>", "create", "CREATE"}
ex.iabbrev {"<buffer>", "delete", "DELETE"}
ex.iabbrev {"<buffer>", "drop", "DROP"}
ex.iabbrev {"<buffer>", "else", "ELSE"}
ex.iabbrev {"<buffer>", "end", "END"}
ex.iabbrev {"<buffer>", "foreign", "FOREIGN"}
ex.iabbrev {"<buffer>", "from", "FROM"}
ex.iabbrev {"<buffer>", "group", "GROUP"}
ex.iabbrev {"<buffer>", "having", "HAVING"}
ex.iabbrev {"<buffer>", "index", "INDEX"}
ex.iabbrev {"<buffer>", "insert", "INSERT"}
ex.iabbrev {"<buffer>", "into", "INTO"}
ex.iabbrev {"<buffer>", "join", "JOIN"}
ex.iabbrev {"<buffer>", "key", "KEY"}
ex.iabbrev {"<buffer>", "limit", "LIMIT"}
ex.iabbrev {"<buffer>", "offset", "OFFSET"}
ex.iabbrev {"<buffer>", "on", "ON"}
ex.iabbrev {"<buffer>", "order", "ORDER"}
ex.iabbrev {"<buffer>", "primary", "PRIMARY"}
ex.iabbrev {"<buffer>", "references", "REFERENCES"}
ex.iabbrev {"<buffer>", "select", "SELECT"}
ex.iabbrev {"<buffer>", "set", "SET"}
ex.iabbrev {"<buffer>", "table", "TABLE"}
ex.iabbrev {"<buffer>", "then", "THEN"}
ex.iabbrev {"<buffer>", "union", "UNION"}
ex.iabbrev {"<buffer>", "unique", "UNIQUE"}
ex.iabbrev {"<buffer>", "update", "UPDATE"}
ex.iabbrev {"<buffer>", "values", "VALUES"}
ex.iabbrev {"<buffer>", "when", "WHEN"}
ex.iabbrev {"<buffer>", "where", "WHERE"}
