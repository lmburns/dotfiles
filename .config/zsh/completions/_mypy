#compdef mypy

# zsh completions for 'mypy'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
  {-h,--help}'[show this help message and exit]'
  {-v,--verbose}'[more verbose messages]'
  {-V,--version}'[show programs version number and exit]'
  '--config-file[configuration file, must have a \[mypy\] section]'
  '--warn-unused-configs[warn about unused \[mypy-<pattern>\] or]'
  '--namespace-packages[support namespace packages (PEP 420, __init__.py-]'
  '--ignore-missing-imports[silently ignore imports of missing modules]'
  '--follow-imports[silent,skip,error}]'
  '--python-executable[python executable used for finding PEP 561]'
  '--no-site-packages[do not search for installed PEP 561 compliant]'
  '--no-silence-site-packages[do not silence errors in PEP 561 compliant]'
  '--python-version[.y      Type check code assuming it will be running on]'
  {-2,--py2}'[use Python 2 mode (same as --python-version 2.7)]'
  '--platform[type check special-cased code for the given OS]'
  '--always-true[additional variable to be considered True (may be]'
  '--always-false[additional variable to be considered False (may be]'
  '--disallow-any-unimported[disallow Any types resulting from unfollowed]'
  '--disallow-any-expr[disallow all expressions that have type Any]'
  '--disallow-any-decorated[disallow functions that have Any in their]'
  '--disallow-any-explicit[disallow explicit Any in type positions]'
  '--disallow-any-generics[disallow usage of generic types that do not]'
  '--allow-any-generics[)]'
  '--disallow-subclassing-any[disallow subclassing values of type Any when]'
  '--disallow-untyped-calls[disallow calling functions without type]'
  '--disallow-untyped-defs[disallow defining functions without type]'
  '--disallow-incomplete-defs[disallow defining functions with incomplete type]'
  '--check-untyped-defs[type check the interior of functions without type]'
  '--disallow-untyped-decorators[disallow decorating typed functions with untyped]'
  '--no-implicit-optional[dont assume arguments with default values of None]'
  '--no-strict-optional[disable strict Optional checks (inverse: --strict-]'
  '--warn-redundant-casts[warn about casting an expression to its inferred]'
  '--warn-unused-ignores[warn about unneeded # type: ignore comments]'
  '--no-warn-no-return[do not warn about functions that end without]'
  '--warn-return-any[warn about returning values of type Any from non-]'
  '--warn-unreachable[warn about statements or expressions inferred to]'
  '--allow-untyped-globals[suppress toplevel errors caused by missing]'
  '--allow-redefinition[allow unconditional variable redefinition with a]'
  '--no-implicit-reexport[treat imports as private unless aliased (inverse:]'
  '--implicit-reexport[)]'
  '--strict-equality[prohibit equality, identity, and container checks]'
  '--strict-concatenate[make arguments prepended via Concatenate be truly]'
  '--strict[strict mode; enables the following flags: --warn-]'
  {--disallow-subclassing-any,--disallow-untyped-}'[calls, --disallow-untyped-defs, --disallow-]'
  {--warn-redundant-casts,--warn-unused-ignores}'[]'
  {--warn-return-any,--no-implicit-reexport}'[]'
  {--strict-equality,--strict-concatenate}'[]'
  '--disable-error-code[disable a specific error code]'
  '--enable-error-code[enable a specific error code]'
  '--show-error-context[precede errors with "note:" messages explaining]'
  '--show-column-numbers[show column numbers in error messages (inverse:]'
  '--hide-column-numbers[)]'
  '--show-error-end[show end line/end column numbers in error]'
  '--show-error-codes[show error codes in error messages (inverse:]'
  '--hide-error-codes[)]'
  '--pretty[use visually nicer output in error messages: Use]'
  '--no-color-output[do not colorize error messages (inverse: --color-]'
  '--no-error-summary[do not show error stats summary (inverse: --error-]'
  '--show-absolute-path[show absolute paths to files (inverse: --hide-]'
  '--no-incremental[disable module cache (inverse: --incremental)]'
  '--cache-dir[store module cache info in the given folder in]'
  '--sqlite-cache[use a sqlite database to store the cache (inverse:]'
  '--no-sqlite-cache[)]'
  '--cache-fine-grained[include fine-grained dependency information in the]'
  '--skip-version-check[allow using cache written by older mypy version]'
  '--skip-cache-mtime-checks[skip cache internal consistency checks based on]'
  '--pdb[invoke pdb on fatal error]'
  {--show-traceback,--tb}'[show traceback on fatal error]'
  '--raise-exceptions[raise exception on fatal error]'
  '--custom-typing-module[use a custom typing module]'
  '--enable-recursive-aliases[experimental support for recursive type aliases]'
  '--custom-typeshed-dir[use the custom typeshed in DIR]'
  '--warn-incomplete-stub[warn if missing type annotation in typeshed, only]'
  '--disallow-incomplete-defs[(inverse: --no-]'
  '--shadow-file[SHADOW_FILE]'
  '--any-exprs-report[]'
  '--cobertura-xml-report[]'
  '--html-report[]'
  '--linecount-report[]'
  '--linecoverage-report[]'
  '--lineprecision-report[]'
  '--txt-report[]'
  '--xml-report[]'
  '--xslt-html-report[]'
  '--xslt-txt-report[]'
  '--junit-xml[write junit.xml to the given file]'
  '--find-occurrences[.MEMBER]'
  '--scripts-are-modules[script x becomes module x instead of __main__]'
  '--install-types[install detected missing library stub packages]'
  '--non-interactive[install stubs without asking for confirmation and]'
  '--interactive[)]'
  '--explicit-package-bases[use current directory and MYPYPATH to determine]'
  '--exclude[regular expression to match file names, directory]'
  '--exclude[/setup\.py$. May be specified more]'
  {-m,--module}'[type-check module; can repeat for more modules]'
  {-p,--package}'[type-check package recursively; can be repeated]'
  {-c,--command}'[type-check program passed in as string]'
  '*:filename:_files'
)

_arguments -s $arguments
