#compdef rhash

# zsh completions for 'rhash'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
  {-V,--version}'[print program version and exit.]'
  {-h,--help}'[print this help screen.]'
  {-C,--crc32}'[calculate CRC32 checksum.]'
  '--crc32c[calculate CRC32C checksum.]'
  '--md4[calculate MD4 message digest.]'
  {-M,--md5}'[calculate MD5 message digest.]'
  {-H,--sha1}'[calculate SHA1 message digest.]'
  {--sha224,--sha256,--sha384,--sha512}'[SHA2 message digest.]'
  {--sha3-224,--sha3-256,--sha3-384,--sha3-512}'[SHA3 message digest.]'
  {-T,--tth}'[calculate TTH message digest.]'
  '--btih[calculate BitTorrent InfoHash message digest.]'
  {-A,--aich}'[calculate AICH message digest.]'
  {-E,--ed2k}'[calculate eDonkey message digest.]'
  {-L,--ed2k-link}'[calculate and print eDonkey link.]'
  '--tiger[calculate Tiger message digest.]'
  {-G,--gost12-256}'[GOST R 34.11-2012, 256 bit message digest.]'
  '--gost12-512[GOST R 34.11-2012, 512 bit message digest.]'
  '--gost94[calculate GOST R 34.11-94 message digest.]'
  '--gost94-cryptopro[GOST R 34.11-94 CryptoPro message digest.]'
  '--ripemd160[calculate RIPEMD-160 message digest.]'
  '--has160[calculate HAS-160 message digest.]'
  {--blake2s,--blake2b}'[calculate BLAKE2S/BLAKE2B message digest.]'
  {--edonr256,--edonr512}'[calculate EDON-R 256/512 message digest.]'
  {--snefru128,--snefru256}'[SNEFRU-128/256 message digest.]'
  {-a,--all}'[calculate all supported hash functions.]'
  {-c,--check}'[check hash files specified by command line.]'
  {-u,--update}'[update the specified hash file.]'
  {-e,--embed-crc}'[rename files by inserting crc32 sum into name.]'
  {-k,--check-embedded}'[verify files by crc32 sum embedded in their names.]'
  '--list-hashes[list the names of supported hash functions, one per line.]'
  {-B,--benchmark}'[benchmark selected algorithm.]'
  {-v,--verbose}'[be verbose.]'
  {-r,--recursive}'[process directories recursively.]'
  '--file-list[process a list of files.]'
  {-m,--message}'[process the text message.]'
  '--skip-ok[dont print OK messages for successfully verified files.]'
  {-i,--ignore-case}'[ignore case of filenames when updating hash files.]'
  {-P,--percents}'[show percents, while calculating or verifying message digests.]'
  '--speed[output per-file and total processing speed.]'
  '--maxdepth[descend at most <n> levels of directories.]'
  '--openssl[specify hash functions to be calculated using OpenSSL.]'
  {-o,--output}'[file to output calculation or checking results.]'
  {-l,--log}'[file to log errors and verbose information.]'
  '--sfv[print message digests, using SFV format (default).]'
  '--bsd[print message digests, using BSD-like format.]'
  '--simple[print message digests, using simple format.]'
  '--hex[print message digests in hexadecimal format.]'
  '--base32[print message digests in Base32 format.]'
  {-b,--base64}'[print message digests in Base64 format.]'
  {-g,--magnet}'[print message digests as magnet links.]'
  '--torrent[create torrent files.]'
  '--template[load a printf-like template from the <file>]'
  {-p,--printf}'[string>  Format and print message digests.]'
  '*:filename:_files'
)

_arguments -s $arguments
