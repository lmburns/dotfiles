#compdef clamscan

# zsh completions for 'clamscan'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
  {--help,-h}'[show this help]'
  {--version,-V}'[print version number]'
  {--verbose,-v}'[be verbose]'
  {--archive-verbose,-a}'[show filenames inside scanned archives]'
  '--debug[enable libclamavs debug messages]'
  '--quiet[only output error messages]'
  '--stdout[write to stdout instead of stderr. Does not affect debug messages.]'
  '--no-summary[disable summary at end of scanning]'
  {--infected,-i}'[only print infected files]'
  {--suppress-ok-results,-o}'[skip printing OK files]'
  '--bell[sound bell on virus detection]'
  '--tempdir[create temporary files in DIRECTORY]'
  '--leave-temps[/no(*)\]            Do not remove temporary files]'
  '--gen-json[/no(*)\]               Generate JSON description of scanned file(s). JSON will be printed and also-]'
  '--database[/DIR   -d FILE/DIR    Load virus database from FILE or load all supported db files from DIR]'
  '--official-db-only[/no(*)\]       Only load official signatures]'
  {--log,-l}'[save scan report to FILE]'
  '--recursive[/no(*)\]  -r          Scan subdirectories recursively]'
  '--allmatch[/no(*)\]   -z          Continue scanning within file after finding a match]'
  '--cross-fs[(*)/no\]               Scan files and directories on other filesystems]'
  '--follow-dir-symlinks[0/1(*)/2\]     Follow directory symlinks (0 = never, 1 = direct, 2 = always)]'
  '--follow-file-symlinks[0/1(*)/2\]    Follow file symlinks (0 = never, 1 = direct, 2 = always)]'
  {--file-list,-f}'[scan files from FILE]'
  '--remove[/no(*)\]                 Remove infected files. Be careful!]'
  '--move[move infected files into DIRECTORY]'
  '--copy[copy infected files into DIRECTORY]'
  '--exclude[dont scan file names matching REGEX]'
  '--exclude-dir[dont scan directories matching REGEX]'
  '--include[only scan file names matching REGEX]'
  '--include-dir[only scan directories matching REGEX]'
  '--bytecode[(*)/no\]               Load bytecode from the database]'
  '--bytecode-unsigned[/no(*)\]      Load unsigned bytecode]'
  '--bytecode-timeout[set bytecode timeout (in milliseconds)]'
  '--statistics[(*)/bytecode/pcre\] Collect and print execution statistics]'
  '--detect-pua[/no(*)\]             Detect Possibly Unwanted Applications]'
  '--exclude-pua[skip PUA sigs of category CAT]'
  '--include-pua[load PUA sigs of category CAT]'
  '--detect-structured[/no(*)\]      Detect structured data (SSN, Credit Card)]'
  '--structured-ssn-format[SSN format (0=normal,1=stripped,2=both)]'
  '--structured-ssn-count[min SSN count to generate a detect]'
  '--structured-cc-count[min CC count to generate a detect]'
  '--structured-cc-mode[CC mode (0=credit debit and private label, 1=credit cards only]'
  '--scan-mail[(*)/no\]              Scan mail files]'
  '--phishing-sigs[(*)/no\]          Enable email signature-based phishing detection]'
  '--phishing-scan-urls[(*)/no\]     Enable URL signature-based phishing detection]'
  '--heuristic-alerts[(*)/no\]       Heuristic alerts]'
  '--heuristic-scan-precedence[/no(*)\] Stop scanning as soon as a heuristic match is found]'
  '--normalize[(*)/no\]              Normalize html, script, and text files. Use normalize=no for yara compatibility]'
  '--scan-pe[(*)/no\]                Scan PE files]'
  '--scan-elf[(*)/no\]               Scan ELF files]'
  '--scan-ole2[(*)/no\]              Scan OLE2 containers]'
  '--scan-pdf[(*)/no\]               Scan PDF files]'
  '--scan-swf[(*)/no\]               Scan SWF files]'
  '--scan-html[(*)/no\]              Scan HTML files]'
  '--scan-xmldocs[(*)/no\]           Scan xml-based document files]'
  '--scan-hwp3[(*)/no\]              Scan HWP3 files]'
  '--scan-archive[(*)/no\]           Scan archive files (supported by libclamav)]'
  '--alert-broken[/no(*)\]           Alert on broken executable files (PE & ELF)]'
  '--alert-broken-media[/no(*)\]     Alert on broken graphics files (JPEG, TIFF, PNG, GIF)]'
  '--alert-encrypted[/no(*)\]        Alert on encrypted archives and documents]'
  '--alert-encrypted-archive[/no(*)\] Alert on encrypted archives]'
  '--alert-encrypted-doc[/no(*)\]    Alert on encrypted documents]'
  '--alert-macros[/no(*)\]           Alert on OLE2 files containing VBA macros]'
  '--alert-exceeds-max[/no(*)\]      Alert on files that exceed max file size, max scan size, or max recursion limit]'
  '--alert-phishing-ssl[/no(*)\]     Alert on emails containing SSL mismatches in URLs]'
  '--alert-phishing-cloak[/no(*)\]   Alert on emails containing cloaked URLs]'
  '--alert-partition-intersection[/no(*)\] Alert on raw DMG image files containing partition intersections]'
  '--nocerts[disable authenticode certificate chain verification in PE files]'
  '--dumpcerts[dump authenticode certificate chain in PE files]'
  '--max-scantime[scan time longer than this will be skipped and assumed clean (milliseconds)]'
  '--max-filesize[files larger than this will be skipped and assumed clean]'
  '--max-scansize[the maximum amount of data to scan for each container file (**)]'
  '--max-files[the maximum number of files to scan for each container file (**)]'
  '--max-recursion[maximum archive recursion level for container file (**)]'
  '--max-dir-recursion[maximum directory recursion level]'
  '--max-embeddedpe[maximum size file to check for embedded PE]'
  '--max-htmlnormalize[maximum size of HTML file to normalize]'
  '--max-htmlnotags[maximum size of normalized HTML file to scan]'
  '--max-scriptnormalize[maximum size of script file to normalize]'
  '--max-ziptypercg[maximum size zip to type reanalyze]'
  '--max-partitions[maximum number of partitions in disk image to be scanned]'
  '--max-iconspe[maximum number of icons in PE file to be scanned]'
  '--max-rechwp3[maximum recursive calls to HWP3 parsing function]'
  '--pcre-match-limit[maximum calls to the PCRE match function.]'
  '--pcre-recmatch-limit[maximum recursive calls to the PCRE match function.]'
  '--pcre-max-filesize[maximum size file to perform PCRE subsig matching.]'
  '--disable-cache[disable caching and cache checks for hash sums of scanned files.]'
  '*:filename:_files'
)

_arguments -s $arguments
