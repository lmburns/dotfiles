#compdef clangd

local arguments

arguments=(
  "--all-scopes-completion[Code completion includes index symbols not defined in visible scope]"
  "--async-preamble[Deprecated, ignored]"
  "--background-index[Index project code in the background and persist index on disk]"
  '--background-index-priority=[Thread priority for building the background index]:index:((
    background\:"Minimum priority, runs on idle CPUs"
    low\:"Reduced priority compared to interactive work"
    normal\:"Same priority as other clangd work"
  ))'
  "--check[Parse one file in isolation]:file:_files"
  "--check-lines[Limits range of tokens in --check file on which various features are tested]:number or range:"
  "--clang-tidy[Enable clang-tidy diagnostics]"
  "--clang-tidy-checks[Deprecated, ignored]:number:"
  "--collect-main-file-refs[Deprecated, ignored]"
  "--compile-commands-dir[Specify a path to look for compile_commands.json. If path is invalid, clangd will look in the current directory and parent paths of each source file]"
  "--compile[_args_from=<value>         - The source of compile commands]"
  "--completion-parse[Whether the clang-parser is used for code-completion]"
  "--completion-style[Granularity of code completion suggestions]"
  "--crash-pragmas[Respect #pragma clang __debug crash and friends]"
  "--cross-file-rename[Deprecated, ignored]"
  "--debug-origin[Show origins of completion items]"
  "--enable-config[Read user and project configuration from YAML files]"
  "--enable-test-uri-scheme[Enable test: URI scheme. Only use in lit tests]"
  "--fallback-style[clang-format style to apply by default when no .clang-format file is found]"
  "--folding-ranges[Enable preview of FoldingRanges feature]"
  "--function-arg-placeholders[Completions also contain placeholders for method parameters]"
  "-h[Alias for --help]"
  "--header-insertion[Add #include directives when accepting code completions]"
  "--header-insertion-decorators[Prepend dot/space before completion, depending on if #include is included]"
  "--help[Display available options (--help-hidden for more)]"
  "--help-hidden[Display all available options]"
  "--help-list[Display list of available options (--help-list-hidden for more)]"
  "--help-list-hidden[Display list of all available options]"
  "--hidden-features[Enable hidden features mostly useful to clangd developers]"
  "--include-cleaner-stdlib[Apply include-cleaner analysis to standard library headers (immature!)]"
  "--include-ineligible-results[Include ineligible completion results (e.g. private members)]"
  "--index[Deprecated, ignored]"
  "--index-file[Index file to build the static index. The file must have been created by a compatible clangd-indexer]"
  "--inlay-hints[Deprecated, ignored]"
  "--input-mirror-file[Mirror all LSP input to the specified file. Useful for debugging]"
  "--input-style[Input JSON stream encoding]"
  "-j[Number of async workers used by clangd. Background index also uses this many workers]"
  "--limit-references[Limit the number of references returned by clangd. 0 means no limit (default=1000)]"
  "--limit-results[Limit the number of results returned by clangd. 0 means no limit (default=100)]"
  "--lit-test[Abbreviation for -input-style=delimited -pretty -sync -enable-test-scheme -enable-config=0 -log=verbose -crash-pragmas. Intended to simplify lit tests]"
  "--log[Verbosity of log messages written to stderr]"
  "--malloc-trim[Release memory periodically via malloc_trim(3)]"
  "--offset-encoding[Force the offsetEncoding used for character positions. This bypasses negotiation via client capabilities]"
  "--parse-forwarding-functions[Parse all emplace-like functions in included headers]"
  "--path-mappings[Translates between client paths (as seen by a remote editor) and server paths (where clangd sees files on disk). Comma separated list of <client_path>=<server_path> pairs, the first entry matching a given path is used. e.g. /home/project/incl=/opt/include,/home/project=/workarea/project]"
  "--pch-storage[Storing PCHs in memory increases memory usages, but may improve performance]"
  "--pretty[Pretty-print JSON output]"
  "--print-all-options[Print all option values after command line parsing]"
  "--print-options[Print non-default options after command line parsing]"
  "--query-driver[Comma separated list of globs for white-listing gcc-compatible drivers that are safe to execute. Drivers matching any of these globs will be used to extract system includes. e.g. /usr/bin/**/clang-*,/path/to/repo/**/g++-*]"
  "--ranking-model[Model to use to rank code-completion items]"
  "--recovery-ast[Deprecated, ignored]"
  "--recovery-ast-type[Deprecated, ignored]"
  "--resource-dir[Directory for system clang headers]"
  "--suggest-missing-includes[Deprecated, ignored]"
  "--sync[Handle client requests on main thread. Background index still uses its own thread]"
  "--tweaks[Specify a list of Tweaks to enable (only for clangd developers)]"
  "--use-dirty-headers[Use files open in the editor when parsing headers instead of reading from the disk]"
  "--version[Display the version of this program]"
  "*:filename:_files"
)

_arguments -s $arguments
