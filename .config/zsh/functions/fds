# Desc: list file descriptors

setopt extendedglob

local -a fds proc list disp
local i sep link newlink

zstyle -g sep :completion:\* list-separator

fds=( ${(@n)${:-/dev/fd/<3->(N:t)}} )
proc=( /proc/$$/(fd|path)/<->(@N[-1]:h) )

[[ -n $proc ]] || builtin print -Pr "proc is %F{1}%Bempty%b%f"

if zmodload -F zsh/stat b:zstat; then
  foreach i ($fds[@])
    if zstat +link -A link $proc/$i; then
      if [[ ${(D)link[1]} = /dev/null ]]; then
        newlink="%F{3}${(D)link[1]}%f"
      # Unsure why I can't escape brackets here
      elif [[ ${(D)link[1]} = pipe:*<->* ]]; then
        newlink="%F{2}${(D)link[1]}%f"
      else
        newlink="%F{1}${(D)link[1]}%f"
      fi

      list+=( "%F{5}${(r.$#fds[-1].)i} %F{2}$sep %B${newlink}%b" )
    else
      fds[(i)$i]=()
    fi
  end
fi 2>/dev/null

if (( list[(I)* %F{2}$sep ?*] )); then
  list=(
    "%F{5}${(r.$#fds[-1].):-0} %F{2}$sep %F{14}%Bstandard input%f%b"
    "%F{5}${(r.$#fds[-1].):-1} %F{2}$sep %F{14}%Bstandard output%f%b"
    "%F{5}${(r.$#fds[-1].):-2} %F{2}$sep %F{14}%Bstandard error%f%b"
    $list
  )
fi
fds=( 0 1 2 $fds )

print -ln -- ${(%)list[@]} | bat

# vim: ft=zsh:et:sw=0:ts=2:sts=2:fdm=marker:fmr={{{,}}}:
