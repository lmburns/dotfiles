# @desc: recompile zsh functions

emulate -L zsh -o extendedglob

autoload -Uz zrecompile
zmodload -Fa zsh/zutil b:zparseopts
local -A Opts

builtin zparseopts ${${(M)ZSH_VERSION:#(5.[8-9]|6.[0-9])}:+-F} \
    -D -E -A Opts -- \
    -all a \
    -check c \
    -help h || {
      zerr 'invalid option given; see {cmd}--help{%}';
      return $sysexits[(i)EINVAL];
    }

function zwc() {
  local dir zwc
  local -i i
  local -a files
  if (( $+Opts[--all] + $+Opts[-a] )) {
    for ((i=1; i <= $#fpath; ++i)); do
      dir=$fpath[i]
      zwc=${dir:t}.zwc
      if [[ $dir == (.|..) || $dir == (.|..)/* ]]; then
        continue
      fi
      files=($dir/*(N-.))
      if [[ -w $dir:h && -n $files ]]; then
        files=(${${(M)files%/*/*}#/})
        if ( builtin cd -q $dir:h &&
            zrecompile -p -U -z $zwc $files ); then
          # zinfo -v "changed: $fpath[i]"
          fpath[i]=$fpath[i].zwc
        fi
      fi
    done
  } else {
    # Compiling whole directories
    # NOTE: decide on memory mapping
    zrecompile -p -- \
      -Uz $ZDOTDIR/.zshenv.zwc       $ZDOTDIR/.zshenv -- \
      -Uz $ZDOTDIR/.zshrc.zwc        $ZDOTDIR/.zshrc -- \
      -Uz $ZDOTDIR/completions.zwc   $ZDOTDIR/completions/*~*.zwc(|.old) -- \
      -Uz $ZDOTDIR/functions/hooks   $ZDOTDIR/functions/hooks/*~*.zwc(|.old)      -- \
      -Uz $ZDOTDIR/functions/wrap    $ZDOTDIR/functions/wrap/*~*.zwc(|.old)       -- \
      -Uz $ZDOTDIR/functions/widgets $ZDOTDIR/functions/widgets/*~*.zwc(|.old)

      # -Uz $ZDOTDIR/functions/lf_fn  $ZDOTDIR/functions/lf_fn/*~*.zwc(|.old)
      # -Uz $ZDOTDIR/functions/lib     $ZDOTDIR/functions/lib/*~*.zwc(|.old)      -- \
      # -Uz $ZDOTDIR/functions/utils   $ZDOTDIR/functions/utils/*~*.zwc(|.old)    -- \
      # -Uz $ZDOTDIR/functions/zonly   $ZDOTDIR/functions/zonly/*~*.zwc(|.old)    -- \
      # -Uz $ZDOTDIR/functions.zwc     $ZDOTDIR/functions/*~*(hooks|lib|utils|wrap|widgets|zonly|lf_fns|*.zwc(|.old))(N)
      # -MUz $ZINIT[ZCOMPDUMP_PATH].zwc $ZINIT[ZCOMPDUMP_PATH] -- \

    # local -a zwcdirs=(${Zdirs[FUNC]}/${(P)^Zdirs[FUNC_D_zwc]}.zwc)
    # for dir ($zwcdirs[@]) {
    #   dir=${dir%.zwc}
    #   zwc=${dir:t}
    #   if [[ ! -d $dir ]]; then
    #     zinfo -v "$dir is not a directory to compile"
    #     continue
    #   fi
    #   if [[ $dir == (.|..) || $dir == (.|..)/* ]]; then
    #     continue
    #   fi
    #   files=($dir/*~*.zwc(|.old)(#qN-.))
    #   print -rl -- "== $files"
    #   if [[ -w $dir:h && -n $files ]]; then
    #     files=(${${(M)files%/*/*}#/})
    #     if ( builtin cd -q $dir:h &&
    #         zrecompile -p -U -z $zwc $files ); then
    #       zinfo -v "changed: $dir"
    #     fi
    #   fi
    # }
    # fpath=${fpath[@]:|zwcdirs}
    # fpath[1,$#zwcdirs]=($zwcdirs)
    # autoload -Uwz ${(@z)fpath[1,$#zwcdirs]}

    # local file
    # for file (${(P)Zdirs[ZWC]}) {
    #   if [[ -s "$file" && (! -s "${file}.zwc" || "$file" -nt "${file}.zwc") ]] {
    #     [[ -e "$file.zwc" ]] && command mv -f "$file.zwc" "$file.zwc.old"
    #
    #     if (( $+functions[zsh-defer] )) {
    #         zsh-defer -a -c "{ zcompile -M $file && command rm -f $file.zwc.old }"
    #     } else {
    #         { zcompile -M "$file" && command rm -f "$file.zwc.old" }&!
    #     }
    #   }
    # }
  }
}

function zcompare() {
  # if [[ -n "${1}"(#qN.mh+4) && (! -s "${1}.zwc" || "$1" -nt "${1}.zwc" ) ]]; then
  if [[ -s ${1} && ( ! -s ${1}.zwc || ${1} -nt "${1}.zwc") ]]; then
    ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay
    zcompile ${1}
  fi
}

zwc "$@"

# vim: ft=zsh:et:sw=0:ts=2:sts=2
