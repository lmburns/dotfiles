# @desc: open script/function/alias
# Can edit aliases and functions with ZLE

emulate -LR zsh

setopt warncreateglobal noshortloops extendedglob

zmodload -Fa zsh/parameter p:commands p:functions p:aliases
zmodload -Fa zsh/util b:zparseopts

local -A opts
local Z fullp
integer text

zparseopts -D -A opts -- ${(s::):-faez} \
  || { zerr 'invalid option given; see {cmd}--help{%}'; return 7; }

# -f  = edit func with zed
# -fe = edit func in editor
# -fz = edit func in zed2
# -a  = edit alias

if (( $+opts[-f] )) {
  (( $+functions[$1] )) && {
    if (( $+opts[-e] )) {
      local -a paths
      paths=( ${(@f):-$(print -rl -- $^fpath/$1(N))} )
      [[ -n "$paths" && -f $paths[1] ]] && $EDITOR "$paths[1]"
    } elif (( $+opts[-z] )) {
      autoload zed2
      print -rs "zed2 -f -- \"$1\""
      zed2 -f -- "$1"
    } else {
      autoload zed
      print -rs "zed -f -- \"$1\""
      zed -f -- "$1"
    }
  } || zerr "$1 (%F{14}${${:-"$(whence -vpc $1)"}#*: }) is not a function"
} elif (( $+opts[-a] )) {
  (( $+aliases[$1] )) && {
      print -rs "vared aliases\\[$1\\]"
      vared aliases\[$1\]
  } || zerr "$1 (%F{14}${${:-"$(whence -vc $1)"}#*: }%f) is not an alias"
} else {
# elif (( $+opts[-s] )) {
  fullp=$(whence -cp "$1")
  (( ${#${(M)${:-"$(mimetype -ab $fullp)"}:#*text*}} )) && {
    $EDITOR "$fullp"
  } || zerr "$1 (%F{14}${${:-"$(whence -c $1)"}#*: }%f) is not a text file"
# }
}

# vim: ft=zsh:et:sw=2:ts=2:sts=-1:fdm=marker:fmr=[[[,]]]:
