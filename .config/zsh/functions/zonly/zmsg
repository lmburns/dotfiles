# Desc: pretty a log message

zmsg() {
    0="${${(M)${0::=${(%):-%x}}:#/*}:-$PWD/$0}"

    builtin emulate -L zsh -o extendedglob

    # -h - origin tag
    # -p - overwrite quiet mode
    # -q - quiet mode
    # -e - print to stderr
    # -n - no new line
    # -f - file
    # -F - func
    # -E - error
    # -W - warn
    # -H - hint
    # -I - info
    # -D - debug
    # -T - trace
    # -S - success
    local -A Opts
    builtin zparseopts -D -E -A Opts -- \
        h p q e n f F \
        E W I D T S H \
        -help || return 7

    # TODO: implement help

    local cpat="\~config/"; local zpat="\~zsh/"
    local msg level res file

    (($+Opts[-S])) && { msg='SUCCESS' level='l+' }
    (($+Opts[-T])) && { msg='TRACE' level='l0' }
    (($+Opts[-D])) && { msg='DEBUG' level='l1' }
    (($+Opts[-I])) && { msg='INFO' level='l2' }
    (($+Opts[-H])) && { msg='HINT' level='l3' }
    (($+Opts[-W])) && { msg='WARN' level='l4' }
    (($+Opts[-E])) && { msg='ERROR' level='l5' }

    (($+Opts[-f])) && file=${${${(D)${${${funcsourcetrace[-1]#_}%:*}:A}}//${~zpat}}//${~cpat}}
    (($+Opts[-F])) && func=${funcstack[-1]:#zmsg}

    # (($+func)) && func="${func}:${functrace[-1]}"

    [[ -n $msg ]] && res+="%B{pn}[%b{${level:-app}}$msg%B{pn}]%b{%}"
    [[ -n $func ]] && res+="%B{pn}[%b{pre}${func}${file:+:%21F${file}}%B{pn}]%b:{%}"
    [[ -n $msg && -z $func ]] && res+=":"

    # Output origin tag?
    (($+Opts[-h])) && builtin set -- $res "$@"
    # Output to stderr?
    (($+Opts[-e])) && local e=-e
    # No new line?
    (($+Opts[-n])) && local n=-n

    # Quiet mode? â†’ no printing if so
    [[ ($+Opts[-q] == 1 || $1 == 1) && $+Opts[-p] != 1 ]] && return

    xzmsg $e $n "$@"
}

zmsg "$@"

# vim:ft=zsh:sw=4:sts=4:et
