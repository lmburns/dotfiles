# Desc: pretty a log message

# ${${${(D)${${${a[1]#_}%:*}:A}}//\~config\/zsh/ZSH}//\~config/CONFIG}

function print::error()   {
  local cpat="\~config/"; local zpat="${cpat}zsh/"
  # local func=${${functrace[1]#_}%:*}
  local func=$funcstack[-1]
  local file=${${${(D)${${${funcsourcetrace[-1]#_}%:*}:A}}//${~zpat}}//${~cpat}}
  print -Pru2 -- "%F{12}%B[ERROR]%f%b:%F{20}${func}%f:%F{21}${file}%f: $*"
}
function print::warning() {
  local cpat="\~config/"; local zpat="${cpat}zsh/"
  local func=$funcstack[-1]
  local file=${${${(D)${${${funcsourcetrace[-1]#_}%:*}:A}}//${~zpat}}//${~cpat}}
  print -Pru2 -- "%F{13}%B[WARNING]%b%f:%F{20}${func}%f:%F{21}${file}%f: $*"
}
function print::info()    {
  local cpat="\~config/"; local zpat="${cpat}zsh/"
  local func=$funcstack[-1]
  local file=${${${(D)${${${funcsourcetrace[-1]#_}%:*}:A}}//${~zpat}}//${~cpat}}
  print -Pru2 -- "%F{52}%B[INFO]%b%f:%F{20}${func}%f:%F{21}${file}%f: $*"
}
function print::debug()   {
  local cpat="\~config/"; local zpat="${cpat}zsh/"
  if (( DEBUG )) {
    local func=$funcstack[-1]
    local file=${${${(D)${${${funcsourcetrace[-1]#_}%:*}:A}}//${~zpat}}//${~cpat}}
    print -Pru2 -- "%F{18}%B[DEBUG]%b%f:%F{20}${func}%f:%F{21}${file}%f: $*"
  }
}
function print::trace()   {
  local cpat="\~config/"; local zpat="${cpat}zsh/"
  local func=$funcstack[-1]
  local file=${${${(D)${${${funcsourcetrace[-1]#_}%:*}:A}}//${~zpat}}//${~cpat}}
  print -Pru2 -- "%F{47}%B[TRACE]%b%f:%F{20}${func}%f:%F{21}${file}%f: $*"
}
function print::notice()  {
  local cpat="\~config/"; local zpat="${cpat}zsh/"
  local func=$funcstack[-1]
  local file=${${${(D)${${${funcsourcetrace[-1]#_}%:*}:A}}//${~zpat}}//${~cpat}}
  print -Pru2 -- "%F{22}%B[NOTICE]%b%f:%F{20}${func}%f:%F{21}${file}%f: $*"
}
function print::success() {
  local cpat="\~config/"; local zpat="${cpat}zsh/"
  local func=$funcstack[-1]
  local file=${${${(D)${${${funcsourcetrace[-1]#_}%:*}:A}}//${~zpat}}//${~cpat}}
  print -Pru2 -- "%F{53}%B[SUCCESS]%f%b:%F{20}${func}%f:%F{21}${file}%f: $*"
}

function zsh::log() {
  setopt localoptions nopromptsubst
  zmodload -Fa zsh/parameter p:functrace p:funcsourcetrace
  zmodload -Fa zsh/zutil b:zparseopts
  local -A opts; zparseopts -E -D -A opts n:

  local logtype=$1
  local logname=${opts[-n]:-}

  case $logtype in
    (success | 0)     print -Pn "%U%F{53}${logname:+${logname}:}%f%u"; print::success "$2" ;;
    (notice     )     print -Pn "%U%F{54}${logname:+${logname}:}%f%u"; print::notice  "$2" ;;
    (trace   | 1)     print -Pn "%U%F{54}${logname:+${logname}:}%f%u"; print::trace   "$2" ;;
    (debug   | 2)     print -Pn "%U%F{54}${logname:+${logname}:}%f%u"; print::debug   "$2" ;;
    (info    | 3)     print -Pn "%U%F{54}${logname:+${logname}:}%f%u"; print::info    "$2" ;;
    (warn    | 4)     print -Pn "%S%F{54}${logname:+${logname}:}%f%s"; print::warning "$2" ;;
    (error   | 5)     print -Pn "%S%F{12}${logname:+${logname}:}%f%s"; print::error   "$2" ;;
    (dump    | <6->)  print -Pn "%S%F{12}${logname:+${logname}:}%f%s"; log::dump      "$2" ;;
  esac >&2
}

# Dump all kinds of info
function log::dump() {
  local cpat="\~config/"; local zpat="${cpat}zsh/"
  local func=$funcstack[-1]
  local file=${${${(D)${${${funcsourcetrace[-1]#_}%:*}:A}}//${~zpat}}//${~cpat}}
  print -Pru2 -- "%F{14}%B[DUMP]%b%f:%F{20}${func}%f:%F{21}${file}%f: $*"

  # $LINENO

  zmodload -Fa zsh/parameter p:functrace p:funcfiletrace p:funcstack p:funcsourcetrace
  local t tl eq
  t='Func File Trace' tl=$#t eq=${(l:(COLUMNS-tl-2) / 2::=:):-}
  print -Pl -- "%F{13}%B${eq} ${t} ${eq}\n%f%b$funcfiletrace[@]"
  t='Func Trace' tl=$#t eq=${(l:(COLUMNS-tl-2) / 2::=:):-}
  print -Pl -- "\n%F{13}%B${eq} ${t} ${eq}\n%f%b$functrace[@]"
  t='Func Stack' tl=$#t eq=${(l:(COLUMNS-tl-2) / 2::=:):-}
  print -Pl -- "\n%F{13}%B${eq} ${t} ${eq}\n%f%b$funcstack[@]"
  t='Func Source Trace' tl=$#t eq=${(l:(COLUMNS-tl-2) / 2::=:):-}
  print -Pl -- "\n%F{13}%B${eq} ${t} ${eq}\n%f%b$funcsourcetrace[@]"
}

zmsg() {
    0="${${(M)${0::=${(%):-%x}}:#/*}:-$PWD/$0}"

    builtin emulate -L zsh -o extendedglob

    # -h - origin tag
    # -p - overwrite quiet mode
    # -q - quiet mode
    # -e - print to stderr
    # -n - no new line
    # -f - file
    # -F - func
    # -E - error
    # -W - warn
    # -H - hint
    # -I - info
    # -D - debug
    # -T - trace
    # -S - success
    local -A Opts
    builtin zparseopts -D -E -A Opts -- \
        h p q e n f F \
        E W I D T S H || return 7

    local cpat="\~config/"; local zpat="${cpat}zsh/"
    local msg level res file

    (($+Opts[-S])) && { msg='SUCCESS' level='l+' }
    (($+Opts[-T])) && { msg='TRACE' level='l0' }
    (($+Opts[-D])) && { msg='DEBUG' level='l1' }
    (($+Opts[-I])) && { msg='INFO' level='l2' }
    (($+Opts[-H])) && { msg='HINT' level='l3' }
    (($+Opts[-W])) && { msg='WARN' level='l4' }
    (($+Opts[-E])) && { msg='ERROR' level='l5' }

    (($+Opts[-f])) && file=${${${(D)${${${funcsourcetrace[-1]#_}%:*}:A}}//${~zpat}}//${~cpat}}
    (($+Opts[-F])) && func=${funcstack[-1]:#zmsg}

    [[ -n $msg ]] && res+="%B{pn}[%b{${level:-app}}$msg%B{pn}]%b{%}"
    [[ -n $func ]] && res+="%B{pn}[%b{pre}${func}${file:+:%21F${file}}%B{pn}]%b:{%}"
    [[ -n $msg && -z $func ]] && res+=":"

    # Output origin tag?
    (($+Opts[-h])) && builtin set -- $res "$@"
    # Output to stderr?
    (($+Opts[-e])) && local e=-e
    # No new line?
    (($+Opts[-n])) && local n=-n

    # Quiet mode? â†’ no printing if so
    [[ ($+Opts[-q] == 1 || $1 == 1) && $+Opts[-p] != 1 ]] && return

    xzmsg $e $n "$@"
}

zmsg "$@"

# vim:ft=zsh:sw=4:sts=4:et
