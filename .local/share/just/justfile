set shell := ["zsh", "-uc"]

# default action with no parameters
default:
  @just --choose

alias e := edit
# edit this justfile
edit:
  @$EDITOR {{justfile()}}

alias h := help
# view example justfile
help:
  @$EDITOR $XDG_DATA_HOME/just/overall.just

# get the urls of dotfile repos
dot-urls:
  #!/usr/bin/env zsh
  [[ $PWD == $HOME/opt/dotfiles ]] || print -Pr -- "%F{1}Error%f: Wrong directory"
  {
    () {
      sed -i "s,\x1B\[[0-9;]*[a-zA-Z],,g" $1;
      cat $1 >| out
    } =(mgit config --get remote.origin.url)
  } && print -Pr "%F{13}Success%f"

# append vim filetype modeline
append-vim-type EXT FT:
  fd -tf -e {{EXT}} -x sed -i -e '$a/* vim: ft={{FT}}:et:sw=2:ts=2:sts=-1:fdm=marker:fmr='{{'{{{,}}}'}}':' {}

# rage encrypt ssh
rage-e ENC OUT:
  rage -R ~/.ssh/burnsac.pub -o {{invocation_directory()}}/{{OUT}} {{invocation_directory()}}/{{ENC}}

# rage decrypt ssh
rage-d DEC OUT:
  rage -d -i ~/.ssh/burnsac -o {{invocation_directory()}}/{{OUT}} {{invocation_directory()}}/{{DEC}}

# create a tomb
tomb SIZE="100" NAME="secret":
  #!/usr/bin/env zsh
  name="{{NAME}}"

  tomb dig -s "{{SIZE}}" "${name}.tomb" -f
  print -P "%F{1}Created%f: %F{2}${name}.tomb%f"

  tomb forge "${name}.tomb.key" -gr E93ACCAAAEB024788C106EDEC011CBEF6628B679 -f
  print -P "%F{1}Created%f: %F{2}${name}.tomb.key%f"

  tomb lock "${name}.tomb" -k "${name}.tomb.key" -f
  print -P "%F{1}Locked%f: %F{2}${name}.tomb%f"

  tomb open "${name}.tomb" -k "${name}.tomb.key" -f
  print -P "%F{1}Opened%f: %F{2}${name}.tomb%f"

# get cpu / memory
memory:
  @ps -A -o %cpu,%mem \
    | awk '{ cpu += $1; mem += $2} END {print "CPU: "  cpu,"MEM: "  mem}'

# refresh wifi
refresh-wifi:
  @ip link set wlp4s0 down && sleep 5 && ip link set wlp4s0 up

# systemctl enabled
systemctl-enabled:
  @systemctl list-unit-files --state=enabled

# systemctl all
systemctl-all:
  @systemctl list-unit-files --type=service

# disable sudo for dmesg
dmesg-sudo:
  @sudo sysctl -w kernel.dmesg_restrict=0

# expac upgrade/download
expac-updown:
  @expac -S -H M '%k\t%n' $(pacman -Qqu) | sort -sh

# expac recently installed
expac-recent SIZE="20":
  @expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n {{SIZE}} | tac | bat -l log

# expac search regex
expac-regex ARGS:
  @expac -Ss '%-30n %-8v %d' {{ARGS}}

# expac modified
expac-modified:
  @expac -S -H M '%k\t%n' $(pacman -Qqu) | sort -sh

# pacman search installed
pacman-installed:
  @pacman -Qq \
    | fzf \
      --preview 'paru --color=always -Qil {}' \
      --layout=reverse --bind 'enter:execute(pacman -Qil {} | bat)' \
      --preview-window=':nohidden'

# pacman search all
pacman-all:
  @pacman -Slq \
    | fzf --preview 'paru --color=always -Si {}' \
      --layout=reverse \
      --preview-window=':nohidden'

# get weather
weather:
  @wttr '65202?format=3'

# get weather table
weather_full:
  @curl v2d.wttr.in/65202

# git-batch opt
batch-all:
  @gitbatch -r 2 -d $HOME/opt

# git-batch zinit
batch-zinit:
  @gitbatch -r 2 -d $ZINIT_HOME/plugins

# git-batch ghq
batch-ghq:
  @gitbatch -r 3 -d $HOME/ghq

# git-batch dotfiles
batch-dot:
  @gitbatch -r 3 -d $HOME/opt/dotfiles

# rclone mount
rclone-mount:
  $ZPFX/bin/rclone mount \
    --transfers 8 \
    --volname google-drive \
    --dir-cache-time 96h \
    --allow-other \
    --buffer-size 32M \
    --vfs-cache-mode writes \
    --vfs-cache-max-size 8G \
    --daemon \
    -vv \
    --log-file $LOCAL_OPT/local/rclone/logs/rclone.log \
    --umask 002 \
    google-drive:/ /home/lucas/.mount/google-drive

# rclone to drive
rclg SRC DEST:
  $ZPFX/bin/rclone copy \
    --update \
    --verbose \
    --delete-after \
    --exclude ".DS_Store" \
    --exclude .git/ \
    --copy-links \
    --transfers 4 \
    --checkers 8 \
    --contimeout 60s \
    --timeout 300s \
    --retries 3 \
    --low-level-retries 10 \
    --stats 1s \
    --progress \
    {{SRC}} "google-drive:{{DEST}}/"

# mount ssh filesystem
ssh-mount DEST:
  sshfs -o allow_other,default_permissions,IdentityFile=~/.ssh/burnsac root@lmburns.com:/ {{DEST}}

# remove big dir with progress
rm-bigdir DIR:
  sudo -A rm -rv {{DIR}} | pv -l -s $(sudo du -a {{DIR}} | wc -l) > /dev/null

# pu add -- sudo -A rsync -azurh --delete-after --info=name0 --progress=progress2 ~ /Volumes/SSD/macos-full

# rsync/ssh from macbook
rsync-mac SRC DEST=invocation_directory():
  rsync -uvrP --exclude 'target/' macbook:{{SRC}} {{DEST}}

# rsync general
rsync SRC DEST:
  rsync -rzau --info=FLIST,COPY,DEL,REMOVE,SKIP,SYMSAFE,MISC,NAME,PROGRESS,STATS --delete-after \
     --exclude ".DS_Store" --exclude ".ipynb_checkpoints" \
    {{SRC}} {{DEST}}

# rsync home dir
rsync-home:
  sudo rsync -rzau --delete-after --info=FLIST,COPY,DEL,REMOVE,SKIP,SYMSAFE,MISC,NAME,PROGRESS,STATS \
  ~ /run/media/lucas/b7c5122b-4f9c-4068-840c-c9b0ab61c318/Manual

# rsync projects directory
rsync-proj:
  pueue add 'xfsudo rsync -azurh --info=name0 ~/projects /run/media/lucas/exfat/manual-bkp'

# rsync -Prugoptczl --info=progress2 --info=name0 --delete-after

# rsync server
rsync-server:
  sudo rsync -rzau --info=FLIST,COPY,DEL,REMOVE,SKIP,SYMSAFE,MISC,NAME,PROGRESS,STATS --delete-after \
    --exclude "/dev/*" --exclude "/proc/*" --exclude "/sys/*" --exclude "/tmp/*" \
    --exclude "/run/*" --exclude "/mnt/*" --exclude "/media/*" --exclude "swapfile" \
    --exclude "lost+found" root@lmburns.com:/ /run/media/lucas/macos/server

# pull www folder server
www-pull:
  rsync -rugoptczl --info=progress2 --info=name0 --delete-after \
    root@lmburns.com:/var/www $HOME/server

# push www folder server
www-push:
  rsync -rugoptczl --info=progress2 --info=name0 --delete-after --exclude ".DS_Store" \
    $HOME/server /run/media/lucas/exfat/website'
