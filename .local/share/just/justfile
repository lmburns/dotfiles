set shell := ["zsh", "-uc"]

# default action with no parameters
default:
  @just --choose

alias e := edit
# edit this justfile
edit:
  @$EDITOR {{justfile()}}

alias h := help
# view example justfile
help:
  @$EDITOR $XDG_DATA_HOME/just/overall.just

#  ╭──────────────────────────────────────────────────────────╮
#  │                        Encryption                        │
#  ╰──────────────────────────────────────────────────────────╯

# rage encrypt ssh
rage-e ENC OUT:
  rage -R ~/.ssh/burnsac.pub -o {{invocation_directory()}}/{{OUT}} {{invocation_directory()}}/{{ENC}}

# rage decrypt ssh
rage-d DEC OUT:
  rage -d -i ~/.ssh/burnsac -o {{invocation_directory()}}/{{OUT}} {{invocation_directory()}}/{{DEC}}

#  ╭──────────────────────────────────────────────────────────╮
#  │                          System                          │
#  ╰──────────────────────────────────────────────────────────╯

# get cpu / memory
memory:
  @ps -A -o %cpu,%mem \
    | awk '{ cpu += $1; mem += $2} END {print "CPU: "  cpu,"MEM: "  mem}'

# refresh wifi
refresh-wifi:
  @ip link set wlp4s0 down && sleep 5 && ip link set wlp4s0 up

# systemctl enabled
systemctl-enabled:
  @systemctl list-unit-files --state=enabled

# systemctl all
systemctl-all:
  @systemctl list-unit-files --type=service

# disable sudo for dmesg
dmesg-sudo:
  @sudo sysctl -w kernel.dmesg_restrict=0

#  ╭──────────────────────────────────────────────────────────╮
#  │                         Package                          │
#  ╰──────────────────────────────────────────────────────────╯
#  ╭───────╮
#  │ Expac │
#  ╰───────╯

# expac recently installed
expac-recent SIZE="20":
  @expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n {{SIZE}} | tac | bat -l log

# expac upgrade/download
expac-updown:
  @expac -S -H M '%k\t%n' $(pacman -Qqu) | sort -sh

# expac search regex
expac-regex ARGS:
  @expac -Ss '%-30n %-8v %d' {{ARGS}}

# expac modified
expac-modified:
  @expac -S -H M '%k\t%n' $(pacman -Qqu) | sort -sh

#  ╭────────╮
#  │ Pacman │
#  ╰────────╯

# pacman search installed
pacman-installed:
  @paru -Qq \
    | fzf \
      --preview 'paru --color=always -Qil {}' \
      --layout=reverse --bind 'enter:execute(pacman -Qil {} | bat)' \
      --preview-window=':nohidden'

# pacman search all
pacman-all:
  @paru -Slq \
    | fzf --preview 'paru --color=always -Si {}' \
      --layout=reverse \
      --preview-window=':nohidden'

# pacman not dependent
pacman-unneeded:
  @paru -Qdtq \
    | fzf --preview 'paru --color=always -Qil {}' \
          --layout=reverse \
          --bind 'enter:execute(paru -Qil {} | bat)' \
          --bind '-:execute(paru -R {})' \
          --preview-window=':nohidden'

#  ╭──────────────────────────────────────────────────────────╮
#  │                           File                           │
#  ╰──────────────────────────────────────────────────────────╯

# append vim filetype modeline + foldmarker
modeline-fdm EXT FT:
  fd -tf -e {{EXT}} -x sed -i -e '$a/* vim: ft={{FT}}:et:sw=0:ts=2:sts=2:tw=100:fdm=marker:fmr='{{'[[[,]]]'}}':' {}

# append vim filetype modeline
modeline EXT FT:
  fd -tf -e {{EXT}} -x sed -i -e '$a/* vim: ft={{FT}}:et:sw=0:ts=2:sts=2:tw=100:' {}

#  ╭────────╮
#  │ Remote │
#  ╰────────╯

# mount ssh filesystem
ssh-mount DEST:
  sshfs -o allow_other,default_permissions,IdentityFile=~/.ssh/burnsac root@lmburns.com:/ {{DEST}}

# rsync general
rsync SRC DEST:
    rsync -rzau --info=FLIST,COPY,DEL,REMOVE,SKIP,SYMSAFE,MISC,NAME,PROGRESS,STATS --delete-after \
        --exclude ".DS_Store" --exclude ".ipynb_checkpoints" \
        {{SRC}} {{DEST}}

# rsync home dir
rsync-home:
    sudo rsync -rzau --delete-after --info=FLIST,COPY,DEL,REMOVE,SKIP,SYMSAFE,MISC,NAME,PROGRESS,STATS \
        $HOME /run/media/lucas/b7c5122b-4f9c-4068-840c-c9b0ab61c318/manual

# rsync projects directory
rsync-proj:
    pueue add 'xfsudo rsync -azurh --info=name0 ~/projects /run/media/lucas/macos/manual/'

# rsync/ssh from macbook
rsync-mac-from SRC DEST=invocation_directory():
    rsync_w macbook:{{SRC}} {{DEST}} --rsync-path=/usr/local/bin/rsync ;

tst:
    printenv

rsync-mac-to SRC DEST:
  rsync -kuvrP --exclude '**/target' {{SRC}} macbook:/Users/lucasburns/{{DEST}} ;

# rsync_w "$1" macbook:/Users/lucasburns/"$2" --rsync-path=/usr/local/bin/rsync ;

#   command rsync \
#     --recursive \
#     --update \
#     --partial \
#     --partial-dir=.rsync-tmp \
#     --one-file-system \
#     --compress \
#     --compress-choice=lz4 \
#     --checksum \
#     --checksum-choice=xxh128 \
#     --copy-links \
#     --copy-dirlinks \
#     --hard-links \
#     --times \
#     --open-noatime \
#     --perms \
#     --owner \
#     --group \
#     --numeric-ids \
#     --devices \
#     --specials \
#     --xattrs \
#     --acls \
#     --delete-after \
#     --human-readable \
#     --info=NAME1,FLIST2,COPY,DEL,REMOVE,SKIP1,SYMSAFE,NONREG1,MISC2,PROGRESS2,STATS2 \
#     --exclude-from=$XDG_CONFIG_HOME/rsync/rsyncignore \
#     ${(z)@[3,-1]} \
#     "$1" "$2"

# --exclude "/boot/*" \

# rsync server
rsync-server:
    rsync -rzau --info=FLIST,COPY,DEL,REMOVE,SKIP,SYMSAFE,MISC,NAME,PROGRESS,STATS \
        --exclude "/dev/*"   --exclude "/proc/*"     --exclude "/sys/*" \
        --exclude "/tmp/*"   --exclude "/run/*"      --exclude "/mnt/*" \
        --exclude "/media/*" --exclude "**/swapfile" --exclude "**/lost+found" \
        --delete-after \
        root@lmburns.com:/ /home/lucas/server/backup/_full/

# pull www folder server
www-pull:
    rsync -rzau --info=FLIST,COPY,DEL,REMOVE,SKIP,SYMSAFE,MISC,NAME,PROGRESS,STATS \
        --delete-after root@lmburns.com:/var/www $HOME/server

# push www folder server
www-push:
    rsync -rzau --info=FLIST,COPY,DEL,REMOVE,SKIP,SYMSAFE,MISC,NAME,PROGRESS,STATS \
        --delete-after --exclude ".DS_Store" $HOME/server /run/media/lucas/SSD

#  ╭──────────────────────────────────────────────────────────╮
#  │                           Git                            │
#  ╰──────────────────────────────────────────────────────────╯

# get the urls of dotfile repos
dot-urls:
  #!/usr/bin/env zsh
  [[ $PWD == $HOME/opt/dotfiles ]] || builtin cd $HOME/opt/dotfiles
  {
    () {
      sed -i "s,\x1B\[[0-9;]*[a-zA-Z],,g" $1;
      cat $1 >| out
    } =(mgit remote get-url origin)
  } && print -Pr "%F{13}Success%f"

# git-batch opt
batch-all:
  @gitbatch -r 2 -d $HOME/opt

# git-batch zinit
batch-zinit:
  @gitbatch -r 2 -d $ZINIT_HOME/plugins

# git-batch ghq
batch-ghq:
  @gitbatch -r 3 -d $HOME/ghq

# git-batch dotfiles
batch-dot:
  @gitbatch -r 3 -d $HOME/opt/dotfiles

#  ╭──────────────────────────────────────────────────────────╮
#  │                           Misc                           │
#  ╰──────────────────────────────────────────────────────────╯

# get weather
weather:
  @wttr '65202?format=3'

# get weather table
weather_full:
  @curl v2d.wttr.in/65202

# create a tomb
tomb SIZE="100" NAME="secret":
  #!/usr/bin/env zsh
  name="{{NAME}}"

  tomb dig -s "{{SIZE}}" "${name}.tomb" -f
  print -P "%F{1}Created%f: %F{2}${name}.tomb%f"

  tomb forge "${name}.tomb.key" -gr E93ACCAAAEB024788C106EDEC011CBEF6628B679 -f
  print -P "%F{1}Created%f: %F{2}${name}.tomb.key%f"

  tomb lock "${name}.tomb" -k "${name}.tomb.key" -f
  print -P "%F{1}Locked%f: %F{2}${name}.tomb%f"

  tomb open "${name}.tomb" -k "${name}.tomb.key" -f
  print -P "%F{1}Opened%f: %F{2}${name}.tomb%f"
